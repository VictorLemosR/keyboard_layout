CAP’ITULO DEZESSETE  O segredo de Batilda  HARRY, PARE.  Que foi? Tinham acabado de alcan’car o t’umulo do Abbott desconhecido.  Tem algu’em ali. Algu’em nos observando. Sinto. Ali, perto dos arbustos. Eles ficaram muito quietos, abra’cados, olhando a densa sebe escura em torno do cemit’erio. Harry n~ao conseguia enxergar nada.  Tem certeza?  Vi uma coisa se mexer. Poderia jurar que vi. Ela o largou para deixar livre a m~ao da varinha.  Estamos parecendo trouxas  lembrou Harry.  Trouxas que acabaram de depositar flores no t’umulo dos pais! Harry, tenho certeza de que h’a algu’em ali! Harry pensou no Hist’oria da magia; diziam que o cemit’erio era malassombrado: e se.? Ent~ao, ele ouviu um ru’ido abafado e viu um montinho de neve deslocada no arbusto para o qual Hermione apontara. Fantasmas n~ao deslocam neve.  ‘E um gato  disse Harry, ap’os alguns segundos  ou um p’assaro. Se fosse um Comensal da Morte j’a estar’iamos mortos. Mas vamos sair daqui e poderemos tornar a vestir a capa. Eles olharam para tr’as v’arias vezes enquanto se dirigiam `a sa’ida do cemit’erio. Harry, que n~ao se sentia t~ao corajoso quanto fingia estar quando tranquilizou Hermione, ficou feliz de alcan’car o port~ao e a cal’cada escorregadia. Tornaram, ent~ao, a se cobrir com a Capa da Invisibilidade. O bar estava mais cheio do que antes: vozes em seu interior agora cantavam a can’c~ao natalina que tinham ouvido ao se aproximar da igreja. Por um momento, Harry pensou em sugerir que se refugiassem ali, mas, antes que pudesse falar, Hermione murmurou:  Vamos por aqui.  E puxouo pela rua escura, que sa’ia da aldeia, na dire’c~ao oposta `aquela da qual tinham vindo. Harry divisou ao longe o ponto em que os chal’es terminavam e a estradinha entrava em campo aberto. Eles caminharam o mais r’apido que ousaram, passaram por outras tantas janelas em que cintilavam luzes multicoloridas, os contornos de ‘arvores de Natal erguendo sombras atrav’es das cortinas.  Como vamos encontrar a casa da Batilda?  perguntou Hermione, que tremia um pouco e n~ao parava de espiar por cima do ombro.  Harry? Que acha? Harry? Ela puxouo pelo bra’co, mas Harry n~ao a escutara. Estava olhando para uma massa escura onde acabavam as casas. No momento seguinte, ele acelerou o passo, arrastando Hermione; ela escorregou um pouco no gelo.  Harry.  Olhe. olhe aquilo, Hermione.  N~ao estou. ah! Ele estava vendo; o Feiti’co Fidelius devia ter se extinguido com Tiago e L’ilian. A sebe crescera livremente nos dezesseis anos desde que Hagrid retirara Harry dos escombros ainda espalhados pelo capim, que chegava `a cintura. A maior parte do chal’e permanecia de p’e, embora inteiramente coberta de hera escura e neve, mas o lado direito do andar superior explodira; por ali, Harry estava seguro, o feiti’co se voltara contra quem o lan’cara. Ele e Hermione pararam ao port~ao, contemplando as ru’inas do que tinha sido, no passado, uma casa exatamente como as vizinhas.  Por que ser’a que ningu’em a reconstruiu?  sussurrou Hermione.  Talvez n~ao se possa reconstru’ila? Talvez seja como os ferimentos produzidos pelas Artes das Trevas que n~ao s~ao cur’aveis? Ele passou a m~ao para fora da capa e segurou o port~ao muito enferrujado e coberto de neve, sem querer abrilo, mas tentando, simplesmente, tocar alguma parte da casa.  Você n~ao vai entrar, vai? Parece perigoso, pode. ah, Harry, olhe! Seu toque no port~ao parecia ter bastado. Erguerase uma placa diante deles, atrav’es do emaranhado de urtigas e ervas daninhas, como uma flor bizarra que crescesse instantaneamente e, na inscri’c~ao dourada na madeira, ele leu: Neste local, na noite de 31 de outubro de 1981, L’ilian e Tiago Potter perderam a vida. Seu filho, Harry, ‘e o ‘unico bruxo a ter sobrevivido `a Maldi’c~ao da Morte. Esta casa, invis’ivel aos trouxas, foi mantida em ru’inas como um monumento aos Potter e uma lembran’ca da violência que destruiu sua fam’ilia. A toda volta desse texto conciso, havia rabiscos feitos por outros bruxos que tinham visitado o local em que OMeninoQueSobreviveu realizara tal feito. Alguns assinaram seus nomes em tinta perp’etua; outros gravaram as iniciais na madeira, outros, ainda, deixaram mensagens. As mais recentes, que se destacavam, reluzentes, sobre os dezesseis anos de grafitos m’agicos, diziam mais ou menos o mesmo: Boa sorte, Harry, onde quer que esteja. Se ler esta mensagem, Harry, saiba que estamos com você! Viva Harry Potter.  Eles n~ao deviam ter rabiscado a placa!  comentou Hermione, indignada. Harry, por’em, sorriu para ela.  ‘E genial. Fico feliz que tenham escrito. Eu. E se calou. Um vulto muito agasalhado capengava pela estradinha em sua dire’c~ao, recortado pela ilumina’c~ao clara, na pra’ca ao longe. Harry achou, embora fosse dif’icil julgar, que era o vulto de uma mulher. Ela se movia com lentid~ao, possivelmente receosa de escorregar no ch~ao nevado. Suas costas curvadas, sua corpulência, seu andar arrastado, tudo indicava uma idade muito avan’cada. Eles observaram sua aproxima’c~ao em silêncio. Harry estava aguardando para ver se ela entraria em um dos chal’es pelo caminho, mas sabia, instintivamente, que n~ao faria isso. Por fim, ela parou a uns poucos metros dos dois e, simplesmente, ficou ali no meio da rua congelada, encarandoos. Ele n~ao precisou que Hermione beliscasse seu bra’co. Praticamente n~ao havia chance de que a mulher fosse trouxa: estava parada de olhos pregados em uma casa que lhe seria inteiramente invis’ivel se n~ao fosse bruxa. Mesmo supondo que fosse uma bruxa, no entanto, era um comportamento estranho sair em uma noite t~ao fria, simplesmente para contemplar uma velha ru’ina. Pelas regras da magia normal, ela n~ao deveria poder vêlos. Contudo, Harry tinha a estranha impress~ao de que sabia da presen’ca deles ali, e tamb’em sabia quem eram. No momento em que ele chegou a essa inquietante conclus~ao, a mulher ergueu a m~ao enluvada e fez sinal para que se aproximassem. Hermione se achegou a Harry sob a capa, seu bra’co comprimindo o dele.  Como ‘e que ela sabe? Ele sacudiu a cabe’ca. A mulher tornou a cham’alos, mais energicamente. Harry poderia pensar em muitas raz~oes para n~ao obedecer, contudo, suas suspeitas a respeito da identidade dela tornavamse mais fortes a cada segundo em que continuavam parados, se encarando na rua deserta. Seria poss’ivel que estivesse esperando por eles todos esses longos meses? Que Dumbledore lhe tivesse dito para esperar porque Harry acabaria aparecendo? N~ao seria prov’avel que fosse a coisa que se mexera nas sombras do cemit’erio e os seguira at’e ali? At’e a sua capacidade de sentilos sugeria um poder `a la Dumbledore, que ele jamais encontrara. Harry, por fim, falou, fazendo Hermione ofegar sobressaltada.  A senhora ‘e Batilda? O vulto agasalhado assentiu e tornou a lhes fazer sinal para se aproximarem. Sob a capa, Harry e Hermione se entreolharam. Ele ergueu as sobrancelhas; Hermione fez um aceno breve e nervoso com a cabe’ca. Os dois foram ao encontro da mulher e, na mesma hora, ela deu meiavolta e saiu manquejando pelo caminho que viera. Conduzindoos pela fileira de casas, entrou por um port~ao. Os garotos a seguiram por um caminho ladeado por um jardim quase t~ao crescido quanto o que tinham acabado de deixar. Ela se atrapalhou um instante com a chave `a porta, abriua e se afastou para deix’alos entrar. A bruxa cheirava mal, ou talvez fosse a casa: Harry torceu o nariz ao passarem por ela, e tirou a capa. Agora ao seu lado, o garoto percebeu como era mi’uda; curvada pela idade, mal alcan’cava o seu peito. A bruxa fechou a porta, as juntas dos dedos azuis e manchados contra a tinta descascada, ent~ao se virou e espiou o rosto de Harry. Seus olhos tinham cataratas e pregas fundas de pele transparente, e todo o seu rosto era riscado de pequenas veias rompidas e manchas marrons. Ele ficou em d’uvida se a mulher realmente poderia vêlo; e, mesmo que pudesse, o que veria se n~ao o trouxa careca cuja identidade ele roubara? O odor de velhice, de poeira, de roupas sujas e de comida ran’cosa piorou quando ela retirou o xale preto ro’ido de tra’cas, revelando uma cabeleira branca e rala que deixava vis’ivel o couro cabeludo.  Batilda?  repetiu Harry. Ela tornou a assentir. Harry percebeu a presen’ca do medalh~ao contra sua pele; a coisa ali dentro, que por vezes batia, acabara de despertar; ele a sentia pulsar atrav’es do ouro frio. Ser’a que entendia que a coisa que a destruiria estava t~ao perto? Batilda passou por eles arrastando os p’es, empurrando Hermione para o lado como se n~ao a tivesse visto e desapareceu, provavelmente em uma sala de visitas.  Harry, n~ao me sinto muito segura  sussurrou Hermione.  Olhe o tamanho dela; acho que poder’iamos domin’ala, se fosse preciso  comentou Harry.  Escute, devia ter lhe dito, eu j’a sabia que n~ao est’a batendo bem da bola. Muriel chamoua de gag’a.  Entre!  convidou Batilda da sala vizinha. Hermione se assustou e agarrou o bra’co de Harry.  Tudo bem  disse ele, tranquilizandoa, e entrou `a sua frente. Batilda andava vacilante pela sala, acendendo velas, mas o lugar continuava muito escuro, para n~ao falar de sua extrema sujeira. Os p’es de Harry esmagavam uma grossa camada de poeira e seu nariz sentia, sob o odor de mofo e umidade, algo pior, talvez carne estragada. Perguntouse quando teria sido a ‘ultima vez que algu’em viera `a casa de Batilda para verificar se estava tudo bem. Ela parecia ter esquecido seus dotes de magia, porque se atrapalhava acendendo as velas, seus punhos de renda em constante risco de pegar fogo.  Deixeme ajud’ala  ofereceuse Harry, tirando os f’osforos de sua m~ao. Ela o observou terminar de acender os tocos de vela sobre pires por toda a sala, precariamente equilibrados sobre pilhas de livros e mesinhas laterais cheias de copos rachados e bolorentos. A ‘ultima superf’icie em que Harry localizou uma vela foi uma cômoda bom b’ee, em que havia um grande n’umero de fotografias. Ao acender a vela, a chama se refletiu nos vidros e portaretratos de prata empoeirados. Ele viu as fotos se mexerem brevemente. Enquanto Batilda apanhava umas achas de lenha para a lareira, Harry murmurou Tergeo. A poeira desapareceu das fotos e ele viu imediatamente que faltava uma meia d’uzia delas nos portaretratos mais trabalhados. Ficou em d’uvida se Batilda ou outra pessoa as teria removido. Ent~ao, a vis~ao de uma foto mais ao fundo da cole’c~ao atraiu sua aten’c~ao, e ele a apanhou. Era o ladr~ao de cabelos dourados e rosto risonho, o rapaz que se empoleirara no peitoril da janela de Gregorovitch, sorrindo indolentemente para Harry, em seu portaretrato de prata. E ocorreulhe instantaneamente onde o vira antes: em A vida e as mentiras de Alvo Dumbledore de bra’co dado com Dumbledore, e devia ser l’a que estavam as fotos desaparecidas: no livro de Rita.  Sra. srta. Bagshot?  disse ele, e sua voz tremeu um pouco.  Quem ‘e ele? Batilda estava parada no meio da sala observando Hermione acender o fogo para ela.  Srta. Bagshot?  repetiu Harry, e adiantouse com a foto nas m~aos, no instante em que as achas pegavam fogo na lareira. Batilda ergueu os olhos ao ouvilo, e a Horcrux bateu mais r’apido em seu peito. Quem ‘e esse rapaz?, perguntou Harry, estendendo a foto. Batilda olhou solenemente para a foto e em seguida para Harry.  A senhorita sabe quem ‘e?  insistiu em um tom mais lento e alto do que o normal.  Esse rapaz? A senhorita o conhece? Como ‘e o nome dele? Batilda tinha um ar hesitante. Harry sentiu uma horr’ivel frustra’c~ao. Como Rita fizera aflorar as lembran’cas da bruxa?  Quem ‘e esse rapaz?  perguntou, mais uma vez, em voz alta.  Harry, que est’a fazendo?  indagou Hermione.  A foto, Hermione, ‘e do ladr~ao, o ladr~ao que roubou Gregorovitch! Por favor!  pediu ele a Batilda.  Quem ‘e? Ela, por’em, continuou olhando calada.  Por que a senhora nos pediu para acompanh’ala, sra. srta. Bagshot?  perguntou Hermione, tamb’em alteando a voz.  A senhora queria nos dizer alguma coisa? Sem dar sinal de ter ouvido Hermione, Batilda agora se adiantou para Harry. Com um pequeno movimento de cabe’ca, ela espiou para o hall de entrada.  Quer que a gente v’a embora?  perguntou ele. Ela repetiu o gesto, desta vez apontando primeiro para ele, depois para si mesma e, em seguida, para o teto.  Ah, certo. Hermione, acho que ela quer que eu suba com ela.  Est’a bem, vamos. Quando, por’em, Hermione come’cou a andar, Batilda sacudiu a cabe’ca com surpreendente energia, e mais uma vez apontou para Harry, depois para si mesma.  Quer que eu v’a com ela, sozinho.  Por quê?  perguntou Hermione, e sua voz soou alta e r’ispida na sala iluminada a velas; a velha sacudiu levemente a cabe’ca de leve ao ouvir o barulho.  Talvez Dumbledore tenha dito para entregar a espada a mim e somente a mim?  Você realmente acha que ela sabe quem você ‘e?  Acho  respondeu Harry, olhando para os olhos esbranqui’cados fixos nos dele.  Acho que sabe.  Bem, ent~ao o.k., mas seja r’apido, Harry.  V’a na frente  disse Harry a Batilda. Ela pareceu entender, porque passou por ele e se encaminhou para a porta. Harry olhou para tr’as e sorriu querendo tranquilizar Hermione, mas n~ao sabia se a amiga teria visto o seu gesto; ela parou apertando o corpo com os bra’cos em meio `a sujeira iluminada a velas, o olhar na estante. Quando Harry foi saindo da sala, sem que Hermione ou Batilda vissem, ele guardou, no palet’o, o portaretrato de prata com a foto do ladr~ao desconhecido. Os degraus eram altos e estreitos: Harry se sentiu tentado a colocar as m~aos nas n’adegas da corpulenta Batilda para garantir que n~ao ca’isse de costas por cima dele, o que parecia extremamente prov’avel. Devagar, arquejando um pouco, ela subiu ao primeiro andar, virou `a direita e levouo para um quarto de teto baixo. Estava muito escuro e fedia horrivelmente: Harry acabara de divisar a borda de um penico embaixo da cama quando Batilda fechou a porta e at’e isso foi engolido pela escurid~ao.  Lumos  disse Harry, e sua varinha acendeu. Levou um susto: Batilda se aproximara dele naqueles segundos de escurid~ao, e ele nem a ouvira.  Você ‘e Potter?  sussurrou ela.  Sim, sou. Ela assentiu lenta e solenemente. Harry sentiu a Horcrux batendo depressa, mais depressa do que o seu pr’oprio cora’c~ao: foi uma sensa’c~ao desagrad’avel e enervante.  A senhora tem alguma coisa para mim?  perguntou Harry, mas a bruxa pareceu se distrair com a ponta acesa de sua varinha. A senhora tem alguma coisa para mim?, repetiu ele. Ent~ao, ela fechou os olhos e v’arias coisas aconteceram ao mesmo tempo: a cicatriz de Harry ardeu dolorosamente; a Horcrux vibrou tanto que o peito do su’eter do garoto chegou a mexer; o quarto escuro e f’etido se dissolveu momentaneamente. Ele sentiu uma s’ubita sensa’c~ao de alegria e falou com uma voz aguda e fria: segureo! Harry oscilou sem sair do lugar: o quarto escuro e malcheiroso pareceu tornar a se fechar ao seu redor; ele n~ao sabia o que acabara de acontecer.  A senhora tem alguma coisa para mim?  perguntou, pela terceira vez, bem mais alto.  Aqui  sussurrou ela, apontando para um canto. Harry ergueu a varinha e viu os contornos de uma penteadeira muito cheia sob uma janela com cortinas. Desta vez, Batilda n~ao foi `a frente. Harry passou entre ela e a cama desfeita, a varinha erguida. N~ao queria tirar os olhos dela.  Que ‘e?  indagou ao chegar `a penteadeira em que havia uma pilha de alguma coisa que, pelo cheiro e aspecto, parecia roupa de cama suja.  Ali  disse ela apontando para a massa informe. E, no instante em que ele virou a cabe’ca e varreu com o olhar o amontoado confuso `a procura de um punho de espada, um rubi, ela fez um movimento estranho: Harry percebeuo pelo canto do olho; o pânico fez com que se voltasse e o horror o paralisou ao ver o velho corpo se despojar e uma grande cobra sair do lugar onde fora o pesco’co da bruxa. A cobra atacouo quando ele ergueu a varinha: a for’ca da mordida em seu bra’co fez a varinha girar para o alto em dire’c~ao ao teto, sua luz rodopiou sem dire’c~ao pelo quarto e se apagou: ent~ao, um poderoso golpe de cauda em seu diafragma deixouo completamente sem ar: ele tombou de costas sobre a penteadeira, no meio do monte de roupa imunda. Harry rolou para o lado, evitando, por um triz, o rabo da cobra, que golpeava a penteadeira onde ele estivera um segundo antes; cacos da superf’icie de vidro choveram sobre ele quando bateu no ch~ao. L’a de baixo, ele ouviu Hermione chamar:  Harry? N~ao conseguiu, por’em, repor ar suficiente nos pulm~oes para responder: ent~ao uma massa lisa e pesada esmagouo contra o ch~ao e ele a sentiu deslizar por cima dele, forte, musculosa.  N~ao!  ofegou, preso ao ch~ao.  Sim  sussurrou a voz.  Sssim. seguro você. seguro você.  Accio. Accio varinha. Nada aconteceu, por’em, e ele precisava das m~aos para tentar empurrar para longe a cobra que se enrolava em torno do seu tronco, tirandolhe o ar, comprimindo a Horcrux contra seu peito, um c’irculo de gelo que pulsava de vida, a cent’imetros do seu pr’oprio cora’c~ao disparado, e seu c’erebro se inundava de luz branca e fria, obliterando todo pensamento, sua respira’c~ao sufocada, passos distantes, tudo indo. Um cora’c~ao de metal batia fora do seu peito, e agora ele estava voando, voando sentindo o triunfo em seu cora’c~ao, sem precisar de vassoura nem de testr’alio. Harry foi bruscamente acordado na escurid~ao fedorenta; Nagini o soltara. Ele se levantou com ajuda dos bra’cos e viu a cobra recortada contra a luz do corredor: ela atacou, e Hermione atirouse para o lado com um grito. Seu feiti’co se desviou e bateu na janela cortinada, despeda’candoa. O ar gelado encheu o quarto no momento em que Harry mergulhou para evitar mais uma chuva de cacos de vidro e seu p’e escorregou em um objeto cil’indrico  sua varinha. Ele se abaixou e apanhoua, mas agora o quarto estava dominado pela cobra, que golpeava com o rabo; Hermione n~ao estava `a vista e, por um momento, Harry pensou o pior, mas ouviu, ent~ao, um estampido alto e um clar~ao vermelho, e a cobra voou pelo ar atingindo com for’ca o rosto do garoto; ao subir, volta a volta, o animal foi desenrolando, em dire’c~ao ao teto. Harry ergueu a varinha, mas, ao fazêlo, sua cicatriz queimou mais dolorosamente, mais intensamente do que fizera em anos.  Ele est’a vindo! Hermione, ele est’a vindo! Enquanto Harry berrava, a cobra caiu, sibilando ferozmente. Instaurouse o caos: a cobra destruiu as prateleiras na parede e cacos de porcelana voaram para todo lado no momento em que Harry saltava por cima da cama e agarrava a forma escura que ele sabia ser Hermione. Ela gritou de dor ao ser puxada por cima da cama: a cobra tornou a armar um bote, mas Harry sabia que algo pior do que o animal estava a caminho, talvez j’a estivesse no port~ao, sua cabe’ca ia rachar de dor na cicatriz. A cobra avan’cou quando ele deu um salto veloz, arrastando Hermione junto; quando Nagini atacou, Hermione gritou: Confringo!, e o feiti’co voou pelo quarto, explodindo o espelho do guardaroupa e ricocheteando contra eles, quicando do ch~ao ao teto; Harry sentiu o calor do feiti’co queimar o dorso de sua m~ao. Cacos do espelho cortaramlhe a face no momento em que, puxando Hermione, saltou da cama para a penteadeira desmantelada e, dali, direto para a janela estilha’cada e o v’acuo, o grito dela ecoando pela noite enquanto rodopiavam pelo ar. Ent~ao, sua cicatriz se rompeu e ele era Voldemort e estava correndo pelo quarto f’etido, as m~aos longas e brancas agarrando o peitoril da janela ao vislumbrar o homem careca e a mulher mi’uda girarem e desaparecerem, e ele gritou enfurecido, um grito que se fundiu ao da garota e ecoou pelos jardins escuros e se sobrepôs ao repique dos sinos da igreja no dia de Natal. E seu grito foi o grito de Harry, sua dor, a dor de Harry. que pudesse acontecer ali, onde acontecera antes. ali, `a vista da casa onde ele chegara t~ao perto de saber o que era morrer. morrer. a dor era t~ao terr’ivel. irrompia do seu corpo. mas, se n~ao tinha corpo, por que sua cabe’ca do’ia tanto, se estava morto, como poderia sentila de forma t~ao insuport’avel, a dor n~ao cessava com a morte, n~ao ia. A noite ‘umida de ventania, duas crian’cas vestidas de ab’oboras atravessavam a pra’ca bamboleando, e as vitrines das lojas cobertas de aranhas de papel, todos os adornos baratos e kitsch dos trouxas simbolizando um mundo em que eles n~ao acreditavam. e ele seguia deslizando, aquele senso de prop’osito e poder e corre’c~ao que sempre experimentava nessas ocasi~oes. n~ao raiva. isso era para almas mais fracas que ele. mas triunfo, sim. esperara por isso, desejara isso.  Bonita fantasia, mo’co! Ele viu o sorriso do menino vacilar quando se aproximou o suficiente para espiar sob o capuz da capa, viu o medo anuviar o rostinho pintado: ent~ao a crian’ca deu meiavolta e fugiu correndo. por baixo da veste, ele acariciou o punho da varinha. um simples movimento e a crian’ca jamais chegaria `a m~ae. mas desnecess’ario, muito desnecess’ario. E, ao longo de uma rua mais escura, ele caminhou, e agora seu destino estava finalmente `a vista, o Feiti’co Fidelius desfeito, embora os moradores ainda n~ao soubessem. e ele fez menos ru’ido do que as folhas mortas que esvoa’cavam pela cal’cada quando se emparelhou com a sebe escura e espiou por cima. Eles n~ao tinham fechado as cortinas, viuos claramente na pequena sala de visitas, o homem alto de cabelos negros e ‘oculos, fazendo baforadas de fuma’ca colorida sa’irem de sua varinha para divertir o menininho de cabelos negros e pijama azul. A crian’ca ria e tentava pegar a fuma’ca, segur’ala em sua m~aozinha fechada. Uma porta abriu e a m~ae entrou, dizendo palavras que ele n~ao pôde ouvir, seus longos cabelos acaju caindo pelo rosto. O pai ergueu o filho do ch~ao e entregouo `a m~ae. Atirou a varinha sobre o sof’a e se espregui’cou, bocejando. O port~ao rangeu um pouco quando ele o abriu, mas Tiago Potter n~ao ouviu. Sua m~ao branca tirou a varinha de sob a capa e apontoua para a porta que se abriu com violência. J’a cruzara a porta quando Tiago chegou correndo ao hall. Foi f’acil, f’acil demais, ele nem chegara a apanhar a varinha.  L’ilian, pegue Harry e v’a! ‘E ele! V’a! Corra! Eu o atraso. Detêlo, sem uma varinha na m~ao!. Ele riu antes de lan’car a maldi’c~ao.  Avada Kedavra! O clar~ao verde inundou o hall apertado, iluminou o carrinho de bebê encostado `a parede, fez os bala’ustres da escada lampejarem como raios e Tiago Potter caiu como uma marionete cujos cord~oes tivessem sido cortados. Ele ouviu a mulher gritar no primeiro andar, encurralada, mas, enquanto tivesse bom senso, ela, pelo menos, nada teria a temer. ele subiu a escada, achando gra’ca nos esfor’cos que ela fazia para se entrincheirar no. ela tamb’em n~ao tinha varinha. como eram idiotas e confiantes em julgar que sua seguran’ca eram os amigos, que as armas poderiam ser postas de lado mesmo por instantes. Ele arrombou a porta, atirou para o lado a cadeira e as caixas apressadamente empilhadas para defendêla com um displicente aceno da varinha. e ali estava ela, a crian’ca nos bra’cos. Ao vêlo, L’ilian largou o filho no ber’co `as suas costas e abriu bem os bra’cos, como se isso pudesse adiantar, como se ocultandoo esperasse ser escolhida como alvo.  O Harry n~ao, o Harry n~ao, por favor, o Harry n~ao!  Afastese, sua tola. afastese, agora.  Harry n~ao, por favor, n~ao, me leve, me mate no lugar dele.  Este ‘e o meu ‘ultimo aviso.  Harry n~ao! Por favor. tenha piedade. tenha piedade. Harry n~ao! Harry n~ao! Por favor. farei qualquer coisa.  Afastese. afastese, garota. Ele poderia têla afastado do ber’co `a for’ca, mas lhe pareceu mais prudente liquidar todos. O clar~ao verde lampejou pelo quarto e ela tombou como o marido. Todo esse tempo, a crian’ca n~ao gritara: sabia ficar em p’e segurando as grades do ber’co, e ergueu os olhos para o rosto do intruso com uma esp’ecie de vivo interesse, talvez achando que fosse seu pai escondido sob a capa, e que ele produziria mais luzes bonitas, e sua m~ae reapareceria a qualquer momento, rindo. Ele apontou a varinha certeiramente para o rosto do menino: queria ver acontecer, a destrui’c~ao desse perigo inexplic’avel. A crian’ca come’cou a chorar: notara que ele n~ao era Tiago. N~ao gostava de bebê chorando, nunca fora capaz de suportar as criancinhas choramingando no orfanato.  Avada Kedavra! Ent~ao ele sucumbiu: n~ao era mais nada exceto dor e terror e precisava se esconder, n~ao aqui nos destro’cos da casa em ru’inas, onde a crian’ca estava presa, aos berros, mas longe. longe.  N~ao  gemeu ele. A cobra se arrastou pelo ch~ao imundo e atravancado, e ele matara o garoto, contudo ele era o garoto.  N~ao. Agora estava parado `a janela estilha’cada da casa de Batilda, absorto nas lembran’cas de sua maior perda, e a seus p’es a enorme cobra rastejava pelos cacos de porcelana e vidro. ele baixou os olhos e viu algo. algo inacredit’avel.  N~ao.  Harry, est’a tudo bem, você est’a bem! Ele se abaixou e apanhou a foto amassada. Ali estava ele, o ladr~ao desconhecido, o ladr~ao que ele estava procurando.  N~ao. eu a deixei cair. eu a deixei cair.  Harry, tudo bem, acorde, acorde! Ele era Harry. Harry, e n~ao Voldemort. e a coisa que fazia o ru’ido abafado n~ao era uma cobra. Abriu os olhos.  Harry  sussurrou Hermione.  Você est’a se sentindo. bem?  Estou  mentiu ele. Estava na barraca, deitado em uma das camas baixas do beliche, sob uma montanha de cobertores. Percebia que era quase manh~a pela quietude e friagem, a luz p’alida al’em do teto da barraca. Ele estava encharcado de suor; sentia o suor nos len’c’ois e cobertores.  Escapamos.  Sim  disse Hermione.  Precisei usar o Feiti’co de Levita’c~ao para deitar você no beliche, n~ao consegui levant’alo. Você esteve. bem, você n~ao esteve muito. Havia olheiras arroxeadas sob seus olhos castanhos e ele viu uma pequena esponja em sua m~ao: Hermione estivera enxugando o rosto dele.  Você esteve doente  ela terminou a frase.  Muito doente.  Quanto tempo faz que partimos?  Horas. Est’a quase amanhecendo.  E eu estive. o quê, inconsciente?  N~ao, exatamente  respondeu Hermione constrangida.  Esteve gritando e gemendo e. coisas  acrescentou em um tom que deixou Harry inquieto. Que teria feito? Berrara maldi’c~oes como Voldemort; chorara como o bebê no ber’co? N~ao consegui retirar a Horcrux de você, disse Hermione, e ele percebeu que a amiga queria mudar de assunto. Ficou presa, presa no seu peito. Deixou uma marca; lamento. Tive de usar o Feiti’co de Corte para solt’ala. A cobra tamb’em o mordeu, mas limpei o ferimento e apliquei um pouco de ditamno. Ele arrancou do corpo a camiseta suada que usava e olhou para baixo. Havia uma oval escarlate sobre seu cora’c~ao, onde o medalh~ao o queimara. Viu tamb’em as marcas de furos quase cicatrizadas em seu bra’co.  Onde guardou a Horcrux?  Na minha bolsa. Acho que n~ao dev’iamos us’ala por um tempo. Ele se recostou nos travesseiros e fitou o rosto atormentado e cinzento de Hermione.  N~ao dev’iamos ter ido a Godrics Hollow. Foi minha culpa, minha inteira culpa, sinto muito.  N~ao foi sua culpa. Eu quis ir tamb’em; realmente pensei que Dumbledore tivesse deixado a espada l’a para você.  ‘E, bem. entendemos mal, n~ao foi?  Que aconteceu, Harry? Que aconteceu quando ela o levou pra cima? A cobra estava escondida em algum lugar? E simplesmente saiu e a matou e atacou você?  N~ao. Ela era a cobra. ou a cobra era ela. todo o tempo.  Qquê? Ele fechou os olhos. Ainda podia sentir o cheiro da casa de Batilda em seu corpo: isso tornava o epis’odio pavorosamente v’ivido.  Batilda devia estar morta havia algum tempo. A cobra estava. estava dentro dela. VocêSabeQuem levoua para Godrics Hollow para esperar. Você tinha raz~ao. Ele sabia que eu voltaria.  A cobra estava dentro dela? Ele reabriu os olhos: Hermione parecia revoltada, nauseada.  Lupin disse que haveria magia que jamais imagin’aramos existir  respondeu Harry.  Ela n~ao quis falar na sua frente porque era a linguagem das cobras, pura ofidioglossia, e n~ao percebi, mas ‘e claro que a entendi. Uma vez no quarto, a cobra mandou uma mensagem a VocêSabeQuem, ouvi a transmiss~ao em minha cabe’ca, sentio excitado, disse para me segurar l’a. ent~ao. Lembrouse da cobra saindo do pesco’co de Batilda: Hermione n~ao precisava conhecer os detalhes.  . ela se transformou, se transformou em uma cobra e me atacou. Harry baixou os olhos para as marcas dos furos.  N~ao era para me matar, s’o para me segurar ali at’e VocêSabeQuem chegar. Se ele ao menos tivesse conseguido matar a cobra, teria valido a pena tudo. Desgostoso, sentouse e atirou as cobertas para o lado.  Harry, n~ao, tenho certeza que precisa descansar!  Você ‘e que precisa dormir. Sem querer ofender, você est’a com uma cara horr’ivel. Estou ‘otimo. Vou fazer a vigia por um tempo. Onde est’a minha varinha? Ela n~ao respondeu, olhouo apenas.  Onde est’a minha varinha? Ela mordeu os l’abios e as l’agrimas encheram seus olhos.  Harry.  Onde est’a minha varinha? Hermione se abaixou para apanh’ala ao lado da cama e entregoua. A varinha de azevinho e fênix estava quase partida ao meio. Um fr’agil fio de pena de fênix mantinha as metades penduradas. A madeira rachara inteiramente. Harry apanhou o objeto como se fosse um organismo vivo que tivesse sofrido um grave ferimento. N~ao conseguiu pensar direito: tudo pareceu uma fus~ao de pânico e medo. Estendeu, ent~ao, a varinha para Hermione.  Consertea. Por favor.  Harry, acho que quando se parte assim.  Por favor, Hermione, tente!  Rreparo. A parte pendurada da varinha tornou a emendar. Harry empunhoua.  Lumus! A varinha soltou uma faisquinha e se apagou. Harry apontoua para Hermione.  Expelliarmus! A varinha de Hermione sacudiu, mas n~ao se soltou de sua m~ao. A fraca tentativa de magia foi demais para a varinha, que tornou a se partir em dois. Harry contemploua, consternado, incapaz de absorver o que estava vendo. a varinha que sobrevivera a tanto.  Harry  Hermione sussurrou t~ao baixinho que ele quase n~ao pôde ouvila.  Sinto muito mesmo. Acho que fui eu. Quando est’avamos indo embora, entende, a cobra avan’cou para n’os, ent~ao lancei um Feiti’co Detonador e ele ricocheteou para todo lado e deve ter. deve ter atingido.  Foi um acidente  disse Harry, maquinalmente. Sentiase vazio, atordoado.  Encontraremos. encontraremos um jeito de consert’ala.  Harry, acho que n~ao conseguiremos  disse Hermione, as l’agrimas escorrendo pelo rosto.  Lembra. lembra o Rony? Quando partiu a varinha no acidente com o carro? Nunca mais foi a mesma, ele teve que comprar uma nova. Harry pensou em Olivaras, sequestrado e ref’em de Voldemort, em Gregorovitch, que estava morto. Como iria encontrar uma varinha nova?  Bem  replicou Harry, em um tom falsamente objetivo , bem, acho que por ora precisarei pedir a sua emprestada. Enquanto vigio. O rosto brilhando de l’agrimas, Hermione entregou a varinha e Harry saiu, deixandoa sentada junto `a cama dele, nada mais desejando sen~ao ficar longe da amiga.
 
Querida Kitty Ontem houve outro barulho. Mam~ae armou um banz’e dos diabos dizendo a papai tudo o que pensava a meu respeito. Depois, teve uma crise de choro, e ‘e claro que eu tamb’em desatei em l’agrimas. De qualquer forma, fiquei com uma terr’ivel dor de cabe’ca. No final, eu disse a papai que gostava muito mais dele do que dela, e ele respondeu que isso ia passar. N~ao acredito que passe. Com mam~ae tenho de me controlar para n~ao perder a calma. Papai quer que eu, `as vezes, me ofere’ca para ajudar mam~ae, quando ela n~ao est’a passando bem ou est’a com dor de cabe’ca. Mas n~ao vou fazer isso. Estou estudando francês um bocado, e agora estou lendo La belle nivernaise. Sua Anne. Sextafeira, 9 de outubro de 1942     Querida Kitty Hoje s’o tenho not’icias tristes e deprimentes para lhe contar. Nossos amigos judeus est~ao sendo levados embora `as d’uzias. Essa gente est’a sendo tratada pela Gestapo sem um m’inimo de decência. S~ao amontoados em vag~oes de gado e enviados para Westerbork, o grande campo de concentra’c~ao para judeus, em Drente. Westerbork parece ser terr’ivel: um ‘unico lavat’orio para centenas de pessoas e muito poucas privadas. N~ao h’a acomoda’c~oes separadas para homens e mulheres, e todos têm que dormir juntos. Dizem que h’a muita imoralidade por causa disso, e muitas mulheres e at’e mocinhas obrigadas a ficar l’a por muito tempo ficam esperando bebê. Fugir ‘e imposs’ivel; os internados ficam marcados pela sua cabe’ca raspada ou pela sua aparência judia. Se ‘e t~ao ruim na Holanda, imagine o que n~ao ser’a nas regi~oes b’arbaras e distantes para onde s~ao enviados? Sabemos que a maioria ‘e assassinada. A r’adio inglesa fala de morte em câmaras de g’as. Talvez esse seja o meio mais r’apido de morrer. Estou terrivelmente nervosa. Mas eu n~ao conseguia desgrudar da sala enquanto Miep contava essas coisas horr’iveis. Ela tamb’em est’a muito perturbada com tudo isso. H’a pouco tempo, por exemplo, uma pobre judia, velha e aleijada, estava sentada `a sua porta. Os homens da Gestapo lhe haviam ordenado que n~ao sa’isse dali at’e que um carro a fosse apanhar. A pobre infeliz estava aterrorizada pelas bombas que as baterias antia’ereas atiravam contra os avi~oes ingleses e pelos poderosos fachos de luz dos refletores. Mas Miep n~ao se atreveu a mand’ala entrar; ningu’em correria esse risco. Os alem~aes atacam sem a menor piedade. Elli tamb’em est’a muito quieta. Seu namorado teve de partir para a Alemanha. Ela teme que os aviadores que sobrevoam nossas casas deixem cair suas bombas  algumas delas chegam a pesar um milh~ao de quilos  na cabe’ca de Dirk. Dizer piadas como n~ao ‘e prov’avel que ele ganhe um milh~ao ou uma bomba s’o ‘e suficiente ‘e brincadeira de muito mau gosto. A verdade ‘e que Dirk n~ao foi o ‘unico que teve de partir. Trens abarrotados de rapazes partem diariamente. `As vezes, ao pararem em alguma pequena esta’c~ao no meio do caminho, uns poucos conseguem fugir. Infelizmente ainda n~ao terminei com as m’as not’icias. Você j’a ouviu falar em ref’ens? N~ao posso imaginar nada mais horr’ivel. Cidad~aos not’orios  gente inocente  s~ao atirados na pris~ao `a espera do seu destino. Se o sabotador n~ao for encontrado, a Gestapo simplesmente fuzila cinco ref’ens. As not’icias dessas mortes aparecem freqüentemente nos jornais. Essas afrontas s~ao descritas como acidentes fatais. Boa gente, os alem~aes! E pensar que eu j’a fui alem~a! N~ao, Hitler tirou nossa nacionalidade h’a muito tempo. Na verdade, alem~aes e judeus s~ao os maiores inimigos do mundo. Sua Anne. Sextafeira, 16 de outubro de 1942     Querida Kitty Tenho andado ocupad’issima. Acabo de traduzir um cap’itulo de La belle nivernaise, anotando as palavras novas. Depois tive de resolver um problema de matem’atica e, mais, estudar três p’aginas de gram’atica francesa. Recusome terminantemente a resolver problemas de matem’atica todos os dias. Papai concorda em que s~ao repelentes. Sou quase melhor em matem’atica do que ele. A verdade ‘e que nenhum de n’os sabe grande coisa e muitas vezes temos que recorrer a Margot. Para compensar, de n’os três, a mais adiantada em estenografia sou eu. Ontem terminei de ler O assalto. ‘E muito divertido, mas n~ao chega aos p’es de Joop ter Heul. Na minha opini~ao, Cissy van Marxveldt ‘e uma escritora de primeira, e j’a resolvi que vou dar seus livros para meus filhos lerem. Mam~ae, Margot e eu estamos carneeunha outra vez. Assim ‘e melhor. Margot e eu dormimos na mesma cama, a noite passada. Estava apertad’issimo, mas por isso mesmo ‘e que foi divertido. Ela me perguntou se poderia ler meu di’ario. Respondilhe que sim, pelo menos uns pedacinhos. Perguntei se poderia ler o dela, e ela respondeu que sim. Falamos ent~ao sobre o futuro. Pergunteilhe o que ela queria ser. Ela n~ao disse e at’e fez grande segredo, mas eu percebi que era algo relacionado com ensino. N~ao tenho certeza absoluta, mas acho que adivinhei. Francamente, eu n~ao deveria ser t~ao curiosa! Hoje de manh~a deiteime na cama de Peter, depois de o haver enxotado. Ele ficou furioso, mas pouco me importei. Bem que ele podia ser mais camarada, para variar. Afinal, ainda ontem eu dei a ele uma ma’c~a. Perguntei a Margot se me achava feia. Ela disse que eu era bastante atraente e que tinha olhos bonitos. Muito vago, n~ao acha? At’e a pr’oxima. Sua Anne. Ter’cafeira, 20 de outubro de 1942 Querida Kitty J’a faz mais de duas horas que tomamos o susto, e at’e agora minhas m~aos est~ao tremendo. Antes, devo explicar que no pr’edio existem cinco extintores de incêndio e que sab’iamos que algu’em viria recarreg’alos. S’o n~ao sab’iamos a data em que o carpinteiro, ou coisa que o valha viria. O fato ‘e que n~ao est’avamos preocupados em fazer silêncio at’e que ouvimos marteladas l’a fora, no patamar, em frente `a porta do nosso arm’ario. Pensei imediatamente no carpinteiro e avisei Elli, que estava almo’cando conosco, que n~ao descesse. Papai e eu nos postamos um em cada lado da porta, para escutar quando o homem fosse embora. Ap’os ter trabalhado durante uns quinze minutos, ele pousou o martelo e outros utens’ilios em cima de nossa estante (pelo menos assim nos pareceu) e bateu em nossa porta. Ficamos l’ividos. Talvez ele tivesse ouvido     alguma coisa e quisesse investigar. S’o podia ser isso. Continuaram as batidas, os pux~oes, os arrancos. Quase desmaiei s’o em pensar que aquele estranho poderia descobrir nosso belo esconderijo. E, justamente quando pensei j’a ter soado minha ‘ultima hora, ouvi a voz do sr. Koophuis:  Abram essa porta, sou eu!  Abrimos imediatamente. O trinco que prende a estante, que s’o pode ser aberto por quem conhece o segredo, havia engui’cado. Por isso, ningu’em tinha podido nos prevenir a respeito do carpinteiro. O homem j’a havia ido embora, e Koophuis viera buscar Elli, mas n~ao conseguira abrir. Nem consigo lhe dizer o al’ivio que senti. Em minha imagina’c~ao, aquele homem que queria invadir nosso esconderijo come’cara a crescer e se tornara um gigante, o maior fascista que j’a houve na face da terra. Ainda bem que tudo se resolveu da melhor maneira. Por outro lado, divertimonos `a be’ca na segundafeira. Miep e Henk dormiram aqui. Margot e eu fomos dormir no quarto de mam~ae e papai, cedendo nosso quarto aos Van Santens. O jantar estava delicioso. Houve uma pequena interrup’c~ao: queimou um fus’ivel, e, de repente, ficamos no escuro. Que fazer? Havia alguns fus’iveis na casa, mas a caixa estava guardada l’a no quartinho escuro onde armazenamos tudo  nada f’acil de encontrar, principalmente no escuro. Mesmo assim, os homens se aventuraram, e, dez minutos depois, pudemos apagar as velas. Hoje levanteime cedo. Henk precisava sair `as oito e meia. Depois do caf’e, que foi agrad’avel, Miep desceu. Estava chovendo muito, e ela gostou de n~ao ter que ir pedalando para o escrit’orio. Na pr’oxima semana ‘e Elli que vem passar a noite conosco. Sua Anne. Quintafeira, 29 de outubro de 1942 Querida Kitty Estou preocupad’issima. Papai est’a doente. Est’a com febre alta e uma erup’c~ao vermelha que parece sarampo. Imagine você! Nem m’edico podemos chamar! Mam~ae est’a lhe dando um bom suador. Talvez, depois disso, a temperatura baixe. Esta manh~a Miep contou que retiraram toda a mob’ilia da casa dos Van Daan. Ela j’a anda que ‘e uma pilha de nervos, e n~ao estamos com a menor disposi’c~ao de ouvir novos lamentos pela linda lou’ca e as preciosas cadeiras que deixou em casa. N’os tamb’em tivemos que deixar coisas lindas. Mas de que adiantam queixas e lamenta’c~oes agora? Ultimamente tenho tido permiss~ao para ler mais livros de gente grande. No momento, estou lendo Evas youth, de Nico van Suchtelen. N~ao vejo grande diferen’ca entre este livro e os romances ‘aguacoma’c’ucar para mocinhas. ‘E verdade que h’a trechos sobre mulheres que se vendem a homens desconhecidos em ruas duvidosas. Cobram um dinheir~ao. Eu morreria de vergonha se me acontecesse uma coisa dessas. No livro tamb’em fala que Eva tem um per’iodo mensal. Estou doida para ter um tamb’em; parece ser t~ao importante! Papai retirou da estante grande as obras de Goethe e Schiller. Vai ler todas as noites para mim. Come’camos com Dom Carlos.     Seguindo o bom exemplo de papai, mam~ae entregoume seu livro de ora’c~oes. S’o por obriga’c~ao, li algumas em alem~ao. S~ao lindas, mas n~ao me dizem grande coisa. Por que me obriga a ser piedosa s’o para agradarlhe? Amanh~a acenderemos a lareira pela primeira vez. Creio que a fuma’ca vai nos sufocar. Ningu’em limpa aquela chamin’e h’a anos. Esperemos que funcione. Sua Anne. S’abado, 7 de novembro de 1942 Querida Kitty Mam~ae anda tremendamente irritada, e isso, em geral, significa maus momentos para mim. Ser’a por puro acaso que papai e mam~ae jamais censuram Margot e caem em cima de mim por tudo e por nada? Veja o que aconteceu ontem `a noite, por exemplo: Margot estava lendo um livro com figuras lindas. A certa altura, levantouse e subiu. Como eu n~ao estava fazendo nada, peguei o livro e comecei a ver as figuras. Ao voltar, Margot viu em minhas m~aos o seu livro. Franziu a testa, aborrecida, e quis o livro de volta. S’o porque eu quis ficar vendo mais um pouquinho, Margot foi ficando cada vez mais zangada. Foi a’i que mam~ae entrou na hist’oria.  Devolva o livro. Margot ‘e que estava lendo. Papai chegou e, sem saber de que se tratava, s’o de ver aquele ar infeliz na cara de Margot, desabou sobre mim:  Queria saber como você reagiria se Margot fosse mexer em um de seus livros! Larguei o livro imediatamente e sa’i da sala  ofendida, pensavam eles. S’o que eu n~ao estava ofendida nem zangada, apenas infeliz. Fora injusto da parte de papai tomar partido sem conhecimento de causa. Eu mesma teria devolvido o livro a Margot mais cedo se mam~ae e papai n~ao tivessem interferido, mas foram logo tomando as dores de Margot como se ela estivesse sendo v’itima de uma grande injusti’ca. ‘E claro que mam~ae ficaria do lado de Margot. Elas s~ao insepar’aveis. J’a me acostumei tanto com isso que nem ligo mais aos ralhos de mam~ae ou aos maus humores de Margot. Gosto das duas, mas s’o porque s~ao mam~ae e Margot. Com papai ‘e diferente. Se ele aponta Margot como exemplo, se aprova o que ela faz, se a elogia e lhe agrada, fico me roendo por dentro, porque adoro papai. Consideroo o homem ideal. N~ao amo ningu’em no mundo, s’o a ele. Ele nem repara que trata Margot de modo diferente. Ora, eu sei que Margot ‘e a menina mais linda, mais meiga e mais encantadora do mundo, mas nem por isso deixo de sentir que eu tamb’em tenho o direito de ser levada a s’erio. Sempre fui a boba, a desprezada da fam’ilia. Sempre tive que pagar em dobro pelas coisas que fa’co, primeiro com as broncas que levo e, depois, por causa de meus sentimentos, que ficam t~ao magoados. Pois bem, n~ao estou nada satisfeita com esse favoritismo. Quero de papai algo que ele n~ao me pode dar.     N~ao tenho ci’umes de Margot. Nunca tive. N~ao invejo seus bons modos, sua beleza. ‘E que eu preciso, e muito, do amor verdadeiro de papai. N~ao s’o por ser filha dele, mas por mim mesma, por mim, Anne. Apegome a papai porque ‘e a ‘unica liga’c~ao sentimental que tenho com a fam’ilia. Ele parece n~ao compreender que eu, `as vezes, preciso desabafar minhas m’agoas contra mam~ae. N~ao quer falar sobre isso e evita todo assunto que o obrigue a pronunciarse sobre as faltas de mam~ae. No entanto, s~ao os defeitos de mam~ae o que mais me custa aturar. N~ao sei como abafar meus sentimentos. N~ao posso estar sempre chamando a aten’c~ao para seu desmazelo, suas ironias e sua falta de carinho. Tamb’em n~ao posso acreditar que a culpa seja sempre minha. Somos diferentes em tudo. ‘E natural, portanto, que entremos em choque. N~ao posso julgar o car’ater de mam~ae. Eu apenas a vejo como m~ae, e ‘e justamente isso que ela n~ao consegue ser para mim. Sou obrigada a ser minha pr’opria m~ae. Afasteime de todos. Eu mesma tomarei o leme de minha vida e, mais tarde, procurarei onde aportar. Tudo isso veio `a tona, principalmente, porque formei uma imagem dentro de minha cabe’ca, a imagem do que chamar de m~ae, e mam~ae n~ao tem a menor semelhan’ca com a imagem formada. Estou sempre me prometendo n~ao reparar no lado mau de mam~ae. Quero ver apenas seu lado bom e procurar em mim mesma o que n~ao encontro nela. Tudo in’util. E o pior de tudo ‘e que papai e mam~ae n~ao se apercebem desse problema em minha vida, e eu os censuro muito por isso. Gostaria de saber se algu’em j’a conseguiu dar felicidade completa aos filhos. `As vezes, penso que Deus est’a me pondo `a prova; preciso tornarme boa atrav’es de meus pr’oprios esfor’cos, sem exemplos nem bons conselhos. Assim, no futuro, serei mais forte. Quem, al’em de mim mesma, ler’a estas cartas? Quem me confortar’a sen~ao eu mesma? Preciso muito de conforto, freqüentemente sintome fraca e descontente comigo. Minhas deficiências s~ao grandes demais. Eu sei disso e a cada dia que passa procuro melhorar. A maneira como me tratam ‘e variad’issima. Um dia Anne ‘e t~ao sensata que permitem que saiba de tudo; no dia seguinte, ou’co dizer que Anne n~ao passa de uma cabritinha estouvada que n~ao sabe nada e pensa que aprendeu maravilhas nos livros. N~ao sou mais nenhum bebê ou criancinha mimada, para que riam do que eu digo ou penso. Tenho meus pr’oprios pontos de vista, planos, e id’eias, embora ainda n~ao consiga express’alos em palavras. Oh, quanta coisa ferve dentro de mim, enquanto fico deitada na cama, tendo de aturar gente que n~ao suporto e que sempre interpreta mal minhas inten’c~oes. Eis por que, no final, acabo sempre voltando para este meu di’ario. Aqui come’co e aqui termino, porque Kitty est’a sempre disposta a ouvirme. Vou prometerlhe que hei de perseverar, apesar de tudo, hei de encontrar meu pr’oprio caminho e engolir minhas l’agrimas. S’o desejaria poder ver os resultados e tamb’em que, de vez em quando, uma pessoa que gostasse de mim me animasse e encorajasse. N~ao me condene; em vez disso, lembrese de que eu tamb’em, muitas vezes, fico a ponto de explodir.     Sua Anne. Segundafeira, 9 de novembro de 1942 Querida Kitty Ontem foi o anivers’ario de Peter. Fez dezesseis anos. Ganhou alguns presentes interessantes, entre os quais um jogo de Monop’olio, uma navalha e um isqueiro. N~ao que ele fume muito; s’o fuma para se exibir. A maior surpresa foi dada pelo sr. Van Daan ao anunciar, `a uma hora, que os ingleses haviam desembarcado na Tun’isia, Arg’elia, Casablanca e Oran.  Este ‘e o come’co do fim  diziam todos, mas Churchill, o primeiroministro britânico, que provavelmente ouvira o mesmo em Londres, disse:  Isto n~ao ‘e o fim. Nem mesmo ‘e o come’co do fim. ‘E talvez o fim do come’co.  Você percebe a diferen’ca? ‘E claro que h’a raz~ao para otimismo. A cidade russa de Stalingrado, que h’a três meses est’a se defendendo, ainda n~ao caiu nas m~aos dos alem~aes. Mas voltemos aos neg’ocios do nosso esconderijo. Preciso contarlhe algo sobre nossas reservas de alimentos. Como sabe, temos uns verdadeiros glut~oes morando no andar superior. Compramos nosso p~ao de um ‘otimo padeiro, amigo do sr. Koophuis. Naturalmente n~ao ‘e tanto quanto o que receb’iamos em casa, mas d’a para o gasto. Tamb’em compramos, ilegalmente, quatro cart~oes de racionamento. O pre’co sobe a cada dia; custam agora trinta e três florins em vez de dois, como antigamente. ‘E um bocado de dinheiro por um pedacinho de papel impresso! Para ter em casa, de reserva, algo dur’avel, al’em das cento e cinqüenta latas de legumes, compramos cento e vinte quilos de ervilhas secas e feij~ao. Nem tudo ‘e para n’os; parte vai para o pessoal do escrit’orio. Tudo costumava ficar guardado no pequeno corredor (o da porta escondida), em sacos pendurados em ganchos. Por causa do peso, alguns dos sacos rebentaram nas costuras. Decidimos que seria mais conveniente guardar nosso estoque de inverno no s’ot~ao. Peter ficou encarregado de levar tudo para cima. Ele j’a tinha conseguido transportar cinco sacos intactos quando arrebentou a costura do sexto, no topo da escada, fazendo desabar uma verdadeira tempestade de feij~ao. Era como que uma enxurrada descendo escada abaixo. Havia no saco uns vinte e cinco quilos, e o barulho dava at’e para acordar os mortos. O pessoal l’a embaixo pensou que a casa estivesse desabando sobre suas cabe’cas com tudo o que continha. (Gra’cas a Deus n~ao havia estranhos na casa.) Por um momento, Peter ficou apavorado. Logo, por’em, ria `as gargalhadas, especialmente quando me viu l’a embaixo da escada, uma pequena ilha cercada de feij~oes por todos os lados! Na realidade, eu estava enterrada at’e os tornozelos, num mar de feij~ao. Logo procuramos recolher tudo aquilo, mas feij~ao ‘e coisa pequena e escorregadia, que se mete por tudo quanto ‘e canto e buraquinho. Agora, todas as vezes que algu’em desce a escada, abaixase uma vez ou duas `a cata de feij~ao, apresentando um punhado deles `a sra. Van Daan. Esqueci de lhe contar que papai est’a quase bom. Sua Anne.     P. S. Acabamos de ouvir pelo r’adio que a Arg’elia capitulou. Marrocos, Casablanca e Oran estiveram nas m~aos dos ingleses por v’arios dias. Agora estamos esperando pela Tun’isia. Ter’cafeira, 10 de novembro de 1942 Querida Kitty Grandes novidades  vamos receber um oitavo h’ospede. ‘E verdade, sim! Sempre achamos que havia lugar e comida suficiente para mais um. S’o tem’iamos causar mais transtornos a Koophuis e a Kraler. Ouvindo hist’orias cada vez mais atrozes sobre os judeus, papai foi falar com os dois que podiam decidir, e eles acharam a id’eia excelente. Tanto era perigoso para sete como para oito. Uma vez decidido, percorremos nossos c’irculos de amizades procurando algu’em que fosse sozinho e que se adaptasse a nossa fam’ilia. N~ao foi dif’icil descobrir algu’em. Depois de papai ter recusado qualquer membro da fam’ilia dos Van Daan, a escolha recaiu sobre um dentista chamado Albert Dussel, cuja esposa tivera a sorte suficiente de estar fora do pa’is por ocasi~ao da declara’c~ao da guerra. Dizem que ‘e pessoa sossegada e, tanto quanto se pode julgar por um conhecimento superficial, ambas as fam’ilias acreditam que ‘e um homem de f’acil conv’ivio. Miep tamb’em o conhece e vai arranjar as coisas para que ele possa vir morar conosco. Se vier, ter’a de dormir no meu quarto, no lugar de Margot, que usar’a a cama de armar. Sua Anne. Quintafeira, 12 de novembro de 1942 Querida Kitty Dussel ficou muito contente quando Miep lhe disse que havia arranjado um esconderijo para ele. Ela insistiu em que ele viesse o mais cedo poss’ivel, de preferência no s’abado. Ele disse que talvez fosse improv’avel que viesse no s’abado, pois antes precisava pôr em dia seu fich’ario, atender alguns clientes e pagar as contas. Miep contounos isso hoje de manh~a, e achamos imprudente da parte dele adiar a vinda. Todos esses preparativos v~ao exigir explica’c~oes a muita gente que seria melhor conservar afastada. Miep vai falar com ele novamente, para tentar convencêlo a vir s’abado. Dussel disse que n~ao. Vem mesmo na segundafeira. Acho uma idiotice ele n~ao agarrar esta oportunidade com a maior rapidez. Se for apanhado l’a fora, por acaso vai ter tempo de pôr fich’arios em dia, pagar contas ou atender clientes? Para que esperar? Papai n~ao devia ter cedido. Por hoje, mais nada de novo. Sua Anne. Ter’cafeira, 17 de novembro de 1942 Querida Kitty     Dussel chegou. Tudo correu bem. Miep lhe havia dito que esperasse em um determinado local, defronte ao Correio, `as onze horas, onde um homem o iria encontrar. Na hora exata, l’a estava Dussel. O sr. Koophuis, que tamb’em conhece Dussel, foilhe ao encontro e lhe disse que o cavalheiro n~ao pudera vir, mas perguntoulhe se n~ao queria dar uma chegada at’e o escrit’orio para falar com Miep. Koophuis tomou um bonde e dirigiuse para o escrit’orio, enquanto Dussel seguiu a p’e. `As onze horas e vinte minutos, batia `a porta do escrit’orio. Miep ajudouo a tirar o sobretudo, de modo que a estrela amarela n~ao ficasse vis’ivel, e o conduziu ao escrit’orio particular, onde Koophuis manteve com ele uma conversa cordial at’e que a faxineira se retirou. Ent~ao, sob o pretexto de que o escrit’orio particular ia ser necess’ario para qualquer coisa, Miep subiu com Dussel, abriu a estante m’ovel e entrou sob o olhar bestificado de Dussel. L’a em cima, est’avamos `a espera com caf’e e conhaque para saudar o rec’emchegado. Miep fêlo entrar antes na sala. Ele, imediatamente, reconheceu a mob’ilia, mas n~ao tinha a mais vaga id’eia de que est’avamos ali, bem em cima de sua cabe’ca. Quando Miep lhe contou, ele quase desmaiou de surpresa. Felizmente, Miep n~ao lhe deu tempo para isso, levandoo imediatamente para cima. Dussel deixouse cair em uma cadeira, sem fala, e ficou ali parado, olhando para n’os, como se n~ao estivesse entendendo nada. Passado algum tempo gaguejou:  Mas aber sind vocês n~ao est~ao na B’elgica? Ist der Militar n~ao veio? Das Auto, a fuga si nicht foi bem sucedida? Explicamos que a hist’oria dos carros militares fora espalhada por n’os mesmos para despistar os outros, especialmente os alem~aes, no caso de tentarem localizarnos. Dussel, novamente, n~ao soube o que dizer diante de tanta esperteza, e, ao examinar com mais cuidado nosso superpr’atico e ao mesmo tempo um tanto sofisticado Anexo Secreto, n~ao continha a admira’c~ao. Almo’camos juntos. Depois, ele foi descansar um pouco, voltando na hora do ch’a. Arrumou suas coisas, que Miep havia trazido antes, e come’cou a sentirse mais `a vontade, principalmente quando recebeu as Regras do Anexo Secreto (cria’c~ao dos Van Daan). Prospecto e Guia do Anexo Secreto Institui’c~ao especial para residência tempor’aria de judeus e similares Aberta o ano inteiro  Bela, silenciosa, n~ao rodeada de bosques, bem no cora’c~ao de Amsterdam. Condu’c~ao: bondes 15 e 17, autom’ovel e bicicleta. No caso especial de os alem~aes proibirem o uso de transportes, podese vir a p’e. Comida e dormida  De gra’ca. Dieta especial, sem gordura.     ‘Agua corrente  No banheiro (sem banho, infelizmente) e em v’arias paredes internas e externas. Espa’cosa sala de armazenamento  Para qualquer tipo de mercadoria. Centro de r’adio  Comunica’c~ao direta com Londres, Nova York, TelAviv e v’arias outras esta’c~oes. O aparelho s’o pode ser utilizado pelos residentes depois das seis da tarde. Todas as esta’c~oes s~ao permitidas. As alem~as, ‘e claro, s’o em casos especiais, como m’usica cl’assica, etc. Hora de descanso  Das dez da noite `as sete e meia da manh~a. Aos domingos, dez e quinze. Os residentes podem descansar durante o dia, quando as condi’c~oes o permitirem e segundo indica’c~oes dos diretores. Por raz~oes de seguran’ca, as horas de descanso devem ser estritamente observadas. F’erias (fora da institui’c~ao)  Adiadas indefinidamente. Como falar  Obrigatoriedade de falar baixo o tempo todo. Todo idioma civilizado ‘e permitido, portanto, nada de alem~ao. Aulas  Uma aula de estenografia por semana. Inglês, francês, matem’atica e hist’oria, todos os dias. Animais de estima’c~ao  Departamento especial (‘e necess’aria uma licen’ca). Bom tratamento, exceto aos insetos nocivos. Hor’ario de refei’c~oes  Caf’e da manh~a, diariamente, exceto aos domingos e feriados banc’arios, `as nove. Domingos e feriados, `as onze e meia, aproximadamente. Almo’co (n~ao muito lauto)  Das onze e quinze `as quinze para as duas. Jantar (frio e/ou quente)  Sem hor’ario fixo, dependendo do notici’ario radiofônico. Deveres  Os residentes devem estar sempre prontos a ajudar o pessoal do escrit’orio. Banhos  A tina est’a `a disposi’c~ao dos residentes aos domingos, de nove horas em diante. Podese usar o WC, a cozinha, o escrit’orio particular ou o escrit’orio geral, `a escolha. Bebidas alco’olicas  S’o com receita m’edica.
Querida Kitty Ontem houve outro barulho. Mam~ae armou um banz’e dos diabos dizendo a papai tudo o que pensava a meu respeito. Depois, teve uma crise de choro, e ‘e claro que eu tamb’em desatei em l’agrimas. De qualquer forma, fiquei com uma terr’ivel dor de cabe’ca. No final, eu disse a papai que gostava muito mais dele do que dela, e ele respondeu que isso ia passar. N~ao acredito que passe. Com mam~ae tenho de me controlar para n~ao perder a calma. Papai quer que eu, `as vezes, me ofere’ca para ajudar mam~ae, quando ela n~ao est’a passando bem ou est’a com dor de cabe’ca. Mas n~ao vou fazer isso. Estou estudando francês um bocado, e agora estou lendo La belle nivernaise. Sua Anne. Sextafeira, 9 de outubro de 1942     Querida Kitty Hoje s’o tenho not’icias tristes e deprimentes para lhe contar. Nossos amigos judeus est~ao sendo levados embora `as d’uzias. Essa gente est’a sendo tratada pela Gestapo sem um m’inimo de decência. S~ao amontoados em vag~oes de gado e enviados para Westerbork, o grande campo de concentra’c~ao para judeus, em Drente. Westerbork parece ser terr’ivel: um ‘unico lavat’orio para centenas de pessoas e muito poucas privadas. N~ao h’a acomoda’c~oes separadas para homens e mulheres, e todos têm que dormir juntos. Dizem que h’a muita imoralidade por causa disso, e muitas mulheres e at’e mocinhas obrigadas a ficar l’a por muito tempo ficam esperando bebê. Fugir ‘e imposs’ivel; os internados ficam marcados pela sua cabe’ca raspada ou pela sua aparência judia. Se ‘e t~ao ruim na Holanda, imagine o que n~ao ser’a nas regi~oes b’arbaras e distantes para onde s~ao enviados? Sabemos que a maioria ‘e assassinada. A r’adio inglesa fala de morte em câmaras de g’as. Talvez esse seja o meio mais r’apido de morrer. Estou terrivelmente nervosa. Mas eu n~ao conseguia desgrudar da sala enquanto Miep contava essas coisas horr’iveis. Ela tamb’em est’a muito perturbada com tudo isso. H’a pouco tempo, por exemplo, uma pobre judia, velha e aleijada, estava sentada `a sua porta. Os homens da Gestapo lhe haviam ordenado que n~ao sa’isse dali at’e que um carro a fosse apanhar. A pobre infeliz estava aterrorizada pelas bombas que as baterias antia’ereas atiravam contra os avi~oes ingleses e pelos poderosos fachos de luz dos refletores. Mas Miep n~ao se atreveu a mand’ala entrar; ningu’em correria esse risco. Os alem~aes atacam sem a menor piedade. Elli tamb’em est’a muito quieta. Seu namorado teve de partir para a Alemanha. Ela teme que os aviadores que sobrevoam nossas casas deixem cair suas bombas  algumas delas chegam a pesar um milh~ao de quilos  na cabe’ca de Dirk. Dizer piadas como n~ao ‘e prov’avel que ele ganhe um milh~ao ou uma bomba s’o ‘e suficiente ‘e brincadeira de muito mau gosto. A verdade ‘e que Dirk n~ao foi o ‘unico que teve de partir. Trens abarrotados de rapazes partem diariamente. `As vezes, ao pararem em alguma pequena esta’c~ao no meio do caminho, uns poucos conseguem fugir. Infelizmente ainda n~ao terminei com as m’as not’icias. Você j’a ouviu falar em ref’ens? N~ao posso imaginar nada mais horr’ivel. Cidad~aos not’orios  gente inocente  s~ao atirados na pris~ao `a espera do seu destino. Se o sabotador n~ao for encontrado, a Gestapo simplesmente fuzila cinco ref’ens. As not’icias dessas mortes aparecem freqüentemente nos jornais. Essas afrontas s~ao descritas como acidentes fatais. Boa gente, os alem~aes! E pensar que eu j’a fui alem~a! N~ao, Hitler tirou nossa nacionalidade h’a muito tempo. Na verdade, alem~aes e judeus s~ao os maiores inimigos do mundo. Sua Anne. Sextafeira, 16 de outubro de 1942     Querida Kitty Tenho andado ocupad’issima. Acabo de traduzir um cap’itulo de La belle nivernaise, anotando as palavras novas. Depois tive de resolver um problema de matem’atica e, mais, estudar três p’aginas de gram’atica francesa. Recusome terminantemente a resolver problemas de matem’atica todos os dias. Papai concorda em que s~ao repelentes. Sou quase melhor em matem’atica do que ele. A verdade ‘e que nenhum de n’os sabe grande coisa e muitas vezes temos que recorrer a Margot. Para compensar, de n’os três, a mais adiantada em estenografia sou eu. Ontem terminei de ler O assalto. ‘E muito divertido, mas n~ao chega aos p’es de Joop ter Heul. Na minha opini~ao, Cissy van Marxveldt ‘e uma escritora de primeira, e j’a resolvi que vou dar seus livros para meus filhos lerem. Mam~ae, Margot e eu estamos carneeunha outra vez. Assim ‘e melhor. Margot e eu dormimos na mesma cama, a noite passada. Estava apertad’issimo, mas por isso mesmo ‘e que foi divertido. Ela me perguntou se poderia ler meu di’ario. Respondilhe que sim, pelo menos uns pedacinhos. Perguntei se poderia ler o dela, e ela respondeu que sim. Falamos ent~ao sobre o futuro. Pergunteilhe o que ela queria ser. Ela n~ao disse e at’e fez grande segredo, mas eu percebi que era algo relacionado com ensino. N~ao tenho certeza absoluta, mas acho que adivinhei. Francamente, eu n~ao deveria ser t~ao curiosa! Hoje de manh~a deiteime na cama de Peter, depois de o haver enxotado. Ele ficou furioso, mas pouco me importei. Bem que ele podia ser mais camarada, para variar. Afinal, ainda ontem eu dei a ele uma ma’c~a. Perguntei a Margot se me achava feia. Ela disse que eu era bastante atraente e que tinha olhos bonitos. Muito vago, n~ao acha? At’e a pr’oxima. Sua Anne. Ter’cafeira, 20 de outubro de 1942 Querida Kitty J’a faz mais de duas horas que tomamos o susto, e at’e agora minhas m~aos est~ao tremendo. Antes, devo explicar que no pr’edio existem cinco extintores de incêndio e que sab’iamos que algu’em viria recarreg’alos. S’o n~ao sab’iamos a data em que o carpinteiro, ou coisa que o valha viria. O fato ‘e que n~ao est’avamos preocupados em fazer silêncio at’e que ouvimos marteladas l’a fora, no patamar, em frente `a porta do nosso arm’ario. Pensei imediatamente no carpinteiro e avisei Elli, que estava almo’cando conosco, que n~ao descesse. Papai e eu nos postamos um em cada lado da porta, para escutar quando o homem fosse embora. Ap’os ter trabalhado durante uns quinze minutos, ele pousou o martelo e outros utens’ilios em cima de nossa estante (pelo menos assim nos pareceu) e bateu em nossa porta. Ficamos l’ividos. Talvez ele tivesse ouvido     alguma coisa e quisesse investigar. S’o podia ser isso. Continuaram as batidas, os pux~oes, os arrancos. Quase desmaiei s’o em pensar que aquele estranho poderia descobrir nosso belo esconderijo. E, justamente quando pensei j’a ter soado minha ‘ultima hora, ouvi a voz do sr. Koophuis:  Abram essa porta, sou eu!  Abrimos imediatamente. O trinco que prende a estante, que s’o pode ser aberto por quem conhece o segredo, havia engui’cado. Por isso, ningu’em tinha podido nos prevenir a respeito do carpinteiro. O homem j’a havia ido embora, e Koophuis viera buscar Elli, mas n~ao conseguira abrir. Nem consigo lhe dizer o al’ivio que senti. Em minha imagina’c~ao, aquele homem que queria invadir nosso esconderijo come’cara a crescer e se tornara um gigante, o maior fascista que j’a houve na face da terra. Ainda bem que tudo se resolveu da melhor maneira. Por outro lado, divertimonos `a be’ca na segundafeira. Miep e Henk dormiram aqui. Margot e eu fomos dormir no quarto de mam~ae e papai, cedendo nosso quarto aos Van Santens. O jantar estava delicioso. Houve uma pequena interrup’c~ao: queimou um fus’ivel, e, de repente, ficamos no escuro. Que fazer? Havia alguns fus’iveis na casa, mas a caixa estava guardada l’a no quartinho escuro onde armazenamos tudo  nada f’acil de encontrar, principalmente no escuro. Mesmo assim, os homens se aventuraram, e, dez minutos depois, pudemos apagar as velas. Hoje levanteime cedo. Henk precisava sair `as oito e meia. Depois do caf’e, que foi agrad’avel, Miep desceu. Estava chovendo muito, e ela gostou de n~ao ter que ir pedalando para o escrit’orio. Na pr’oxima semana ‘e Elli que vem passar a noite conosco. Sua Anne. Quintafeira, 29 de outubro de 1942 Querida Kitty Estou preocupad’issima. Papai est’a doente. Est’a com febre alta e uma erup’c~ao vermelha que parece sarampo. Imagine você! Nem m’edico podemos chamar! Mam~ae est’a lhe dando um bom suador. Talvez, depois disso, a temperatura baixe. Esta manh~a Miep contou que retiraram toda a mob’ilia da casa dos Van Daan. Ela j’a anda que ‘e uma pilha de nervos, e n~ao estamos com a menor disposi’c~ao de ouvir novos lamentos pela linda lou’ca e as preciosas cadeiras que deixou em casa. N’os tamb’em tivemos que deixar coisas lindas. Mas de que adiantam queixas e lamenta’c~oes agora? Ultimamente tenho tido permiss~ao para ler mais livros de gente grande. No momento, estou lendo Evas youth, de Nico van Suchtelen. N~ao vejo grande diferen’ca entre este livro e os romances ‘aguacoma’c’ucar para mocinhas. ‘E verdade que h’a trechos sobre mulheres que se vendem a homens desconhecidos em ruas duvidosas. Cobram um dinheir~ao. Eu morreria de vergonha se me acontecesse uma coisa dessas. No livro tamb’em fala que Eva tem um per’iodo mensal. Estou doida para ter um tamb’em; parece ser t~ao importante! Papai retirou da estante grande as obras de Goethe e Schiller. Vai ler todas as noites para mim. Come’camos com Dom Carlos.     Seguindo o bom exemplo de papai, mam~ae entregoume seu livro de ora’c~oes. S’o por obriga’c~ao, li algumas em alem~ao. S~ao lindas, mas n~ao me dizem grande coisa. Por que me obriga a ser piedosa s’o para agradarlhe? Amanh~a acenderemos a lareira pela primeira vez. Creio que a fuma’ca vai nos sufocar. Ningu’em limpa aquela chamin’e h’a anos. Esperemos que funcione. Sua Anne. S’abado, 7 de novembro de 1942 Querida Kitty Mam~ae anda tremendamente irritada, e isso, em geral, significa maus momentos para mim. Ser’a por puro acaso que papai e mam~ae jamais censuram Margot e caem em cima de mim por tudo e por nada? Veja o que aconteceu ontem `a noite, por exemplo: Margot estava lendo um livro com figuras lindas. A certa altura, levantouse e subiu. Como eu n~ao estava fazendo nada, peguei o livro e comecei a ver as figuras. Ao voltar, Margot viu em minhas m~aos o seu livro. Franziu a testa, aborrecida, e quis o livro de volta. S’o porque eu quis ficar vendo mais um pouquinho, Margot foi ficando cada vez mais zangada. Foi a’i que mam~ae entrou na hist’oria.  Devolva o livro. Margot ‘e que estava lendo. Papai chegou e, sem saber de que se tratava, s’o de ver aquele ar infeliz na cara de Margot, desabou sobre mim:  Queria saber como você reagiria se Margot fosse mexer em um de seus livros! Larguei o livro imediatamente e sa’i da sala  ofendida, pensavam eles. S’o que eu n~ao estava ofendida nem zangada, apenas infeliz. Fora injusto da parte de papai tomar partido sem conhecimento de causa. Eu mesma teria devolvido o livro a Margot mais cedo se mam~ae e papai n~ao tivessem interferido, mas foram logo tomando as dores de Margot como se ela estivesse sendo v’itima de uma grande injusti’ca. ‘E claro que mam~ae ficaria do lado de Margot. Elas s~ao insepar’aveis. J’a me acostumei tanto com isso que nem ligo mais aos ralhos de mam~ae ou aos maus humores de Margot. Gosto das duas, mas s’o porque s~ao mam~ae e Margot. Com papai ‘e diferente. Se ele aponta Margot como exemplo, se aprova o que ela faz, se a elogia e lhe agrada, fico me roendo por dentro, porque adoro papai. Consideroo o homem ideal. N~ao amo ningu’em no mundo, s’o a ele. Ele nem repara que trata Margot de modo diferente. Ora, eu sei que Margot ‘e a menina mais linda, mais meiga e mais encantadora do mundo, mas nem por isso deixo de sentir que eu tamb’em tenho o direito de ser levada a s’erio. Sempre fui a boba, a desprezada da fam’ilia. Sempre tive que pagar em dobro pelas coisas que fa’co, primeiro com as broncas que levo e, depois, por causa de meus sentimentos, que ficam t~ao magoados. Pois bem, n~ao estou nada satisfeita com esse favoritismo. Quero de papai algo que ele n~ao me pode dar.     N~ao tenho ci’umes de Margot. Nunca tive. N~ao invejo seus bons modos, sua beleza. ‘E que eu preciso, e muito, do amor verdadeiro de papai. N~ao s’o por ser filha dele, mas por mim mesma, por mim, Anne. Apegome a papai porque ‘e a ‘unica liga’c~ao sentimental que tenho com a fam’ilia. Ele parece n~ao compreender que eu, `as vezes, preciso desabafar minhas m’agoas contra mam~ae. N~ao quer falar sobre isso e evita todo assunto que o obrigue a pronunciarse sobre as faltas de mam~ae. No entanto, s~ao os defeitos de mam~ae o que mais me custa aturar. N~ao sei como abafar meus sentimentos. N~ao posso estar sempre chamando a aten’c~ao para seu desmazelo, suas ironias e sua falta de carinho. Tamb’em n~ao posso acreditar que a culpa seja sempre minha. Somos diferentes em tudo. ‘E natural, portanto, que entremos em choque. N~ao posso julgar o car’ater de mam~ae. Eu apenas a vejo como m~ae, e ‘e justamente isso que ela n~ao consegue ser para mim. Sou obrigada a ser minha pr’opria m~ae. Afasteime de todos. Eu mesma tomarei o leme de minha vida e, mais tarde, procurarei onde aportar. Tudo isso veio `a tona, principalmente, porque formei uma imagem dentro de minha cabe’ca, a imagem do que chamar de m~ae, e mam~ae n~ao tem a menor semelhan’ca com a imagem formada. Estou sempre me prometendo n~ao reparar no lado mau de mam~ae. Quero ver apenas seu lado bom e procurar em mim mesma o que n~ao encontro nela. Tudo in’util. E o pior de tudo ‘e que papai e mam~ae n~ao se apercebem desse problema em minha vida, e eu os censuro muito por isso. Gostaria de saber se algu’em j’a conseguiu dar felicidade completa aos filhos. `As vezes, penso que Deus est’a me pondo `a prova; preciso tornarme boa atrav’es de meus pr’oprios esfor’cos, sem exemplos nem bons conselhos. Assim, no futuro, serei mais forte. Quem, al’em de mim mesma, ler’a estas cartas? Quem me confortar’a sen~ao eu mesma? Preciso muito de conforto, freqüentemente sintome fraca e descontente comigo. Minhas deficiências s~ao grandes demais. Eu sei disso e a cada dia que passa procuro melhorar. A maneira como me tratam ‘e variad’issima. Um dia Anne ‘e t~ao sensata que permitem que saiba de tudo; no dia seguinte, ou’co dizer que Anne n~ao passa de uma cabritinha estouvada que n~ao sabe nada e pensa que aprendeu maravilhas nos livros. N~ao sou mais nenhum bebê ou criancinha mimada, para que riam do que eu digo ou penso. Tenho meus pr’oprios pontos de vista, planos, e id’eias, embora ainda n~ao consiga express’alos em palavras. Oh, quanta coisa ferve dentro de mim, enquanto fico deitada na cama, tendo de aturar gente que n~ao suporto e que sempre interpreta mal minhas inten’c~oes. Eis por que, no final, acabo sempre voltando para este meu di’ario. Aqui come’co e aqui termino, porque Kitty est’a sempre disposta a ouvirme. Vou prometerlhe que hei de perseverar, apesar de tudo, hei de encontrar meu pr’oprio caminho e engolir minhas l’agrimas. S’o desejaria poder ver os resultados e tamb’em que, de vez em quando, uma pessoa que gostasse de mim me animasse e encorajasse. N~ao me condene; em vez disso, lembrese de que eu tamb’em, muitas vezes, fico a ponto de explodir.     Sua Anne. Segundafeira, 9 de novembro de 1942 Querida Kitty Ontem foi o anivers’ario de Peter. Fez dezesseis anos. Ganhou alguns presentes interessantes, entre os quais um jogo de Monop’olio, uma navalha e um isqueiro. N~ao que ele fume muito; s’o fuma para se exibir. A maior surpresa foi dada pelo sr. Van Daan ao anunciar, `a uma hora, que os ingleses haviam desembarcado na Tun’isia, Arg’elia, Casablanca e Oran.  Este ‘e o come’co do fim  diziam todos, mas Churchill, o primeiroministro britânico, que provavelmente ouvira o mesmo em Londres, disse:  Isto n~ao ‘e o fim. Nem mesmo ‘e o come’co do fim. ‘E talvez o fim do come’co.  Você percebe a diferen’ca? ‘E claro que h’a raz~ao para otimismo. A cidade russa de Stalingrado, que h’a três meses est’a se defendendo, ainda n~ao caiu nas m~aos dos alem~aes. Mas voltemos aos neg’ocios do nosso esconderijo. Preciso contarlhe algo sobre nossas reservas de alimentos. Como sabe, temos uns verdadeiros glut~oes morando no andar superior. Compramos nosso p~ao de um ‘otimo padeiro, amigo do sr. Koophuis. Naturalmente n~ao ‘e tanto quanto o que receb’iamos em casa, mas d’a para o gasto. Tamb’em compramos, ilegalmente, quatro cart~oes de racionamento. O pre’co sobe a cada dia; custam agora trinta e três florins em vez de dois, como antigamente. ‘E um bocado de dinheiro por um pedacinho de papel impresso! Para ter em casa, de reserva, algo dur’avel, al’em das cento e cinqüenta latas de legumes, compramos cento e vinte quilos de ervilhas secas e feij~ao. Nem tudo ‘e para n’os; parte vai para o pessoal do escrit’orio. Tudo costumava ficar guardado no pequeno corredor (o da porta escondida), em sacos pendurados em ganchos. Por causa do peso, alguns dos sacos rebentaram nas costuras. Decidimos que seria mais conveniente guardar nosso estoque de inverno no s’ot~ao. Peter ficou encarregado de levar tudo para cima. Ele j’a tinha conseguido transportar cinco sacos intactos quando arrebentou a costura do sexto, no topo da escada, fazendo desabar uma verdadeira tempestade de feij~ao. Era como que uma enxurrada descendo escada abaixo. Havia no saco uns vinte e cinco quilos, e o barulho dava at’e para acordar os mortos. O pessoal l’a embaixo pensou que a casa estivesse desabando sobre suas cabe’cas com tudo o que continha. (Gra’cas a Deus n~ao havia estranhos na casa.) Por um momento, Peter ficou apavorado. Logo, por’em, ria `as gargalhadas, especialmente quando me viu l’a embaixo da escada, uma pequena ilha cercada de feij~oes por todos os lados! Na realidade, eu estava enterrada at’e os tornozelos, num mar de feij~ao. Logo procuramos recolher tudo aquilo, mas feij~ao ‘e coisa pequena e escorregadia, que se mete por tudo quanto ‘e canto e buraquinho. Agora, todas as vezes que algu’em desce a escada, abaixase uma vez ou duas `a cata de feij~ao, apresentando um punhado deles `a sra. Van Daan. Esqueci de lhe contar que papai est’a quase bom. Sua Anne.     P. S. Acabamos de ouvir pelo r’adio que a Arg’elia capitulou. Marrocos, Casablanca e Oran estiveram nas m~aos dos ingleses por v’arios dias. Agora estamos esperando pela Tun’isia. Ter’cafeira, 10 de novembro de 1942 Querida Kitty Grandes novidades  vamos receber um oitavo h’ospede. ‘E verdade, sim! Sempre achamos que havia lugar e comida suficiente para mais um. S’o tem’iamos causar mais transtornos a Koophuis e a Kraler. Ouvindo hist’orias cada vez mais atrozes sobre os judeus, papai foi falar com os dois que podiam decidir, e eles acharam a id’eia excelente. Tanto era perigoso para sete como para oito. Uma vez decidido, percorremos nossos c’irculos de amizades procurando algu’em que fosse sozinho e que se adaptasse a nossa fam’ilia. N~ao foi dif’icil descobrir algu’em. Depois de papai ter recusado qualquer membro da fam’ilia dos Van Daan, a escolha recaiu sobre um dentista chamado Albert Dussel, cuja esposa tivera a sorte suficiente de estar fora do pa’is por ocasi~ao da declara’c~ao da guerra. Dizem que ‘e pessoa sossegada e, tanto quanto se pode julgar por um conhecimento superficial, ambas as fam’ilias acreditam que ‘e um homem de f’acil conv’ivio. Miep tamb’em o conhece e vai arranjar as coisas para que ele possa vir morar conosco. Se vier, ter’a de dormir no meu quarto, no lugar de Margot, que usar’a a cama de armar. Sua Anne. Quintafeira, 12 de novembro de 1942 Querida Kitty Dussel ficou muito contente quando Miep lhe disse que havia arranjado um esconderijo para ele. Ela insistiu em que ele viesse o mais cedo poss’ivel, de preferência no s’abado. Ele disse que talvez fosse improv’avel que viesse no s’abado, pois antes precisava pôr em dia seu fich’ario, atender alguns clientes e pagar as contas. Miep contounos isso hoje de manh~a, e achamos imprudente da parte dele adiar a vinda. Todos esses preparativos v~ao exigir explica’c~oes a muita gente que seria melhor conservar afastada. Miep vai falar com ele novamente, para tentar convencêlo a vir s’abado. Dussel disse que n~ao. Vem mesmo na segundafeira. Acho uma idiotice ele n~ao agarrar esta oportunidade com a maior rapidez. Se for apanhado l’a fora, por acaso vai ter tempo de pôr fich’arios em dia, pagar contas ou atender clientes? Para que esperar? Papai n~ao devia ter cedido. Por hoje, mais nada de novo. Sua Anne. Ter’cafeira, 17 de novembro de 1942 Querida Kitty     Dussel chegou. Tudo correu bem. Miep lhe havia dito que esperasse em um determinado local, defronte ao Correio, `as onze horas, onde um homem o iria encontrar. Na hora exata, l’a estava Dussel. O sr. Koophuis, que tamb’em conhece Dussel, foilhe ao encontro e lhe disse que o cavalheiro n~ao pudera vir, mas perguntoulhe se n~ao queria dar uma chegada at’e o escrit’orio para falar com Miep. Koophuis tomou um bonde e dirigiuse para o escrit’orio, enquanto Dussel seguiu a p’e. `As onze horas e vinte minutos, batia `a porta do escrit’orio. Miep ajudouo a tirar o sobretudo, de modo que a estrela amarela n~ao ficasse vis’ivel, e o conduziu ao escrit’orio particular, onde Koophuis manteve com ele uma conversa cordial at’e que a faxineira se retirou. Ent~ao, sob o pretexto de que o escrit’orio particular ia ser necess’ario para qualquer coisa, Miep subiu com Dussel, abriu a estante m’ovel e entrou sob o olhar bestificado de Dussel. L’a em cima, est’avamos `a espera com caf’e e conhaque para saudar o rec’emchegado. Miep fêlo entrar antes na sala. Ele, imediatamente, reconheceu a mob’ilia, mas n~ao tinha a mais vaga id’eia de que est’avamos ali, bem em cima de sua cabe’ca. Quando Miep lhe contou, ele quase desmaiou de surpresa. Felizmente, Miep n~ao lhe deu tempo para isso, levandoo imediatamente para cima. Dussel deixouse cair em uma cadeira, sem fala, e ficou ali parado, olhando para n’os, como se n~ao estivesse entendendo nada. Passado algum tempo gaguejou:  Mas aber sind vocês n~ao est~ao na B’elgica? Ist der Militar n~ao veio? Das Auto, a fuga si nicht foi bem sucedida? Explicamos que a hist’oria dos carros militares fora espalhada por n’os mesmos para despistar os outros, especialmente os alem~aes, no caso de tentarem localizarnos. Dussel, novamente, n~ao soube o que dizer diante de tanta esperteza, e, ao examinar com mais cuidado nosso superpr’atico e ao mesmo tempo um tanto sofisticado Anexo Secreto, n~ao continha a admira’c~ao. Almo’camos juntos. Depois, ele foi descansar um pouco, voltando na hora do ch’a. Arrumou suas coisas, que Miep havia trazido antes, e come’cou a sentirse mais `a vontade, principalmente quando recebeu as Regras do Anexo Secreto (cria’c~ao dos Van Daan). Prospecto e Guia do Anexo Secreto Institui’c~ao especial para residência tempor’aria de judeus e similares Aberta o ano inteiro  Bela, silenciosa, n~ao rodeada de bosques, bem no cora’c~ao de Amsterdam. Condu’c~ao: bondes 15 e 17, autom’ovel e bicicleta. No caso especial de os alem~aes proibirem o uso de transportes, podese vir a p’e. Comida e dormida  De gra’ca. Dieta especial, sem gordura.     ‘Agua corrente  No banheiro (sem banho, infelizmente) e em v’arias paredes internas e externas. Espa’cosa sala de armazenamento  Para qualquer tipo de mercadoria. Centro de r’adio  Comunica’c~ao direta com Londres, Nova York, TelAviv e v’arias outras esta’c~oes. O aparelho s’o pode ser utilizado pelos residentes depois das seis da tarde. Todas as esta’c~oes s~ao permitidas. As alem~as, ‘e claro, s’o em casos especiais, como m’usica cl’assica, etc. Hora de descanso  Das dez da noite `as sete e meia da manh~a. Aos domingos, dez e quinze. Os residentes podem descansar durante o dia, quando as condi’c~oes o permitirem e segundo indica’c~oes dos diretores. Por raz~oes de seguran’ca, as horas de descanso devem ser estritamente observadas. F’erias (fora da institui’c~ao)  Adiadas indefinidamente. Como falar  Obrigatoriedade de falar baixo o tempo todo. Todo idioma civilizado ‘e permitido, portanto, nada de alem~ao. Aulas  Uma aula de estenografia por semana. Inglês, francês, matem’atica e hist’oria, todos os dias. Animais de estima’c~ao  Departamento especial (‘e necess’aria uma licen’ca). Bom tratamento, exceto aos insetos nocivos. Hor’ario de refei’c~oes  Caf’e da manh~a, diariamente, exceto aos domingos e feriados banc’arios, `as nove. Domingos e feriados, `as onze e meia, aproximadamente. Almo’co (n~ao muito lauto)  Das onze e quinze `as quinze para as duas. Jantar (frio e/ou quente)  Sem hor’ario fixo, dependendo do notici’ario radiofônico. Deveres  Os residentes devem estar sempre prontos a ajudar o pessoal do escrit’orio. Banhos  A tina est’a `a disposi’c~ao dos residentes aos domingos, de nove horas em diante. Podese usar o WC, a cozinha, o escrit’orio particular ou o escrit’orio geral, `a escolha. Bebidas alco’olicas  S’o com receita m’edica.



Giving no sign that she had heard Hermione, Bathilda now shuffled a few steps closer to Harry. With a little jerk of her head she looked back into the hall. You want us to leave? he asked. She repeated the gesture, this time pointing firstly at him, then at herself, then at the ceiling. Oh, right . Hermione, I think she wants me to go upstairs with her. All right, said Hermione, lets go. But when Hermione moved, Bathilda shook her head with surprising vigor, once more pointing first at Harry, then to herself. She wants me to go with her, alone. Why? asked Hermione, and her voice rang out sharp and clear in the candlelit room; the old lady shook her head a little at the loud noise. Maybe Dumbledore told her to give the sword to me, and only to me? Do you really think she knows who you are? Yes, said Harry, looking down into the milky eyes fixed upon his own, I think she does. Well, okay then, but be quick, Harry. Lead the way, Harry told Bathilda. She seemed to understand, because she shuffled around him toward the door. Harry glanced back at Hermione with a reassuring smile, but he was not sure she had seen it; she stood hugging herself in the midst of the candlelit squalor, looking toward the bookcase. As Harry walked out of the room, unseen by both Hermione and Bathilda, he slipped the silverframed photograph of the unknown thief inside his jacket. BATHILDAS SECRET 339 The stairs were steep and narrow: Harry was half tempted to place his hands on stout Bathildas backside to ensure that she did not topple over backward on top of him, which seemed only too likely. Slowly, wheezing a little, she climbed to the upper landing, turned immediately right, and led him into a lowceilinged bedroom. It was pitchblack and smelled horrible: Harry had just made out a chamber pot protruding from under the bed before Bathilda closed the door and even that was swallowed by the darkness. Lumos, said Harry, and his wand ignited. He gave a start: Bathilda had moved close to him in those few seconds of darkness, and he had not heard her approach. You are Potter? she whispered. Yes, I am. She nodded slowly, solemnly. Harry felt the Horcrux beating fast, faster than his own heart: It was an unpleasant, agitating sensation. Have you got anything for me? Harry asked, but she seemed distracted by his lit wandtip. Have you got anything for me? he repeated. Then she closed her eyes and several things happened at once: Harrys scar prickled painfully; the Horcrux twitched so that the front of his sweater actually moved; the dark, fetid room dissolved momentarily. He felt a leap of joy and spoke in a high, cold voice: Hold him! Harry swayed where he stood: The dark, foulsmelling room seemed to close around him again; he did not know what had just happened. Have you got anything for me? he asked for a third time, much louder. CHAPTER SEVENTEEN 340 Over here, she whispered, pointing to the corner. Harry raised his wand and saw the outline of a cluttered dressing table beneath the curtained window. This time she did not lead him. Harry edged between her and the unmade bed, his wand raised. He did not want to look away from her. What is it? he asked as he reached the dressing table, which was heaped high with what looked and smelled like dirty laundry. There, she said, pointing at the shapeless mass. And in the instant that he looked away, his eyes raking the tangled mess for a sword hilt, a ruby, she moved weirdly: He saw it out of the corner of his eye; panic made him turn and horror paralyzed him as he saw the old body collapsing and the great snake pouring from the place where her neck had been. The snake struck as he raised his wand: The force of the bite to his forearm sent the wand spinning up toward the ceiling; its light swung dizzyingly around the room and was extinguished: Then a powerful blow from the tail to his midriff knocked the breath out of him: He fell backward onto the dressing table, into the mound of filthy clothing  He rolled sideways, narrowly avoiding the snakes tail, which thrashed down upon the table where he had been a second earlier: Fragments of the glass surface rained upon him as he hit the floor. From below he heard Hermione call, Harry? He could not get enough breath into his lungs to call back: Then a heavy smooth mass smashed him to the floor and he felt it slide over him, powerful, muscular  No! he gasped, pinned to the floor. Yes, whispered the voice. Yesss . hold you . hold you . BATHILDAS SECRET 341 Accio . Accio Wand . But nothing happened and he needed his hands to try to force the snake from him as it coiled itself around his torso, squeezing the air from him, pressing the Horcrux hard into his chest, a circle of ice that throbbed with life, inches from his own frantic heart, and his brain was flooding with cold, white light, all thought obliterated, his own breath drowned, distant footsteps, everything going. A metal heart was banging outside his chest, and now he was flying, flying with triumph in his heart, without need of broomstick or thestral. He was abruptly awake in the soursmelling darkness; Nagini had released him. He scrambled up and saw the snake outlined against the landing light: It struck, and Hermione dived aside with a shriek; her deflected curse hit the curtained window, which shattered. Frozen air filled the room as Harry ducked to avoid another shower of broken glass and his foot slipped on a pencillike something  his wand  He bent and snatched it up, but now the room was full of the snake, its tail thrashing; Hermione was nowhere to be seen and for a moment Harry thought the worst, but then there was a loud bang and a flash of red light, and the snake flew into the air, smacking Harry hard in the face as it went, coil after heavy coil rising up to the ceiling. Harry raised his wand, but as he did so, his scar seared more painfully, more powerfully than it had done in years. Hes coming! Hermione, hes coming! As he yelled the snake fell, hissing wildly. Everything was chaos: It smashed shelves from the wall, and splintered china flew everywhere as Harry jumped over the bed and seized the dark shape he knew to be Hermione  CHAPTER SEVENTEEN 342 She shrieked with pain as he pulled her back across the bed: The snake reared again, but Harry knew that worse than the snake was coming, was perhaps already at the gate, his head was going to split open with the pain from his scar  The snake lunged as he took a running leap, dragging Hermione with him; as it struck, Hermione screamed, Confringo! and her spell flew around the room, exploding the wardrobe mirror and ricocheting back at them, bouncing from floor to ceiling; Harry felt the heat of it sear the back of his hand. Glass cut his cheek as, pulling Hermione with him, he leapt from bed to broken dressing table and then straight out of the smashed window into nothingness, her scream reverberating through the night as they twisted in midair. And then his scar burst open and he was Voldemort and he was running across the fetid bedroom, his long white hands clutching at the windowsill as he glimpsed the bald man and the little woman twist and vanish, and he screamed with rage, a scream that mingled with the girls, that echoed across the dark gardens over the church bells ringing in Christmas Day. And his scream was Harrys scream, his pain was Harrys pain . that it could happen here, where it had happened before . here, within sight of that house where he had come so close to knowing what it was to die . to die. The pain was so terrible . ripped from his body. But if he had no body, why did his head hurt so badly; if he was dead, how could he feel so unbearably, didnt pain cease with death, didnt it go . The night wet and windy, two children dressed as pumpkins waddling across the square, and the shop windows covered in paper spiders, all the tawdry Muggle trappings of a world in which they did not believe. And he was gliding along, that sense of purpose and power BATHILDAS SECRET 343 and rightness in him that he always knew on these occasions. Not anger . that was for weaker souls than he . but triumph, yes. He had waited for this, he had hoped for it. Nice costume, mister! He saw the small boys smile falter as he ran near enough to see beneath the hood of the cloak, saw the fear cloud his painted face: Then the child turned and ran away. Beneath the robe he fingered the handle of his wand. One simple movement and the child would never reach his mother . but unnecessary, quite unnecessary. And along a new and darker street he moved, and now his destination was in sight at last, the Fidelius Charm broken, though they did not know it yet. And he made less noise than the dead leaves slithering along the pavement as he drew level with the dark hedge, and stared over it. They had not drawn the curtains; he saw them quite clearly in their little sitting room, the tall blackhaired man in his glasses, making puffs of colored smoke erupt from his wand for the amusement of the small blackhaired boy in his blue pajamas. The child was laughing and trying to catch the smoke, to grab it in his small fist. A door opened and the mother entered, saying words he could not hear, her long darkred hair falling over her face. Now the father scooped up the son and handed him to the mother. He threw his wand down upon the sofa and stretched, yawning. The gate creaked a little as he pushed it open, but James Potter did not hear. His white hand pulled out the wand beneath his cloak and pointed it at the door, which burst open. He was over the threshold as James came sprinting into the hall. It was easy, too easy, he had not even picked up his wand. Lily, take Harry and go! Its him! Go! Run! Ill hold him off! CHAPTER SEVENTEEN 344 Hold him off, without a wand in his hand! . He laughed before casting the curse. Avada Kedavra! The green light filled the cramped hallway, it lit the pram pushed against the wall, it made the banisters glare like lightning rods, and James Potter fell like a marionette whose strings were cut. He could hear her screaming from the upper floor, trapped, but as long as she was sensible, she, at least, had nothing to fear. He climbed the steps, listening with faint amusement to her attempts to barricade herself in. She had no wand upon her either. How stupid they were, and how trusting, thinking that their safety lay in friends, that weapons could be discarded even for moments. He forced the door open, cast aside the chair and boxes hastily piled against it with one lazy wave of his wand . and there she stood, the child in her arms. At the sight of him, she dropped her son into the crib behind her and threw her arms wide, as if this would help, as if in shielding him from sight she hoped to be chosen instead. Not Harry, not Harry, please not Harry! Stand aside, you silly girl . stand aside, now. Not Harry, please no, take me, kill me instead  This is my last warning  Not Harry! Please . have mercy . have mercy. Not Harry! Not Harry! Please  Ill do anything  Stand aside. Stand aside, girl! He could have forced her away from the crib, but it seemed more prudent to finish them all. The green light flashed around the room and she dropped like her husband. The child had not cried all this time: He could stand, clutching the bars of his crib, and he looked up into the intruders face with a BATHILDAS SECRET 345 kind of bright interest, perhaps thinking that it was his father who hid beneath the cloak, making more pretty lights, and his mother would pop up any moment, laughing  He pointed the wand very carefully into the boys face: He wanted to see it happen, the destruction of this one, inexplicable danger. The child began to cry: It had seen that he was not James. He did not like it crying, he had never been able to stomach the small ones whining in the orphanage  Avada Kedavra! And then he broke: He was nothing, nothing but pain and terror, and he must hide himself, not here in the rubble of the ruined house, where the child was trapped and screaming, but far away . far away. No, he moaned. The snake rustled on the filthy, cluttered floor, and he had killed the boy, and yet he was the boy. No . And now he stood at the broken window of Bathildas house, immersed in memories of his greatest loss, and at his feet the great snake slithered over broken china and glass. He looked down and saw something . something incredible. No . Harry, its all right, youre all right! He stooped down and picked up the smashed photograph. There he was, the unknown thief, the thief he was seeking. No . I dropped it. I dropped it. Harry, its okay, wake up, wake up! He was Harry. Harry, not Voldemort . and the thing that was rustling was not a snake. He opened his eyes. CHAPTER SEVENTEEN 346 Harry, Hermione whispered. Do you feel all  all right? Yes, he lied. He was in the tent, lying on one of the lower bunks beneath a heap of blankets. He could tell that it was almost dawn by the stillness and the quality of the cold, flat light beyond the canvas ceiling. He was drenched in sweat; he could feel it on the sheets and blankets. We got away. Yes, said Hermione. I had to use a Hover Charm to get you into your bunk, I couldnt lift you. Youve been . Well, you havent been quite . There were purple shadows under her brown eyes and he noticed a small sponge in her hand: She had been wiping his face. Youve been ill, she finished. Quite ill. How long ago did we leave? Hours ago. Its nearly morning. And Ive been . what, unconscious? Not exactly, said Hermione uncomfortably. Youve been shouting and moaning and . things, she added in a tone that made Harry feel uneasy. What had he done? Screamed curses like Voldemort, cried like the baby in the crib? I couldnt get the Horcrux off you, Hermione said, and he knew she wanted to change the subject. It was stuck, stuck to your chest. Youve got a mark; Im sorry, I had to use a Severing Charm to get it away. The snake bit you too, but Ive cleaned the wound and put some dittany on it. He pulled the sweaty Tshirt he was wearing away from himself and looked down. There was a scarlet oval over his heart where the locket had burned him. He could also see the halfhealed puncture marks to his forearm. BATHILDAS SECRET 347 Whereve you put the Horcrux? In my bag. I think we should keep it off for a while. He lay back on his pillows and looked into her pinched gray face. We shouldnt have gone to Godrics Hollow. Its my fault, its all my fault, Hermione, Im sorry. Its not your fault. I wanted to go too; I really thought Dumbledore might have left the sword there for you. Yeah, well . we got that wrong, didnt we? What happened, Harry? What happened when she took you upstairs? Was the snake hiding somewhere? Did it just come out and kill her and attack you? No, he said. She was the snake . or the snake was her . all along. Wwhat? He closed his eyes. He could still smell Bathildas house on him: It made the whole thing horribly vivid. Bathilda mustve been dead a while. The snake was . was inside her. YouKnowWho put it there in Godrics Hollow, to wait. You were right. He knew Id go back. The snake was inside her? He opened his eyes again: Hermione looked revolted, nauseated. Lupin said there would be magic wed never imagined, Harry said. She didnt want to talk in front of you, because it was Parseltongue, all Parseltongue, and I didnt realize, but of course I could understand her. Once we were up in the room, the snake sent a message to YouKnowWho, I heard it happen inside my head, I felt him get excited, he said to keep me there . and then . CHAPTER SEVENTEEN 348 He remembered the snake coming our of Bathildas neck: Hermione did not need to know the details. she changed, changed into the snake, and attacked. He looked down at the puncture marks. It wasnt supposed to kill me, just keep me there till YouKnowWho came. If he had only managed to kill the snake, it would have been worth it, all of it. Sick at heart, he sat up and threw back the covers. Harry, no, Im sure you ought to rest! Youre the one who needs sleep. No offense, but you look terrible. Im fine. Ill keep watch for a while. Wheres my wand? She did not answer, she merely looked at him. Wheres my wand, Hermione? She was biting her lip, and tears swam in her eyes. Harry . Wheres my wand? She reached down beside the bed and held it out to him. The holly and phoenix wand was nearly severed in two. One fragile strand of phoenix feather kept both pieces hanging together. The wood had splintered apart completely. Harry took it into his hands as though it was a living thing that had suffered a terrible injury. He could not think properly: Everything was a blur of panic and fear. Then he held out the wand to Hermione. Mend it. Please. Harry, I dont think, when its broken like this  Please, Hermione, try! RReparo. The dangling half of the wand resealed itself. Harry held it up. BATHILDAS SECRET 349 Lumos! The wand sparked feebly, then went out. Harry pointed it at Hermione. Expelliarmus! Hermiones wand gave a little jerk, but did not leave her hand. The feeble attempt at magic was too much for Harrys wand, which split into two again. He stared at it, aghast, unable to take in what he was seeing . the wand that had survived so much . Harry, Hermione whispered so quietly he could hardly hear her. Im so, so sorry. I think it was me. As we were leaving, you know, the snake was coming for us, and so I cast a Blasting Curse, and it rebounded everywhere, and it must have  must have hit  It was an accident, said Harry mechanically. He felt empty, stunned. Well  well find a way to repair it. Harry, I dont think were going to be able to, said Hermione, the tears trickling down her face. Remember . remember Ron? When he broke his wand, crashing the car? It was never the same again, he had to get a new one. Harry thought of Ollivander, kidnapped and held hostage by Voldemort; of Gregorovitch, who was dead. How was he supposed to find himself a new wand? Well, he said, in a falsely matteroffact voice, well, Ill just borrow yours for now, then. While I keep watch. Her face glazed with tears, Hermione handed over her wand, and he left her sitting beside his bed, desiring nothing more than to get away from her.
 
Dear Kitty, Everybody teased me quite a bit yesterday because I lay down on the bed next to Mr. van Daan. At your age! Shocking!  and other remarks along those lines. Silly, of course. Id never want to sleep with Mr. van Daan the way they mean. Yesterday Mother and I had another runin and she really kicked up a fuss. She told Daddy all my sins and I started to cry, which made me cry too, and I already had such an awful headache. I finally told Daddy that I love him more than I do Mother, to which he replied that it was just a passing phase, but I dont think so. I simply cant stand Mother, and I have to force myself not to snap at her all the time, and to stay calm, when Id rather slap her across the face. I dont know why Ive taken such a terrible dislike to her. Daddy says that if Mother isnt feeling well or has a headache, I should volunteer to help her, but Im not going to because I dont love her and dont enjoy doing it. I can imagine Mother dying someday, but Daddys death seems inconceivable. Its very mean of me, but thats how I feel. I hope Mother will never read this or anything else Ive written. Ive been allowed to read more grownup books lately. Evas Youth by Nico van Suchtelen is currently keeping me busy. I dont think theres much of a difference between this and books for teenage girls. Eva thought that children grew on trees, like apples, and that the stork plucked them off the tree when they were ripe and brought them to the mothers. But her girlfriends cat had kittens and Eva saw them coming out of the cat, so she thought cats laid eggs and hatched them like chickens, and that mothers who wanted a child also went upstairs a few days before their time to lay an egg and brood on it. After the babies arrived, the mothers were pretty weak from all that squatting. At some point, Eva wanted a baby too. She took a wool scarf and spread it on the ground so the egg could fall into it, and then she squatted down and began to push. She clucked as she waited, but no egg came out. Finally, after shed been sitting for a long time, something did come, but it was a sausage instead of an egg. Eva was embarrassed. She thought she was sick. Funny, isnt it? There are also parts of Evas Youth that talk about women selling their bodies on the street and asking loads of money. Id be mortified in front of a man like that. In addition, it mentions Evas menstruation. Oh, I long to get my period  then Ill really be grown up. Daddy is grumbling again and threatening to take away my diary. Oh, horror of horrors! From now on, Im going to hide it. Anne Frank WEDNESDAY, OCTOBER 7, 1942 I imagine that. Ive gone to Switzerland. Daddy and I sleep in one room, while the boys. study is turned into a sitting room, where I can receive visitors. As a surprise, theyve bought new furniture for me, including a tea table, a desk, armchairs and a divan. Everythings simply wonderful. After a few days Daddy gives me 150 guilders  converted into Swiss money, of course, but Ill call them guilders  and tells me to buy everything I think Ill need, all for myself. (Later on, I get a guilder a week, which I can also use to buy whatever I want.) I set off with Bernd and buy: 3 cotton undershirts @ 0.50 = 1.50 3 cotton underpants @ 0.50 = 1.50 3 wool undershirts @ O. 75 = 2.25 3 wool underpants @ O. 75 = 2.25 2 petticoats @ 0.50 = 1.00 2 bras (smallest size) @ 0.50 = 1.00 5 pajamas @ 1.00 = 5.00 1 summer robe @ 2.50 = 2.50 1 winter robe @ 3.00 = 3.00 2 bed jackets @ O. 75 = 1.50 . Annes cousins Bernhard (Bernd) and Stephan Elias. THE DIARY OF A YOUNG GIRL 53 1 small pillow @ 1.00 = 1.00 1 pair of lightweight slippers @ 1.00 = 1.00 1 pair of warm slippers @ 1.50 = 1.50 1 pair of summer shoes (school) @ 1.50 = 1.50 1 pair of summer shoes (dressy) @ 2.00 = 2.00 1 pair of winter shoes (school) @ 2.50 = 2.50 1 pair of winter shoes (dressy) @ 3.00 = 3.00 2 aprons @ 0.50 = 1.00 25 handkerchiefs @ 0.05 = 1.00 4 pairs of silk stockings @ 0.75 = 3.00 4 pairs of kneesocks @ 0.50 = 2.00 4 pairs of socks @ 0.25 = 1.00 2 pairs of thick stockings @ 1.00 = 2.00 3 skeins of white yarn (underwear, cap) = 1.50 3 skeins of blue yarn (sweater, skirt) = 1.50 3 skeins of variegated yarn (cap, scarf) = 1.50 Scarves, belts, collars, buttons = 1.25 Plus 2 school dresses (summer), 2 school dresses (winter), 2 good dresses (sumr.ner), 2 good dresses (winter), 1 summer skirt, 1 good winter skirt, 1 school winter skirt, 1 raincoat, 1 summer coat, 1 winter coat, 2 hats, 2 caps. For a total of 10g.00 guilders. 2 purses, 1 iceskating outfit, 1 pair of skates, 1 case (containing powder, skin cream, foundation cream, cleansing cream, suntan lotion, cotton, firstaid kit, rouge, lipstick, eyebrow pencil, bath salts, bath powder, eau de cologne, soap, powder puff). Plus 4 sweaters @ 1.50,4 blouses @ 1.00, miscellaneous items @ 10.00 and books, presents @ 4.50. OCTOBER 9, 1942 Dearest Kitty, Today I have nothing but dismal and depressing news to report. Our many Jewish friends and acquaintances are being taken away in droves. The Gestapo is treating them very roughly and transporting them in cattle cars to Westerbork, the big camp in Drenthe to which theyre sending all the Jews. Miep told us about someone whod managed to escape from there. It must be terrible in Westerbork. The people get almost nothing to eat, much less to drink, as water is available only one hour a day, and theres only one toilet and sink for several thousand people. Men and women sleep in the same room, and women and children often have their heads shaved. Escape is almost impossible; many people look Jewish, and theyre branded by their shorn heads. If its that bad in Holland, what must it be like in those faraway and uncivilized places where the Germans are sending them? We assume that most of them are being murdered. The English radio says theyre being gassed. Perhaps thats the quickest way to die. I feel terrible. Mieps accounts of these horrors are so heartrending, and Miep is also very distraught. The other day, for instance, the Gestapo deposited an elderly, crippled Jewish woman on Mieps doorstep while they set off to find a car. The old woman was terrified of the glaring searchlights and the guns firing at the English planes overhead. Yet Miep didnt dare let her in. Nobody would. The Germans are generous enough when it comes to punishment. Bep is also very subdued. Her boyfriend is being sent to Germany. Every time the planes fly over, shes afraid theyre going to drop their entire bomb load on Bertuss head. Jokes like Oh, dont worry, they cant all fall on him or One bomb is all it takes are hardly appropriate in this situation. Bertus is not the only one being forced to work in Germany. Trainloads of young men depart daily. Some of them try to sneak off the train when it stops at a small station, but only a few manage to escape unnoticed and find a place to hide. But thats not the end of my lamentations. Have you ever heard the term hostages? Thats the latest punishment for saboteurs. Its the most horrible thing you can imagine. Leading citizens  innocent people  are taken prisoner to await their execution. If the Gestapo cant find the saboteur, they simply grab five hostages and line them up against the wall. You read the announcements of their death in the paper, where theyre referred to as fatal accidents. Fine specimens of humanity, those Germans, and to think Im actually one of them! No, thats not true, Hitler took away our nationality long ago. And besides, there are no greater enemies on earth than the Germans and the Jews. Yours, Anne WEDNESDAY, OCTOBER 14, 1942 Dear Kitty, Im terribly busy. Yesterday I began by translating a chapter from La Belle Nivemaise and writing down vocabulary words. Then I worked on an awful math problem and translated three pages of French grammar besides. Today, French grammar and history. I simply refuse to do that wretched math every day. Daddy thinks its awful too. Im almost better at it than he is, though in fact neither of us is any good, so we always have to call on Margots help. Im also working away at my shorthand, which I enjoy. Of the three of us, Ive made the most progress. Ive read The Storm Family. Its quite good, but doesnt compare to Joop ter Heul. Anyway, the same words can be found in both books, which makes sense because theyre written by the same author. Cissy van Marxveldt is a terrific writer. Im definitely going to let my own children read her books too. Moreover, Ive read a lot of Korner plays. I like the way he writes. For example, Hedwig, The Cousin from Bremen, The Governess, The Green Domino, etc. Mother, Margot and I are once again the best of buddies. Its actually a lot nicer that way. Last night Margot and I were lying side by side in my bed. It was incredibly cramped, but thats what made it fun. She asked if she could read my diary once in a while. Parts of it, I said, and asked about hers. She gave me permission to read her diary as well. The conversation turned to the future, and I asked what she wanted to be when she was older. But she wouldnt say and was quite mysterious about it. I gathered it had something to do with teaching; of course, Im not absolutely sure, but I suspect its something along those lines. I really shouldnt be so nosy. This morning Ilay on Peters bed, after first having chased him off it. He was furious, but I didnt care. He might consider being a little more friendly to me from time to time. After all, I did give him an apple last night. I once asked Margot if she thought I was ugly. She said that I was cute and had nice eyes. A little vague, dont you think? Well, until next time! Anne Frank PS. This morning we all took turns on the scale. Margot now weighs 132 pounds, Mother 136, Father 155, Anne 96, Peter 14g, Mrs. van Daan 117, Mr. van Daan 165. In the three months since Ive been here, Ive gained 19 pounds. A lot, huh? TUESDAY, OCTOBER 20, 1942 Dearest Kitty, My hands still shaking, though its been two hours since we had the scare. I should explain that there are five fire extinguishers in the building. The office staff stupidly forgot to warn us that the carpenter, or whatever hes called, was coming to fill the extinguishers. As a result, we didnt bother to be quiet until I heard the sound of hammering on the landing (across from the bookcase). I immediately assumed it was the carpenter and went to warn Bep, who was eating lunch, that she couldnt go back downstairs. Father and I stationed ourselves at the door so we could hear when the man had left. After working for about fifteen minutes, he laid his hammer and some other tools on our bookcase (or so we thought!) and banged on our door. We turned white with fear. Had he heard something after all and now wanted to check out this mysteriouslooking bookcase? It seemed so, since he kept knocking, pulling, pushing and jerking on it. I was so scared I nearly fainted at the thought of this total stranger managing to discover our wonderful hiding place. Just when I thought my days were numbered, we heard Mr. Kleimans voice saying, Open up, its me. We opened the door at once. What had happened? The hook fastening the bookcase had gotten stuck, which is why no one had been able to warn us about the carpenter. After the man had left, Mr. Kleiman came to get Bep, but couldnt open the bookcase. I cant tell you how relieved I was. In my imagination, the man I thought was trying to get inside the Secret Annex had kept growing and growing until hed become not only a giant but also the cruelest Fascist in the world. Whew. Fortunately, everything worked out all right, at least this time. We had lots of fun on Monday. Miep and Jan spent the night with us. Margot and I slept in Father and Mothers room for the night so the Gieses could have our beds. The menu was drawn up in their honor, and the meal was delicious. The festivities were briefly interrupted when Fathers lamp caused a short circuit and we were suddenly plunged into darkness. What were we to do? We did have fuses, but the fuse box was at the rear of the dark warehouse, which made this a particularly unpleasant job at night. Still, the men ventured forth, and ten minutes later we were able to put away the candles. I was up early this morning. Jan was already dressed. Since he had to leave at eightthirty, he was upstairs eating breakfast by eight. Miep was busy getting dressed, and I found her in her undershirt when I came in. She wears the same kind of long underwear I do when she bicycles. Margot and I threw on our clothes as well and were upstairs earlier than usual. After a pleasant breakfast, Miep headed downstairs. It was pouring outside and she was glad she didnt have to bicycle to work. Daddy and I made the beds, and afterward I learned five irregular French verbs. Quite industrious, dont you think? Margot and Peter were reading in our room, with Mouschi curled up beside Margot on the divan. After my irregular French verbs, I joined them and read The Woods Are Singingfor All Eternity. Its quite a beautiful book, but very unusual. Im almost finished. Next week its Beps turn to spend the night. Yours, Anne THURSDAY, OCTOBER 29, 1942 My dearest Kitty, Im very worried. Fathers sick. Hes covered with spots and has a high temperature. It looks like measles. Just think, we cant even call a doctor! Mother is making him perspire in hopes of sweating out the fever. This morning Miep told us that the furniture has been removed from the van Daans apartment on ZuiderAmstellaan. We havent told Mrs. van D. yet. Shes been so nervenmassig [nervous] lately, and we dont feel like hearing her moan and groan again about all the beautiful china and lovely chairs she had to leave behind. We had to abandon most of our nice things too. Whats the good of grumbling about it now? Father wants me to start reading books by Hebbel and other wellknown German writers. I can read German fairly well by now, except that I usually mumble the words instead of reading them silently to myself. But thatll pass. Father has taken the plays of Goethe and Schiller down from the big bookcase and is planning to read to me every evening. Weve started off with Don Carlos. Encouraged by Fathers good example, Mother pressed her prayer book into my hands. I read a few prayers in German, just to be polite. They certainly sound beautiful, but they mean very little to me. Why is she making me act so religious and devout? Tomorrow were going to light the stove for the first time. The chimney hasnt been swept in ages, so the room is bound to fill with smoke. Lets hope the thing draws! Yours, Anne MONDAY, NOVEMBER 2, 1942 Dear Kitty, Bep stayed with us Friday evening. It was fun, but she didnt sleep very well because shed drunk some wine. For the rest, theres nothing special to report. I had an awful headache yesterday and went to bed early. Margots being exasperating again. This morning I began sorting out an index card file from the office, because itd fallen over and gotten all mixed up. Before long I was going nuts. I asked Margot and Peter to help, but they were too lazy, so I put it away. Im not crazy enough to do it all by myself! Anne Frank PS. I forgot to mention the important news that Im probably going to get my period soon. I can tell because I keep finding a whitish smear in my panties, and Mother predicted it would start soon. I can hardly wait. Its such a momentous event. Too bad I cant use sanitary napkins, but you cant get them anymore, and Mamas tampons can be used only by women whove had a baby. i COMMENT ADDED BY ANNE ON JANUARY 22, 1944: I wouldnt be able to write that kind of thing anymore. Now that Im rereading my diary after a year and a half, Im surprised at my childish innocence. Deep down I know I could never be that innocent again, however much Id like to be. I can understand the mood chanaes and the comments about Margot, Mother and Father as if Id written them only yesterday, but I cant imagine writina so openly about other matters. It embarrasses me areatly to read the panes dealina with subjects that I remembered as beina nicer than they actually were. My descriptions are so indelicate. But enouah of that. I can also understand my homesickness and yearning for Moortje. The whole time Ive been here Ive longed unconsciously and at times consciously for trust, love and physical affection. This longing may change in intensity, but its always there. THURSDAY, NOVEMBER 5, 1942 Dear Kitty, The British have finally scored a few successes in Africa and Stalingrad hasnt fallen yet, so the men are happy and we had coffee and tea this morning. For the rest, nothing special to report. This week Ive been reading a lot and doing little work. Thats the way things ought to be. Thats surely the road to success. Mother and I are getting along better lately, but were never close. Fathers not very open about his feelings, but hes the same sweetheart hes always been. We lit the stove a few days ago and the entire room is still filled with smoke. I prefer central heating, and Im probably not the only one. Margots a stinker (theres no other word for it), a constant source of irritation, morning, noon and night. Anne Frank SATURDAY, NOVEMBER 7, 1942 Dearest Kitty, Mothers nerves are very much on edge, and that doesnt bode well for me. Is it just a coincidence that Father and Mother never scold Margot and always blame me for everything? Last night, for example, Margot was reading a book with beautiful illustrations; she got up and put the book aside for later. I wasnt doing anything, so I picked it up and began looking at the pictures. Margot carne back, saw her book in my hands, knitted her brow and angrily demanded the book back. I wanted to look through it some more. Margot got madder by the minute, and Mother butted in: Margot was reading that book; give it back to her. Father came in, and without even knowing what was going on, saw that Margot was being wronged and lashed out at me: Id like to see what youd do if Margot was looking at one of your books! I promptly gave in, put the book down and, according to them, left the room in a huff. I was neither huffy nor cross, but merely sad. It wasnt right of Father to pass judgment without knowing what the issue was. I would have given the book to Margot myself, and a lot sooner, if Father and Mother hadnt intervened and rushed to take Margots part, as if she were suffering some great injustice. Of course, Mother took Margots side; they always take each others sides. Im so used to it that Ive become completely indifferent to Mothers rebukes and Margots moodiness. I love them, but only because theyre Mother and Margot. I dont give a darn about them as people. As far as Im concerned, they can go jump in a lake. Its different with Father. When I see him being partial to Margot, approving Margots every action, praising her, hugging her, I feel a gnawing ache inside, because Im crazy about him. I model myself after Father, and theres no one in the world I love more. He doesnt realize that he treats Margot differently than he does me: Margot just happens to be the smartest, the kindest, the prettiest and the best. But I have a right to be taken seriously too. Ive always been the clown and mischief maker of the family; Ive always had to pay double for my sins: once with scoldings and then again with my own sense of despair. Im no longer satisfied with the meaningless affection or the supposedly serious talks. I long for something from Father that hes incapable of giving. Im not jealous of Margot; I never have been. Im not envious of her brains or her beauty. Its just that Id like to feel that Father really loves me, not because Im his child, but because Im me, Anne. I cling to Father because my contempt of Mother is growing daily and its only through him that Im able to retain the last ounce of family feeling I have left. He doesnt understand that I sometimes need to vent my feelings for Mother. He doesnt want to talk about it, and he avoids any discussion involving Mothers failings. And yet Mother, with all her shortcomings, is tougher for me to deal with. I dont know how I should act. I cant very well confront her with her carelessness, her sarcasm and her hardheartedness, yet I cant continue to take the blame for everything. Im the opposite of Mother, so of course we clash. I dont mean to judge her; I dont have that right. Im simply looking at her as a mother. Shes not a mother to me  I have to mother myself. Ive cut myself adrift from them. Im charting my own course, and well see where it leads me. I have no choice, because I can picture what a mother and a wife should be and cant seem to find anything of the sort in the woman Im supposed to call Mother. I tell myself time and again to overlook Mothers bad example. I only want to see her good points, and to look inside myself for whats lacking in her. But it doesnt work, and the worst part is that Father and Mother dont realize their own inadequacies and how much I blame them for letting me down. Are there any parents who can make their children completely happy? Sometimes I think God is trying to test me, both now and in the future. Ill have to become a good person on my own, without anyone to serve as a model or advise me, but itll make me stronger in the end. Who else but me is ever going to read these letters? Who else but me can I turn to for comfort? Im frequently in need of consolation, I often feel weak, and more often than not, I fail to meet expectations. I know this, and every day I resolve to do better. They arent consistent in their treatment of me. One day they say that Annes a sensible girl and entitled to know everything, and the next that Annes a silly goose who doesnt know a thing and yet imagines shes learned all she needs to know from books! Im no longer the baby and spoiled little darling whose every deed can be laughed at. I have my own ideas, plans and ideals, but am unable to articulate them yet. Oh well. So much comes into my head at night when Im alone, or during the day when Im obliged to put up with people I cant abide or who invariably misinterpret my intentions. Thats why I always wind up coming back to my diary  I start there and end there because Kittys always patient. I promise her that, despite everything, Ill keep going, that Ill find my own way and choke back my tears. I only wish I could see some results or, just once, receive encouragement from someone who loves me. Dont condemn me, but think of me as a person who sometimes reaches the bursting point! Yours, Anne MONDAY, NOVEMBER 9,1942 Dearest Kitty, Yesterday was Peters birthday, his sixteenth. I was upstairs by eight, and Peter and I looked at his presents. He received a game of Monopoly, a razor and a cigarette lighter. Not that he smokes so much, not at all; it just looks so distinguished. The biggest surprise came from Mr. van Daan, who reported at one that the English had landed in Tunis, Algiers, Casablanca and Oran. This is the beginning of the end, everyone was saying, but Churchill, the British Prime Minister, who must have heard the same thing being repeated in England, declared, This is not the end. It is not even the beginning of the end. But it is, perhaps, the end of the beginning. Do you see the difference? However, theres reason for optimism. Stalingrad, the Russian city that has been under attack for three months, still hasnt fallen into German hands. In the true spirit of the Annex, I should talk to you about food. (I should explain that theyre real gluttons up on the top floor.) Bread is delivered daily by a very nice baker, a friend of Mr. Kleimans. Of course, we dont have as much as we did at home, but its enough. We also purchase ration books on the black market. The price keeps going up; its already risen from 27 to 33 guilders. And that for mere sheets of printed paper! To provide ourselves with a source of nutrition that will keep, aside from the hundred cans of food weve stored here, we bought three hundred pounds of beans. Not just for us, but for the office staff as well. Wed hung the sacks of beans on hooks in the hallway, just inside our secret entrance, but a few seams split under the weight. So we decided to move them to the attic, and Peter was entrusted with the heavy lifting. He managed to get five of the six sacks upstairs intact and was busy with the last one when the sack broke and a flood, or rather a hailstorm, of brown beans went flying through the air and down the stairs. Since there were about fifty pounds of beans in that sack, it made enough noise to raise the dead. Downstairs they were sure the house was falling down around their heads. Peter was stunned, but then burst into peals of laughter when he saw me standing at the bottom of the stairs, like an island in a sea of brown, with waves of beans lapping at my ankles. We promptly began picking them up, but beans are so small and slippery that they roll into every conceivable corner and hole. Now each time we go upstairs, we bend over and hunt around so we can present Mrs. van Daan with a handful of beans. I almost forgot to mention that Father has recovered from his illness. Yours, Anne P.S. The radio has just announced that Algiers has fallen. Morocco, Casablanca and Oran have been in English hands for several days. Were now waiting for Tunis. TUESDAY, NOVEMBER 10, 1942 Dearest Kitty, Great news! Were planning to take an eighth person into hiding with us! Yes, really. We always thought there was enough room and food for one more person, but we were afraid of placing an even greater burden on Mr. Kugler and Mr. Kleiman. But since reports of the dreadful things being done to the Jews are getting worse by the day, Father decided to sound out these two gentlemen, and they thought it was an excellent plan. Its just as dangerous, whether there are seven or eight, they noted rightly. Once this was settled, we sat down and mentally went through our circle of acquaintances, trying to come up with a single person who would blend in well with our extended family. This wasnt difficult. After Father had rejected all the van Daan relatives, we chose a dentist named Alfred Dussel. He lives with a charming Christian lady whos quite a bit younger than he is. Theyre probably not married, but thats beside the point. Hes known to be quiet and refined, and he seemed, from our superficial acquaintance with him, to be nice. Miep knows him as well, so shell be able to make the necessary arrangements. If he comes, Mr. Dussel will have to sleep in my room instead of Margot, who will have to make do with the folding bed. [After Dussel arrived, Margot slept in her parents bedroom.] Well ask him to bring along something to fill cavities with. Yours, Anne THURSDAY, NOVEMBER 12, 1942 Dearest Kitty, Miep came to tell us that shed been to see Dr. Dussel. He asked her the moment she entered the room if she knew of a hiding place and was enormously pleased when Miep said she had something in mind. She added that hed need to go into hiding as soon as possible, preferably Saturday, but he thought this was highly improbable, since he wanted to bring his records up to date, settle his accounts and attend to a couple of patients. Miep relayed the message to us this morning. We didnt think it was wise to wait so long. All these preparations require explanations to various people who we feel ought to be kept in the dark. Miep went to ask if Dr. Dussel couldnt manage to come on Saturday after all, but he said no, and now hes scheduled to arrive on Monday. I think its odd that he doesnt jump at our proposal. If they pick him up on the street, it wont help either his records or his patients, so why the delay? If you ask me, its stupid of Father to humor him. Otherwise, no news. Yours, Anne TUESDAY, NOVEMBER 17, 1942 Dearest Kitty! Mr. Dussel has arrived. Everything went smoothly. Miep told him to be at a certain place in front of the post office at 11 A.M., when a man would meet him, and he was at the appointed place at the appointed time. Mr. Kleiman went up to him, announced that the man he was expecting to meet was unable to come and asked him to drop by the office to see Miep. Mr. Kleiman took a streetcar back to the office while Mr. Dussel followed on foot. It was eleventwenty when Mr. Dussel tapped on the office door. Miep asked him to remove his coat, so the yellow star couldnt be seen, and brought him to the private office, where Mr. Kleiman kept him occupied until the cleaning lady had gone. On the pretext that the private office was needed for something else, Miep took Mr. Dussel upstairs, opened the bookcase and stepped inside, while Mr. Dussellooked on in amazement. In the meantime, the seven of us had seated ourselves around the dining table to await the latest addition to our family with coffee and cognac. Miep first led him into the Frank familys room. He immediately recognized our furniture, but had no idea we were upstairs, just above his head. When Miep told him, he was so astonished he nearly fainted. Thank goodness she didnt leave him in suspense any longer, but brought him upstairs. Mr. Dussel sank into a chair and stared at us in dumbstruck silence, as though he thought he could read the truth on our faces. Then he stuttered, Aber . but are you nicht in Belgium? The officer, the auto, they were not coming? Your escape was not working? We explained the whole thing to him, about how wed deliberately spread the rumor of the officer and the car to throw the Germans and anyone else who might come looking for us off the track. Mr. Dussel was speechless in the face of such ingenuity, and could do nothing but gaze around in surprise as he explored the rest of our lovely and ultrapractical Annex. We all had lunch together. Then he took a short nap, joined us for tea, put away the few belongings Miep had been able to bring here in advance and began to feel much more at home. Especially when we handed him the following typewritten rules and regulations for the Secret Annex (a van Daan production): PROSPECTUS AND GUIDE TO THE SECRET ANNEX A Unique Facility for the Temporary Accommodation of Jews and Other Dispossessed Persons Open all year round: Located in beautiful, quiet, wooded surroundings in the heart of Amsterdam. No private residences in the vicinity. Can be reached by streetcar 13 or 17 and also by car and bicycle. For those to whom such transportation has been forbidden by the German authorities, it can also be reached on foot. Furnished and unfurnished rooms and apartments are available at all times, with or without meals. Price: Free. Diet: Lowfat. Runnina water in the bathroom (sorry, no bath) and on various inside and outside walls. Cozy wood stoves for heating. Ample storage space for a variety of goods. Two large, modern safes. Private radio with a direct line to London, New York, Tel Aviv and many other stations. Available to all residents after 6 P.M. No listening to forbidden broadcasts, with certain exceptions, i.e., German stations may only be tuned in to listen to classical music. It is absolutely forbidden to listen to German news bulletins (regardless of where they are transmitted from) and to pass them on to others. Rest hours: From 10 P.M. to 7:30 A.M.; 10:15 A.M. on Sundays. Owing to circumstances, residents are required to observe rest hours during the daytime when instructed to do so by the Management. To ensure the safety of all, rest hours must be strictly observed!!! Freetime activities: None allowed outside the house until further notice. Use of language: It is necessary to speak softly at all times. Only the language of civilized people may be spoken, thus no German. Reading and relaxation: No German books may be read, except for the classics and works of a scholarly nature. Other books are optional. Calisthenics: Daily. Singing: Only softly, and after 6 P.M. Movies: Prior arrangements required. Classes: A weekly correspondence course in shorthand. Courses in English, French, math and history offered at any hour of the day or night. Payment in the form of tutoring, e.g., Dutch. Separate department for the care of small household pets (with the exception of vermin, for which special permits are required). Mealtimes: Breakfast: At 9 A.M. daily except holidays and Sundays; at approximately 11:30 A.M. on Sundays and holidays. Lunch: A light meal. From 1:15 P.M. to 1:45 P.M. Dinner: Mayor not be a hot meal. Mealtime depends on news broadcasts. Obligations with respect to the Supply Corps: Residents must be prepared to help with office work at all times. Baths: The washtub is available to all residents after 9 A.M. on Sundays. Residents may bathe in the bathroom, kitchen, private office or front office, as they choose. Alcohol: For medicinal purposes Only

client = "ARX"
a = pl.read_ipc(r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\RUNs\run_2023-06-01.feather")
a = a.filter(pl.col("cliente") != client)
a.write_ipc(r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\RUNs\run_2023-06-01.feather")
import polars as pl
import pandas as pd
import requests
import polars as pl
from xbbg import blp
class Moodys_rating():
    
    LINKS = [
        "https://www.moodyslocal.com/api/countries/BR/ratings?sector=Corporates",
        "https://www.moodyslocal.com/api/countries/BR/ratings?sector=Financial+Institutions",
        "https://www.moodyslocal.com/api/countries/BR/ratings?sector=Fixed+Income+Funds",
        "https://www.moodyslocal.com/api/countries/BR/ratings?sector=Infrastructure+Projects",
        "https://www.moodyslocal.com/api/countries/BR/ratings?sector=Insurance",
        "https://www.moodyslocal.com/api/countries/BR/ratings?sector=Structured+Finance",
        "https://www.moodyslocal.com/api/countries/BR/ratings?sector=Sub+Sovereign"
    ]
    
    def __init__(self):
        self.create_dictionary()
        self.requests_links()
        
    def create_dictionary(self):
        self.dictionary_ratings = {}
        self.dictionary_ratings["company"] = []
        self.dictionary_ratings["date"] = []
        self.dictionary_ratings["rating"] = []

    def requests_links(self):
        for link in self.LINKS:
            self.r = requests.get(link)
            self.build_dictionary()
            
    def build_dictionary(self):
        for dictionary in r.json():
            for key in self.dictionary_ratings.keys():
                self.dictionary_ratings[key].append(None)
            self.dictionary_ratings["company"][-1] = dictionary["es"]["entity"]
            self.dictionary_ratings["date"][-1] = dictionary["es"]["date"]
            if len(dictionary["es"]["instruments"]) == 1:
                self.dictionary_ratings["rating"][-1] = dictionary["es"]["instruments"][0]["ratingValue"]
            else:
                for rating in dictionary["es"]["instruments"]:
                    rating_type = rating["ratingType"]
                    if rating_type in self.dictionary_ratings:
                        self.dictionary_ratings[rating_type][-1] = rating["ratingValue"]
                    else:
                        self.dictionary_ratings[rating_type] = [None]*len(self.dictionary_ratings["company"])
                        self.dictionary_ratings[rating_type][-1] = rating["ratingValue"]
dictionary_ratings = {}
dictionary_ratings["company"] = []
dictionary_ratings["date"] = []
for dictionary in r.json():
    for key in dictionary_ratings.keys():
        dictionary_ratings[key].append(None)
    dictionary_ratings["company"][-1] = dictionary["es"]["entity"]
    dictionary_ratings["date"][-1] = dictionary["es"]["date"]
    for rating in dictionary["es"]["instruments"]:
        rating_type = rating["ratingType"]
        if rating_type in dictionary_ratings:
            dictionary_ratings[rating_type][-1] = rating["ratingValue"]
        else:
            dictionary_ratings[rating_type] = [None]*len(dictionary_ratings["company"])
            dictionary_ratings[rating_type][-1] = rating["ratingValue"]
def str_to_list(texto):
    return texto[1:-1].replace('},{"es"','},**trocar**{"es"').split("**trocar**")

def procurar(palavra,texto):
    tam=len(palavra)
    ini=texto.find(palavra)
    fim=texto[ini+tam+1:].find('"')
    return texto[ini+tam+1:ini+tam+fim+1], texto[ini+tam+fim+1:]    
    
def str_to_dict(texto):
    dicio={}
    dicio['Empresa'],texto=procurar('"entity":',texto)
    dicio['Data'],texto=procurar(',"date":',texto)
    
    ##Instrumentos - pode ter mais de 1, então separar a lista e transformar em dict talvez?
    ini=texto.find('{"ratingValue":')
    while ini>-1:
        r_nota,texto=procurar('{"ratingValue":',texto)
        if r_nota!="WR":
            r_nome,texto=procurar('"ratingType":',texto)
            dicio[r_nome]=r_nota
        ini=texto.find('{"ratingValue":')
    return dicio

def obter_ratings_m(l):
    r=requests.get(l)
    lista=str_to_list(r.text)
    df=pd.Series(str_to_dict(lista[0]))
    for t in lista[1:]:
        df=pd.concat([df,pd.Series(str_to_dict(t))],axis=1)
    df=df.T
    return df

links=["https://www.moodyslocal.com/api/countries/BR/ratings?sector=Corporates","https://www.moodyslocal.com/api/countries/BR/ratings?sector=Financial+Institutions",
     "https://www.moodyslocal.com/api/countries/BR/ratings?sector=Fixed+Income+Funds","https://www.moodyslocal.com/api/countries/BR/ratings?sector=Infrastructure+Projects",
     "https://www.moodyslocal.com/api/countries/BR/ratings?sector=Insurance","https://www.moodyslocal.com/api/countries/BR/ratings?sector=Structured+Finance",
     "https://www.moodyslocal.com/api/countries/BR/ratings?sector=Sub+Sovereign"]
    
ratings_m=obter_ratings_m(links[0])
for link in links[1:]:
    ratings_m=pd.concat([ratings_m,obter_ratings_m(link)])
    
ratings_m=ratings_m.dropna(thresh=3) #Retirar os que não possuem rating algum (possivelmente era tudo WR e eu não coloquei)
import polars as pl
from datetime import datetime
from numpy import busday_offset
import os
class Cra_db():
    
    'As of 15/may/23, up2data stopped sending security list for CRA and CRI'
    
    CRA_FIRST_PATH = r"Y:\20230428\Fixed_Income\CRA\SecurityList\Fixed_Income_FixedIncomeCRAInstrumentFile_20230427_2.json"
    CRI_FIRST_PATH = r"Y:\20230428\Fixed_Income\CRI\SecurityList\Fixed_Income_FixedIncomeCRIInstrumentFile_20230427_2.json"
    DATABASE_PATH = r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\Database renda fixa"
    CRA_DATABASE_NAME = "db_cra.parquet"
    CRA_COLUMNS = {
        "TckrSymb": "ticker", 'XprtnDt': 'vencimento', 'CrpnNm': 'securitizadora', 'IsseUnitPric': 'pu_emitido',
        'IssdQty': 'quantidade_emitido', 'IsseTtlVal': 'total_mercado', "IntrstParamsPctg": "taxa_emitido",
        'InstrmRmnrtnTp': 'indexador', 'ISIN': 'isin', "OTCSgmtNm": "tipo", "InstrmEmssnDt": "data_emitido",
    }
    
    def __init__(self):
        pass
        #self.update_info()
        
    def get_first_info(self):
        files = os.listdir(self.DATABASE_PATH)
        if self.CRA_DATABASE_NAME in files:
            raise Exception("Já existe db de cra e cri. Deletar na mão em vez de reescrever.")
            
        cra_df = pl.read_json(self.CRA_FIRST_PATH)
        cri_df = pl.read_json(self.CRI_FIRST_PATH)
        self.df = pl.concat([cra_df, cri_df])
       
        self.format_df()
        
        self.df.write_parquet(self.DATABASE_PATH + "\\" + self.CRA_DATABASE_NAME)
        
    def format_df(self):
        self.df = self.df.rename(self.CRA_COLUMNS).select(pl.col(self.CRA_COLUMNS.values()))
        for column in ["taxa_emitido", "pu_emitido", "quantidade_emitido", "total_mercado"]:
            self.df = self.df.with_columns(
                pl.when(pl.col(column) == "")
                .then(None)
                .otherwise(pl.col(column))
                .cast(pl.Float32)
                .keep_name()
            )

        self.df = self.df.with_columns(
            pl.col("taxa_emitido")/100,
            pl.col(["vencimento", "data_emitido"]).str.strptime(pl.Date, "%Y-%m-%d"),
            (pl.col("quantidade_emitido")*pl.col("pu_emitido")).alias("reais_emitido"),
            pl.lit(None).alias("empresa")
        )
        
        self.df = self.df.with_columns(
            pl.when((pl.col("indexador") == "DI") & (pl.col("taxa_emitido") != 0))
            .then(
                pl.when(pl.col("taxa_emitido") < 0.2)
                .then("DI +")
                .otherwise(
                    pl.when(pl.col("taxa_emitido") > 0.9)
                    .then("% DI")
                    .otherwise(pl.col("indexador"))
                )
            )
            .otherwise(pl.col("indexador"))
            .keep_name(),
            
            pl.when(pl.col(pl.Date).dt.year() > 2150)
            .then(None)
            .otherwise(pl.col(pl.Date))
            .keep_name()
        )

    def write_cra(self):
        pass
        #Só escrever se eu conseguir criar algum update para os cris e cras
class Debenture_db():
    
    DEBENTURE_FIRST_PATH = (r"Y:\20230428\Debentures_MTM\SecurityList\Debentures"
                                + "_MTM_SecurityListDebentureFileV2_20230428_13.json")
    DATABASE_PATH = r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\Database renda fixa"
    DEB_DATABASE_NAME = "db_deb.parquet"
    
    DEBENTURE_COLUMNS = {
        "TckrSymb": "ticker", 'XprtnDt': 'vencimento', 'FxdIntrstRate': 'taxa_emitido', 'IndxShrtNm': 'indexador',
        'CrpnNm': 'empresa', "IsseUnitPric": 'pu_emitido', 'IssdQty': 'quantidade_emitido', 
        'MktQty': 'quantidade_mercado_emitido', 'Law12431SpprtInd': 'incentivada', "Clss": "conversivel",
        'ISIN': 'isin', "IntrstAcctgIntrvlUnit": "unidade", "InstrmDdlnClclsRef": "critério", 
        "IntrstSprdDesc":"metodo_taxa", "IntrstBizDaysClclsRef": "252/360", "IsseDt": "data_emitido",
        "Law12431Artl": "artigo"
    }
    
    def __init__(self, date):
        self.date = date
        self.largest_file()
        self.format_df()
        self.update_database()
        
    def get_first_info(self):
        self.df = pl.read_json(self.DEBENTURE_FIRST_PATH)
        files = os.listdir(self.DATABASE_PATH)
        if self.DEB_DATABASE_NAME in files:
            raise Exception("Já existe db de debentures. Deletar na mão em vez de reescrever.")
        
        self.format_df()
        
        self.df.write_parquet(self.DATABASE_PATH + "\\" + self.DEB_DATABASE_NAME)
        
    def largest_file(self):
        files =  os.scandir("Y:\\" + self.date.strftime("%Y%m%d") + r"\Debentures_MTM\SecurityList")
        paths = []
        sizes = []
        for file in files:
            paths.append(file.path)
            sizes.append(file.stat().st_size)
        df = pl.DataFrame({"paths": paths, "sizes": sizes})
        json_file = df.filter(pl.col("paths").str.contains(".json")).sort(by="sizes", descending = True)[0, 0]
        self.df = pl.read_json(json_file)
        
    def format_df(self):
        self.df = self.df.rename(self.DEBENTURE_COLUMNS).select(self.DEBENTURE_COLUMNS.values())
        for column in ["taxa_emitido", "pu_emitido", "quantidade_emitido", "quantidade_mercado_emitido"]:
            self.df = self.df.with_columns(
                pl.when(pl.col(column) == "")
                .then(None)
                .otherwise(pl.col(column))
                .cast(pl.Float32)
                .keep_name()
            )

        self.df = self.df.with_columns(
            pl.col("taxa_emitido")/100,
            pl.col(["vencimento", "data_emitido"]).str.strptime(pl.Date, "%Y-%m-%d"),
            pl.when(pl.col("artigo") == "")
            .then(None)
            .otherwise(pl.col("artigo"))
            .cast(pl.Int16)
            .keep_name(),
            
            pl.when(pl.col("incentivada") == "true")
            .then(True)
            .otherwise(False)
            .keep_name(),
            
            (pl.col("quantidade_emitido")*pl.col("pu_emitido")).alias("reais_emitido"),
            (pl.col("quantidade_mercado_emitido")*pl.col("pu_emitido")).alias("reais_mercado_emitido"),
            pl.lit("DEB").alias("tipo")
        )
        
        self.df = self.df.with_columns(
            pl.when((pl.col("indexador") == "DI") & (pl.col("taxa_emitido") != 0))
            .then(
                pl.when(pl.col("taxa_emitido") < 0.2)
                .then("DI +")
                .otherwise(
                    pl.when(pl.col("taxa_emitido") > 0.9)
                    .then("% DI")
                    .otherwise(pl.col("indexador"))
                )
            )
            .otherwise(pl.col("indexador"))
            .keep_name(),
            
            pl.when(pl.col(pl.Date).dt.year() > 2150)
            .then(None)
            .otherwise(pl.col(pl.Date))
            .keep_name()
        )
        
    def update_database(self):
        self.db = pl.read_parquet(self.DATABASE_PATH + "\\" + self.DEB_DATABASE_NAME)
        self.db = pl.concat([self.db, self.df]).unique()
        self.db.write_parquet(self.DATABASE_PATH + "\\" + self.DEB_DATABASE_NAME)
class Debenture_trade():

    TRADE_COLUMNS = {"TckrSymb": "ticker", "MinPric": "price_min", "MaxPric": "price_max", "TradAvrgPric": "price_avg",
                "TradQty": "trades_number", "FinInstrmQty": "trades_quantity", "NtlFinVol": "financial_volume",
                "OprnClssfctnTpNm": "passagem", "EvtAndSttlmGap": "liquidation"}
    
    WRITE_PATH = r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\Trades debentures"
    
    def __init__(self, date):
        self.date = date
        self.largest_file()
        self.format_df()
        self.write_df()
    
    def largest_file(self):
        files =  os.scandir("Y:\\" + self.date.strftime("%Y%m%d") + r"\Debentures_MTM\TradeInformation")
        paths = []
        sizes = []
        for file in files:
            paths.append(file.path)
            sizes.append(file.stat().st_size)
        df = pl.DataFrame({"paths": paths, "sizes": sizes})
        json_file = df.filter(pl.col("paths").str.contains(".json")).sort(by="sizes", descending = True)[0, 0]
        self.df = pl.read_json(json_file)
        
    def format_df(self):
        self.df = self.df.rename(self.TRADE_COLUMNS).select(self.TRADE_COLUMNS.values())
        for column in ["price_min", "price_max", "price_avg", "financial_volume", "trades_number", "trades_quantity"]:
            self.df = self.df.with_columns(
                pl.when(pl.col(column) == "")
                .then(None)
                .otherwise(pl.col(column))
                .keep_name()
            )
        self.df = self.df.with_columns(
            pl.col(["price_min", "price_max", "price_avg", "financial_volume"]).cast(pl.Float32),
            pl.col(["trades_number", "trades_quantity"]).cast(pl.Int32)
        )
        
    def write_df(self):
        self.df.write_ipc(self.WRITE_PATH + "\\" + "trades_deb_" + self.date.strftime("%Y-%m-%d") + ".feather")
if __name__ == "__main__":
    DAYS_CHECK = 7
    today = datetime.today()
    for days_subtract in range(1, DAYS_CHECK):
        date = busday_offset(datetime.today().strftime("%Y-%m-%d"), (-1)*days_subtract)
        date = date.item()
        date_string = date.strftime("%Y%m%d")
        print(date_string)
        if exist_up2data_day(date_string):
            print("1")
            if not day_already_copied(date):
                print("2")
                Debenture_trade(date)
                Debenture_db(date)
class Df_operations():
    
    WB_NAME = "RUN Crédito Privado.xlsm"
    SHEET_NAME = "Add RUN"
    INFO_LAST_LINE = "B4"
    RANGE_DRAFT = "I5:V"
    RANGE_FORMATTED = "C6:G2000"
    CELL_PRINT = RANGE_FORMATTED[:2]
    COLUMNS_NAME = ["ticker", "vol bid", "bid", "ask", "vol ask"]
    
    def __init__(self):
        pass

    def obtain_df(self):
        self.wb = xw.Book(self.WB_NAME)
        self.sheet = self.wb.sheets[self.SHEET_NAME]
        last_line = self.sheet.range(self.INFO_LAST_LINE).value
        
        my_date_handler = lambda year, month, day, **kwargs: f"{month:02d}/{year-2000:02d}"
        run_values = self.sheet.range(self.RANGE_DRAFT + str(int(last_line))).options(dates=my_date_handler).value
        
        self.df = pl.DataFrame(run_values[1:], orient = "row")
        self.columns_rename = run_values[0]
        
    def rename_columns(self):
        dict_rename_columns = {}
        old_columns_names = self.df.columns
        new_columns = []
        
        for index in range(0, len(self.columns_rename)):
            if self.columns_rename[index] is not None:
                new_columns.append(self.columns_rename[index])
                dict_rename_columns[old_columns_names[index]] = self.columns_rename[index]
                
        if ("ticker" not in new_columns):
            raise Personal_exception("Não há coluna 'ticker'")
        
        if ("ask" not in new_columns) and ("bid" not in new_columns):
            raise Personal_exception("Não há coluna 'bid' nem 'ask'")
                
        self.df = self.df.rename(dict_rename_columns)
        
        for name in self.COLUMNS_NAME:
            if name not in new_columns:
                self.df = self.df.with_columns(pl.lit(None).alias(name))

        if "vol bid/ask" in new_columns:
            self.df = self.df.with_columns(
                pl.col("vol bid/ask").alias("vol bid"),
                pl.col("vol bid/ask").alias("vol ask")
            )        
           
        exist_vencimento = "venc" in self.columns_rename
        if exist_vencimento:
            self.df = self.df.select(self.COLUMNS_NAME + ["venc"])
            self.include_maturity_lf()
        else:
            self.df = self.df.select(self.COLUMNS_NAME)

        self.str_columns = self.df.select(pl.col(pl.Utf8)).columns
        
    def str_columns_adjust(self):
        self.df = self.df.with_columns(
            pl.col(self.str_columns)
            .str.strip()
            .str.to_uppercase()
            .str.replace(",", ".")
        ).with_columns(
            pl.when(pl.col("ticker") == "")
            .then(None)
            .otherwise(pl.col("ticker"))
            .keep_name()
        )
        
    def include_maturity_lf(self):
        '''As of may/23, there was no debenture starting with "LF"'''

        self.df = self.df.with_columns(
            pl.when(pl.col("ticker").str.contains("^LF"))
            .then(pl.col("ticker") + " - " + pl.col("venc"))
            .otherwise(pl.col("ticker"))
            .alias("ticker")
        ).select(pl.exclude("venc"))
    
    def rows_to_exclude(self):
        self.test = self.df
        self.df = (self.df
                   .filter(
                       pl.any(pl.col(["bid", "ask"]).is_null().is_not())
                       &
                       pl.col("ticker").is_null().is_not()
                   )
                   .with_columns(
                       pl.col(["vol bid", "bid", "ask", "vol ask"]).fill_null(0)
                   )
                  )
        self.df = self.df.filter(
                        (pl.col("ticker")
                         .str.contains("ATIVO|TICKER|DEB[ÊE]NTURE|---|INFRA|SPREAD OVER|COMPRO|CPN|CRA$|CRI$").is_not()
                        )
                        &
                        (pl.all(
                            ~pl.col(["bid", "ask"])
                            .str.contains("[bB][iI][dD]|[aA][sS][kK]|VALUE|VALOR|##|IPCA|CDI|COMPRA|VENDA|INDIC 1MM"))
                        )
        )
        exist_duplicates = not (self.df.filter(pl.col("ticker").is_duplicated()).is_empty())
        if exist_duplicates:
            tickers_duplicateds = self.df.select(pl.col("ticker")).filter(pl.col("ticker").is_duplicated()).unique()
            
            raise Personal_exception(f"Há tickers duplicados:\n{tickers_duplicateds}")
    
    def bid_ask_adjust(self):
        for column_name in ["bid", "ask"]:
            if column_name in self.str_columns:
                self.df = self.df.with_columns(
                    pl.col(column_name)
                    .str.replace("%$|v$", "")
                    .str.strip()                                       
                ).with_columns(
                    pl.when(pl.col(column_name).is_in(["-", ""]))
                    .then(None)
                    .otherwise(pl.col(column_name))
                    .cast(pl.Float64)
                    .keep_name()
                )
            else:
                self.df = self.df.with_columns(pl.col(column_name).cast(pl.Float64))
            
        self.df = self.df.filter(
            (pl.col("bid") > 0)
            | (pl.col("ask") > 0)
        )
        #Minimum value is considered at the moment 180% CDI. Lower values might confuse with cdi + 1.5%
        minimum_value_to_divide = 1.8
        divide_by_100 = not self.df.filter(pl.any(pl.col(["bid", "ask"]) > minimum_value_to_divide)).is_empty()
        
        if divide_by_100:
            #Maximum value is considered at the moment as IPCA + 10%, higher values might confuse with cdi + 0.5%
            maximum_value_to_not_divide = 0.1
            not_divide_by_100 = not self.df.filter(
                                    ((pl.col("bid") > 0) & (pl.col("bid") < maximum_value_to_not_divide))
                                    |
                                    ((pl.col("ask") > 0) & (pl.col("ask") < maximum_value_to_not_divide))
                                    ).is_empty()
            if not_divide_by_100:
                message = "Alguns valores em bid/ask estão em % e outros não"
                raise Personal_exception(message)
            else:
                self.df = self.df.with_columns(pl.col(["bid", "ask"])/100)
        
        ask_higher_bid_df = (self.df
                             .filter(
                                 (pl.col("ask") >= pl.col("bid"))
                                 &
                                 (pl.col("bid") != 0)
                             )
                            )
        ask_higher_bid = not ask_higher_bid_df.is_empty()
                                 
        if ask_higher_bid:
            raise Personal_exception(f"Existe ask maior ou igual a bid\n\n{ask_higher_bid_df}")
            
    def volume_adjust(self):
        self.df_old = self.df
        for column_name in ["vol bid", "vol ask"]:
            if column_name in self.str_columns:
                self.df = self.df.with_columns(
                            pl.when(pl.col(column_name) == "")
                            .then(None)
                            .otherwise(pl.col(column_name))
                            .alias(column_name)
                        )
                
                self.df = self.df.with_columns(
                                    pl.col(column_name)
                                    .str.replace("[mM][lL][nN]|[mM][mM]$|[mM]|[kK]$", "")
                                    .str.replace("^~|^>", "")
                                    .str.strip()
                                    .cast(pl.Float32)
                                    /
                                    pl.when(pl.col("vol ask").str.contains("[kK]$"))
                                    .then(1000)
                                    .otherwise(1)
                                )
            
            
        #Minimum value is considered at the moment 100mm. Lower values might confuse with high volume
        minimum_value_to_divide = 100
        divide_by_1000 = not self.df.filter(pl.any(pl.col(["vol bid", "vol ask"]) > minimum_value_to_divide)).is_empty()
        
        minimum_value_to_divide = 1e5
        divide_by_million = not self.df.filter(pl.any(pl.col(["vol bid", "vol ask"]) > minimum_value_to_divide)).is_empty()
        
        if divide_by_million:
            #Maximum value is considered at the moment as 0.1mm. Higher values might confuse with 100k
            maximum_value_to_not_divide = 1e2
            not_divide_by_million = not self.df.filter(
                                    ((pl.col("vol bid") > 0) & (pl.col("vol bid") < maximum_value_to_not_divide))
                                    |
                                    ((pl.col("vol ask") > 0) & (pl.col("vol ask") < maximum_value_to_not_divide))
                                    ).is_empty()
            if not_divide_by_million:
                message = "Alguns valores em vol bid/vol ask estão em K e outros em MM"
                raise Personal_exception(message)
            else:
                self.df = self.df.with_columns(pl.col(["vol bid", "vol ask"])/1e6)
                
        elif divide_by_1000:
            #Maximum value is considered at the moment as 0.1mm. Higher values might confuse with 100k
            maximum_value_to_not_divide = 0.1
            not_divide_by_1000 = not self.df.filter(
                                    ((pl.col("vol bid") > 0) & (pl.col("vol bid") < maximum_value_to_not_divide))
                                    |
                                    ((pl.col("vol ask") > 0) & (pl.col("vol ask") < maximum_value_to_not_divide))
                                    ).is_empty()
            if not_divide_by_1000:
                message = "Alguns valores em vol bid/vol ask estão em K e outros em MM"
                raise Personal_exception(message)
            else:
                self.df = self.df.with_columns(pl.col(["vol bid", "vol ask"])/1000)
    
    def print_to_excel(self):
        self.sheet.range(self.RANGE_FORMATTED).value = ""
        self.sheet.range(self.CELL_PRINT).options(index=False, header=False).value = self.df.to_pandas()
try:
    run = Df_operations()
    run.obtain_df()
    run.rename_columns()
    run.str_columns_adjust()
    run.rows_to_exclude()
    run.bid_ask_adjust()
    run.volume_adjust()
    run.print_to_excel()

except Personal_exception as error:
    error_global = error
    print(error)
class Database_fixed_income():
    
    DEB_PATH = r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\Database renda fixa\db_deb.parquet"
    CRA_PATH = r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\Database renda fixa\db_cra.parquet"
    COLUMNS = ["ticker", "vencimento", "taxa_emitido", "indexador", "empresa", "pu_emitido",
               "isin", "data_emitido", "reais_emitido", "tipo", "incentivada", "artigo"]
    
    def __init__(self):
        self.get_deb_database()
        self.get_cra_database()
        self.concat_databases()
    
    def get_deb_database(self):
        self.df_deb = pl.read_parquet(self.DEB_PATH).select(pl.col(self.COLUMNS))

    def get_cra_database(self):
        self.df_cra = pl.read_parquet(self.CRA_PATH)
        
        self.df_cra = self.df_cra.with_columns(
            pl.lit(True).alias("incentivada"),
            pl.lit(None).cast(pl.Int16).alias("artigo")
        )

        self.df_cra = self.df_cra.select(pl.col(self.COLUMNS))
        
    def concat_databases(self):

        self.df = pl.concat([self.df_deb, self.df_cra])
class Anbima():
    
    PATH_ANBIMA_DEB = r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\Anbima\Debêntures\anbima_deb_"
    PATH_ANBIMA_CRA = r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\Anbima\Cra\anbima_cra_"
    PATH_ANBIMA_TIT = r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\Anbima\Títulos públicos\anbima_tit_"
    COLUMNS_CRA = ["ticker", "anbima", "referencia_b", "duration_anbima"]
    
    def __init__(self, yesterday, df):
        self.yesterday = yesterday
        self.yesterday_string = yesterday.strftime("%Y-%m-%d")
        self.df = df
        self.get_anbima_deb()
        self.get_anbima_cra()
        self.get_anbima_tit()
        
    def get_anbima_deb(self):
        while True:
            try:
                deb = pl.read_ipc(self.PATH_ANBIMA_DEB + self.yesterday_string + ".feather")
                break
            except FileNotFoundError:
                self.check_last_anbima()
        self.deb = deb
        self.df = self.df.join(deb, how="left", on="ticker")
        
    def check_last_anbima(self):
        import requests
        URL = 'https://www.anbima.com.br/informacoes/merc-sec-debentures/arqs/db'
        r = requests.get(URL + self.yesterday.strftime("%y%m%d") + ".txt")
        file_found = (r.status_code == 200)
        if file_found:
            raise Personal_exception(f"Último arquivo da anbima {self.yesterday_string} não baixado.")
        else:
            self.yesterday = busday_offset(self.yesterday_string, -1)
            self.yesterday = self.yesterday.item()
            self.yesterday_string = self.yesterday.strftime("%Y-%m-%d")
    
    def get_anbima_cra(self):
        cra = pl.read_ipc(self.PATH_ANBIMA_CRA + self.yesterday_string + ".feather")
        cra = cra.select(pl.col(self.COLUMNS_CRA))
        self.cra = cra
        self.df = self.df.join(cra, how="left", on="ticker", suffix="_right")
        
        for column in ["anbima", "referencia_b", "duration_anbima"]:
            self.df = self.df.with_columns(
                pl.when((pl.col(column).is_null()) & (~pl.col(column + "_right").is_null()))
                .then(pl.col(column + "_right"))
                .otherwise(pl.col(column))
                .alias(column)
            ).drop(column + "_right")
        
    def get_anbima_tit(self):
        tit = pl.read_ipc(self.PATH_ANBIMA_TIT + self.yesterday_string + ".feather")
        tit = tit.with_columns(
            ("TIT: " + pl.col("ticker") + " " + pl.col("vencimento").dt.strftime("%y")).alias("ticker")
        )
        self.tit = tit
        
        columns = []
        for column in self.df.columns:
            if column not in self.tit.columns:
                columns.append(column)
                self.tit = self.tit.with_columns(pl.lit(None).alias(column))

        self.tit = self.tit.select(pl.col(self.df.columns))
        self.tit = self.tit.with_columns(
            pl.col(["pu_emitido", "taxa_emitido", "reais_emitido", "duration_anbima"])
            .cast(pl.Float32),
            pl.col("data_emitido").cast(pl.Date),
            pl.lit("Título público").alias("tipo"),
            pl.col(["indexador", "isin", "empresa", "referencia_b"]).cast(pl.Utf8),
            pl.col("incentivada").cast(pl.Boolean),
            pl.col("artigo").cast(pl.Int16)
        )
        self.df = pl.concat([self.tit, self.df])
class Workbook_info():
    
    WB_NAME = "RUN Crédito Privado.xlsm"
    SHEET_NEW_RUN = "Add RUN"
    SHEET_EXTRA = "RUN"
    RANGE_MAX_LINE = "B2:B3"
    RANGE_NEW_RUN = "C6:G"
    RANGE_EXTRA = "A18:F"
    LAST_LINE_DELETE = "2000"
    CLIENT_CELL = "C4"
    RANGE_NEW_RUN_DELETE = RANGE_NEW_RUN + LAST_LINE_DELETE
    RANGE_FORMATTED = "H4:L" + LAST_LINE_DELETE
    RANGE_DRAFT = "I5:V" + LAST_LINE_DELETE
    
    def __init__(self):
        self.obtain_sheets()
        self.obtain_new_run()
        self.obtain_extras()        
        
    def obtain_sheets(self):
        self.wb = xw.Book(self.WB_NAME)
        self.sheet_new_run = self.wb.sheets[self.SHEET_NEW_RUN]
        self.sheet_extra = self.wb.sheets[self.SHEET_EXTRA]
        self.lines = self.sheet_new_run.range(self.RANGE_MAX_LINE).value
        
    def obtain_new_run(self):
        max_line_new_run = str(int(self.lines[1]))
        self.exist_new_run = self.lines[1] > 5
        if self.exist_new_run:
            self.new_run = self.sheet_new_run.range(self.RANGE_NEW_RUN + max_line_new_run).value
            self.client = self.sheet_new_run.range(self.CLIENT_CELL).value
            if self.client is None:
                raise Personal_exception("Cliente está vazio")
            else:
                self.client = self.client.upper()
        
    def obtain_extras(self):
        line_extra = str(int(self.lines[0]))
        self.exist_extra = self.lines[0] > 17
        if self.exist_extra:
            self.extra_values = self.sheet_extra.range(self.RANGE_EXTRA + line_extra).value
        
    def clean_lines(self):
        cells_to_delete = [self.CLIENT_CELL, self.RANGE_NEW_RUN_DELETE, self.RANGE_DRAFT]
        cells_to_delete = ", ".join(cells_to_delete)
        self.sheet_new_run.range(cells_to_delete).value = ""
class Data_new_run():
    
    NEW_COLUMNS_NAMES = ["ticker", "vol bid", "bid", "ask", "vol ask", "cliente"]
    FLOAT_COLUMNS_DEFAULT = NEW_COLUMNS_NAMES[1:-1]
    STR_COLUMNS_DEFAULT = [NEW_COLUMNS_NAMES[0], NEW_COLUMNS_NAMES[-1]]
    
    def __init__(self, wb):
        self.wb = wb
        self.obtain_df()
        self.rename_columns()
        self.check_duplicates()
        self.check_columns_types()
        
    def obtain_df(self):
        empty_client = (self.wb.new_run[0][0] == None)
        df = pl.DataFrame(self.wb.new_run, orient = "row")
        self.df = df.with_columns(pl.lit(self.wb.client).alias("cliente"))
    
    def rename_columns(self):
        dict_rename_columns = {}
        old_columns_names = self.df.columns

        for index in range(0, 6):
            dict_rename_columns[old_columns_names[index]] = self.NEW_COLUMNS_NAMES[index]

        self.df = self.df.rename(dict_rename_columns).with_columns(pl.col(pl.Boolean).cast(pl.Float64))

    def check_duplicates(self):
        exist_duplicates = not (self.df.filter(pl.col("ticker").is_duplicated()).is_empty())
        if exist_duplicates:
            tickers_duplicateds = self.df.select(pl.col("ticker")).filter(pl.col("ticker").is_duplicated()).unique()
            raise Personal_exception(f"Há tickers duplicados:\n{tickers_duplicateds}")
        
    def check_columns_types(self):
        str_columns = self.df.select(pl.col(pl.Utf8)).columns
        wrong_columns = []
        for column in str_columns:
            if column not in self.STR_COLUMNS_DEFAULT:
                wrong_columns.append(column)
        exist_wrong_column = len(wrong_columns) > 0
        if exist_wrong_column:
            error_msg = "A(s) col(s): " + ", ".join(wrong_columns)\
                        + " está(ão) como número, talvez haja uma celula errada nela(s)"
            raise Personal_exception(error_msg)
class Runs_consolidated():
    
    TODAY_STRING = datetime.today().strftime("%Y-%m-%d")
    PATH_FEATHER = r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\RUNs\run_" + TODAY_STRING + ".feather"
    
    def __init__(self, df_run):
        self.df_run = df_run
        
        self.read_file()
        self.concatenate_files()
        if not self.df_runs.is_empty():
            self.duplicated_rows()
            self.write_concat_file()
            self.consolidate_files()
        
    def read_file(self):
        self.exist_previous_run = True
        try:
            self.df_runs = pl.read_ipc(self.PATH_FEATHER)
        except FileNotFoundError:
            self.exist_previous_run = False
            
    def concatenate_files(self):
        if self.df_run.is_empty():
            if not self.exist_previous_run:
                self.df_runs = pl.DataFrame()
        else:
            if self.exist_previous_run:
                self.df_runs = pl.concat([self.df_runs, self.df_run])
            else:
                self.df_runs = self.df_run
            
    def duplicated_rows(self):
        duplicated = self.df_runs.filter(pl.lit(self.df_runs.is_duplicated())).unique(subset="ticker")
        if not duplicated.is_empty():
            error_msg = (f"Linhas abaixo já existentes no consolidado atual:\n\n{duplicated}")
            raise Personal_exception(error_msg)
            
    def write_concat_file(self):
        self.df_runs = self.df_runs.sort(by=["ticker", "cliente"])
        self.df_runs.write_ipc(self.PATH_FEATHER)
        
    def consolidate_files(self):
        self.df_runs = (self.df_runs.with_columns(
            pl.col("bid").filter(pl.col("bid") > 0).min().over("ticker").alias("bid_min").fill_null(0),
            pl.col("ask").max().over("ticker").alias("ask_max")
            )
         .lazy()
         .groupby("ticker")
         .agg(
             pl.col("vol bid").filter((pl.col("bid_min") == pl.col("bid")) & (pl.col("bid") > 0)).sum().alias("vol_bid"),
             pl.col("bid_min").first(),
             pl.col("ask_max").first(),
             pl.col("vol ask").filter((pl.col("ask_max") == pl.col("ask")) & (pl.col("ask") > 0)).sum().alias("vol_ask"),
             pl.col("cliente").filter((pl.col("bid_min") == pl.col("bid")) & (pl.col("bid") > 0)).alias("cliente_bid"),
             pl.col("cliente").filter((pl.col("ask_max") == pl.col("ask")) & (pl.col("ask") > 0)).alias("cliente_ask")
         )
        ).collect().with_columns(
            pl.col("cliente_bid").arr.join(", "),
            pl.col("cliente_ask").arr.join(", "),
        ).sort("ticker")
        class Data_extra():
    
    def __init__(self, wb):
        self.wb = wb
        
        self.obtain_extras()
        pass
        
    def obtain_extras(self):
        self.extras = pl.DataFrame(self.wb.extra_values, orient = "row")
        
    def kill_orders(self):
        self.extras.filter(pl.col("bid").str.contains("[mM]"))
        pass
    
    def convert_interested_tickers(self):
        pass
class Joined_info():
    
    SHEET_CONSOLIDADO = "Consolidado"
    RANGE_PRINT_CONSOLIDADO = "A3"
    COLUMNS_ORDER = ["ticker", "vol_bid", "bid_min", "ask_max", "vol_ask", "anbima", "cliente_bid", "cliente_ask", "empresa",
                     "tipo", "indexador", "vencimento", "duration_anbima", "referencia_b", "incentivada"]
    
    def __init__(self, database, runs, workbook):
        self.df_db = database
        self.df_runs = runs
        self.wb = workbook
        
        self.join_info()
        self.write_sheet()
        self.wb.clean_lines()
        
    def join_info(self):
        self.df = self.df_db.join(self.df_runs, how='outer', on="ticker")
        self.df = self.df.select(pl.col(self.COLUMNS_ORDER))
        
    def write_sheet(self):
        self.wb.wb.sheets[self.SHEET_CONSOLIDADO].range(self.RANGE_PRINT_CONSOLIDADO)\
        .options(index=False, header=False).value = self.df.to_pandas()
class Run_final():
    
    def __init__(self, df_extra):
        self.extra = df_extra
        self.consolidate_dfs()
        
    def consolidate_dfs(self):
        pass
    
    def create_closest_anbima(self):
        pass
    
try:
    today = datetime.today()
    yesterday = busday_offset(today.strftime("%Y-%m-%d"), -1)
    yesterday = yesterday.item()
    
    database = Database_fixed_income()
    df_db = database.df
    
    anbima = Anbima(yesterday, df_db)
    df_db = anbima.df
    
    df_new_run = pl.DataFrame()
    wb = Workbook_info()
    if wb.exist_new_run:
        new_run = Data_new_run(wb)
        df_new_run = new_run.df
        
    wb.exist_extra = False #por hora, cagar para os extras
    if wb.exist_extra:
        extra = Data_extra(wb)
        
    runs = Runs_consolidated(df_run=df_new_run)

    final_info = Joined_info(database=df_db, runs=runs.df_runs, workbook=wb)
    
except Personal_exception as error:
client = "ARX"
a = pl.read_ipc(r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\RUNs\run_2023-06-01.feather")
a = a.filter(pl.col("cliente") != client)
a.write_ipc(r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\RUNs\run_2023-06-01.feather")
import polars as pl
import pandas as pd
import requests
import polars as pl
from xbbg import blp
class Moodys_rating():
    
    LINKS = [
        "https://www.moodyslocal.com/api/countries/BR/ratings?sector=Corporates",
        "https://www.moodyslocal.com/api/countries/BR/ratings?sector=Financial+Institutions",
        "https://www.moodyslocal.com/api/countries/BR/ratings?sector=Fixed+Income+Funds",
        "https://www.moodyslocal.com/api/countries/BR/ratings?sector=Infrastructure+Projects",
        "https://www.moodyslocal.com/api/countries/BR/ratings?sector=Insurance",
        "https://www.moodyslocal.com/api/countries/BR/ratings?sector=Structured+Finance",
        "https://www.moodyslocal.com/api/countries/BR/ratings?sector=Sub+Sovereign"
    ]
    
    def __init__(self):
        self.create_dictionary()
        self.requests_links()
        
    def create_dictionary(self):
        self.dictionary_ratings = {}
        self.dictionary_ratings["company"] = []
        self.dictionary_ratings["date"] = []
        self.dictionary_ratings["rating"] = []

    def requests_links(self):
        for link in self.LINKS:
            self.r = requests.get(link)
            self.build_dictionary()
            
    def build_dictionary(self):
        for dictionary in r.json():
            for key in self.dictionary_ratings.keys():
                self.dictionary_ratings[key].append(None)
            self.dictionary_ratings["company"][-1] = dictionary["es"]["entity"]
            self.dictionary_ratings["date"][-1] = dictionary["es"]["date"]
            if len(dictionary["es"]["instruments"]) == 1:
                self.dictionary_ratings["rating"][-1] = dictionary["es"]["instruments"][0]["ratingValue"]
            else:
                for rating in dictionary["es"]["instruments"]:
                    rating_type = rating["ratingType"]
                    if rating_type in self.dictionary_ratings:
                        self.dictionary_ratings[rating_type][-1] = rating["ratingValue"]
                    else:
                        self.dictionary_ratings[rating_type] = [None]*len(self.dictionary_ratings["company"])
                        self.dictionary_ratings[rating_type][-1] = rating["ratingValue"]
dictionary_ratings = {}
dictionary_ratings["company"] = []
dictionary_ratings["date"] = []
for dictionary in r.json():
    for key in dictionary_ratings.keys():
        dictionary_ratings[key].append(None)
    dictionary_ratings["company"][-1] = dictionary["es"]["entity"]
    dictionary_ratings["date"][-1] = dictionary["es"]["date"]
    for rating in dictionary["es"]["instruments"]:
        rating_type = rating["ratingType"]
        if rating_type in dictionary_ratings:
            dictionary_ratings[rating_type][-1] = rating["ratingValue"]
        else:
            dictionary_ratings[rating_type] = [None]*len(dictionary_ratings["company"])
            dictionary_ratings[rating_type][-1] = rating["ratingValue"]
def str_to_list(texto):
    return texto[1:-1].replace('},{"es"','},**trocar**{"es"').split("**trocar**")

def procurar(palavra,texto):
    tam=len(palavra)
    ini=texto.find(palavra)
    fim=texto[ini+tam+1:].find('"')
    return texto[ini+tam+1:ini+tam+fim+1], texto[ini+tam+fim+1:]    
    
def str_to_dict(texto):
    dicio={}
    dicio['Empresa'],texto=procurar('"entity":',texto)
    dicio['Data'],texto=procurar(',"date":',texto)
    
    ##Instrumentos - pode ter mais de 1, então separar a lista e transformar em dict talvez?
    ini=texto.find('{"ratingValue":')
    while ini>-1:
        r_nota,texto=procurar('{"ratingValue":',texto)
        if r_nota!="WR":
            r_nome,texto=procurar('"ratingType":',texto)
            dicio[r_nome]=r_nota
        ini=texto.find('{"ratingValue":')
    return dicio

def obter_ratings_m(l):
    r=requests.get(l)
    lista=str_to_list(r.text)
    df=pd.Series(str_to_dict(lista[0]))
    for t in lista[1:]:
        df=pd.concat([df,pd.Series(str_to_dict(t))],axis=1)
    df=df.T
    return df

links=["https://www.moodyslocal.com/api/countries/BR/ratings?sector=Corporates","https://www.moodyslocal.com/api/countries/BR/ratings?sector=Financial+Institutions",
     "https://www.moodyslocal.com/api/countries/BR/ratings?sector=Fixed+Income+Funds","https://www.moodyslocal.com/api/countries/BR/ratings?sector=Infrastructure+Projects",
     "https://www.moodyslocal.com/api/countries/BR/ratings?sector=Insurance","https://www.moodyslocal.com/api/countries/BR/ratings?sector=Structured+Finance",
     "https://www.moodyslocal.com/api/countries/BR/ratings?sector=Sub+Sovereign"]
    
ratings_m=obter_ratings_m(links[0])
for link in links[1:]:
    ratings_m=pd.concat([ratings_m,obter_ratings_m(link)])
    
ratings_m=ratings_m.dropna(thresh=3) #Retirar os que não possuem rating algum (possivelmente era tudo WR e eu não coloquei)
import polars as pl
from datetime import datetime
from numpy import busday_offset
import os
class Cra_db():
    
    'As of 15/may/23, up2data stopped sending security list for CRA and CRI'
    
    CRA_FIRST_PATH = r"Y:\20230428\Fixed_Income\CRA\SecurityList\Fixed_Income_FixedIncomeCRAInstrumentFile_20230427_2.json"
    CRI_FIRST_PATH = r"Y:\20230428\Fixed_Income\CRI\SecurityList\Fixed_Income_FixedIncomeCRIInstrumentFile_20230427_2.json"
    DATABASE_PATH = r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\Database renda fixa"
    CRA_DATABASE_NAME = "db_cra.parquet"
    CRA_COLUMNS = {
        "TckrSymb": "ticker", 'XprtnDt': 'vencimento', 'CrpnNm': 'securitizadora', 'IsseUnitPric': 'pu_emitido',
        'IssdQty': 'quantidade_emitido', 'IsseTtlVal': 'total_mercado', "IntrstParamsPctg": "taxa_emitido",
        'InstrmRmnrtnTp': 'indexador', 'ISIN': 'isin', "OTCSgmtNm": "tipo", "InstrmEmssnDt": "data_emitido",
    }
    
    def __init__(self):
        pass
        #self.update_info()
        
    def get_first_info(self):
        files = os.listdir(self.DATABASE_PATH)
        if self.CRA_DATABASE_NAME in files:
            raise Exception("Já existe db de cra e cri. Deletar na mão em vez de reescrever.")
            
        cra_df = pl.read_json(self.CRA_FIRST_PATH)
        cri_df = pl.read_json(self.CRI_FIRST_PATH)
        self.df = pl.concat([cra_df, cri_df])
       
        self.format_df()
        
        self.df.write_parquet(self.DATABASE_PATH + "\\" + self.CRA_DATABASE_NAME)
        
    def format_df(self):
        self.df = self.df.rename(self.CRA_COLUMNS).select(pl.col(self.CRA_COLUMNS.values()))
        for column in ["taxa_emitido", "pu_emitido", "quantidade_emitido", "total_mercado"]:
            self.df = self.df.with_columns(
                pl.when(pl.col(column) == "")
                .then(None)
                .otherwise(pl.col(column))
                .cast(pl.Float32)
                .keep_name()
            )

        self.df = self.df.with_columns(
            pl.col("taxa_emitido")/100,
            pl.col(["vencimento", "data_emitido"]).str.strptime(pl.Date, "%Y-%m-%d"),
            (pl.col("quantidade_emitido")*pl.col("pu_emitido")).alias("reais_emitido"),
            pl.lit(None).alias("empresa")
        )
        
        self.df = self.df.with_columns(
            pl.when((pl.col("indexador") == "DI") & (pl.col("taxa_emitido") != 0))
            .then(
                pl.when(pl.col("taxa_emitido") < 0.2)
                .then("DI +")
                .otherwise(
                    pl.when(pl.col("taxa_emitido") > 0.9)
                    .then("% DI")
                    .otherwise(pl.col("indexador"))
                )
            )
            .otherwise(pl.col("indexador"))
            .keep_name(),
            
            pl.when(pl.col(pl.Date).dt.year() > 2150)
            .then(None)
            .otherwise(pl.col(pl.Date))
            .keep_name()
        )

    def write_cra(self):
        pass
        #Só escrever se eu conseguir criar algum update para os cris e cras
class Debenture_db():
    
    DEBENTURE_FIRST_PATH = (r"Y:\20230428\Debentures_MTM\SecurityList\Debentures"
                                + "_MTM_SecurityListDebentureFileV2_20230428_13.json")
    DATABASE_PATH = r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\Database renda fixa"
    DEB_DATABASE_NAME = "db_deb.parquet"
    
    DEBENTURE_COLUMNS = {
        "TckrSymb": "ticker", 'XprtnDt': 'vencimento', 'FxdIntrstRate': 'taxa_emitido', 'IndxShrtNm': 'indexador',
        'CrpnNm': 'empresa', "IsseUnitPric": 'pu_emitido', 'IssdQty': 'quantidade_emitido', 
        'MktQty': 'quantidade_mercado_emitido', 'Law12431SpprtInd': 'incentivada', "Clss": "conversivel",
        'ISIN': 'isin', "IntrstAcctgIntrvlUnit": "unidade", "InstrmDdlnClclsRef": "critério", 
        "IntrstSprdDesc":"metodo_taxa", "IntrstBizDaysClclsRef": "252/360", "IsseDt": "data_emitido",
        "Law12431Artl": "artigo"
    }
    
    def __init__(self, date):
        self.date = date
        self.largest_file()
        self.format_df()
        self.update_database()
        
    def get_first_info(self):
        self.df = pl.read_json(self.DEBENTURE_FIRST_PATH)
        files = os.listdir(self.DATABASE_PATH)
        if self.DEB_DATABASE_NAME in files:
            raise Exception("Já existe db de debentures. Deletar na mão em vez de reescrever.")
        
        self.format_df()
        
        self.df.write_parquet(self.DATABASE_PATH + "\\" + self.DEB_DATABASE_NAME)
        
    def largest_file(self):
        files =  os.scandir("Y:\\" + self.date.strftime("%Y%m%d") + r"\Debentures_MTM\SecurityList")
        paths = []
        sizes = []
        for file in files:
            paths.append(file.path)
            sizes.append(file.stat().st_size)
        df = pl.DataFrame({"paths": paths, "sizes": sizes})
        json_file = df.filter(pl.col("paths").str.contains(".json")).sort(by="sizes", descending = True)[0, 0]
        self.df = pl.read_json(json_file)
        
    def format_df(self):
        self.df = self.df.rename(self.DEBENTURE_COLUMNS).select(self.DEBENTURE_COLUMNS.values())
        for column in ["taxa_emitido", "pu_emitido", "quantidade_emitido", "quantidade_mercado_emitido"]:
            self.df = self.df.with_columns(
                pl.when(pl.col(column) == "")
                .then(None)
                .otherwise(pl.col(column))
                .cast(pl.Float32)
                .keep_name()
            )

        self.df = self.df.with_columns(
            pl.col("taxa_emitido")/100,
            pl.col(["vencimento", "data_emitido"]).str.strptime(pl.Date, "%Y-%m-%d"),
            pl.when(pl.col("artigo") == "")
            .then(None)
            .otherwise(pl.col("artigo"))
            .cast(pl.Int16)
            .keep_name(),
            
            pl.when(pl.col("incentivada") == "true")
            .then(True)
            .otherwise(False)
            .keep_name(),
            
            (pl.col("quantidade_emitido")*pl.col("pu_emitido")).alias("reais_emitido"),
            (pl.col("quantidade_mercado_emitido")*pl.col("pu_emitido")).alias("reais_mercado_emitido"),
            pl.lit("DEB").alias("tipo")
        )
        
        self.df = self.df.with_columns(
            pl.when((pl.col("indexador") == "DI") & (pl.col("taxa_emitido") != 0))
            .then(
                pl.when(pl.col("taxa_emitido") < 0.2)
                .then("DI +")
                .otherwise(
                    pl.when(pl.col("taxa_emitido") > 0.9)
                    .then("% DI")
                    .otherwise(pl.col("indexador"))
                )
            )
            .otherwise(pl.col("indexador"))
            .keep_name(),
            
            pl.when(pl.col(pl.Date).dt.year() > 2150)
            .then(None)
            .otherwise(pl.col(pl.Date))
            .keep_name()
        )
        
    def update_database(self):
        self.db = pl.read_parquet(self.DATABASE_PATH + "\\" + self.DEB_DATABASE_NAME)
        self.db = pl.concat([self.db, self.df]).unique()
        self.db.write_parquet(self.DATABASE_PATH + "\\" + self.DEB_DATABASE_NAME)
class Debenture_trade():

    TRADE_COLUMNS = {"TckrSymb": "ticker", "MinPric": "price_min", "MaxPric": "price_max", "TradAvrgPric": "price_avg",
                "TradQty": "trades_number", "FinInstrmQty": "trades_quantity", "NtlFinVol": "financial_volume",
                "OprnClssfctnTpNm": "passagem", "EvtAndSttlmGap": "liquidation"}
    
    WRITE_PATH = r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\Trades debentures"
    
    def __init__(self, date):
        self.date = date
        self.largest_file()
        self.format_df()
        self.write_df()
    
    def largest_file(self):
        files =  os.scandir("Y:\\" + self.date.strftime("%Y%m%d") + r"\Debentures_MTM\TradeInformation")
        paths = []
        sizes = []
        for file in files:
            paths.append(file.path)
            sizes.append(file.stat().st_size)
        df = pl.DataFrame({"paths": paths, "sizes": sizes})
        json_file = df.filter(pl.col("paths").str.contains(".json")).sort(by="sizes", descending = True)[0, 0]
        self.df = pl.read_json(json_file)
        
    def format_df(self):
        self.df = self.df.rename(self.TRADE_COLUMNS).select(self.TRADE_COLUMNS.values())
        for column in ["price_min", "price_max", "price_avg", "financial_volume", "trades_number", "trades_quantity"]:
            self.df = self.df.with_columns(
                pl.when(pl.col(column) == "")
                .then(None)
                .otherwise(pl.col(column))
                .keep_name()
            )
        self.df = self.df.with_columns(
            pl.col(["price_min", "price_max", "price_avg", "financial_volume"]).cast(pl.Float32),
            pl.col(["trades_number", "trades_quantity"]).cast(pl.Int32)
        )
        
    def write_df(self):
        self.df.write_ipc(self.WRITE_PATH + "\\" + "trades_deb_" + self.date.strftime("%Y-%m-%d") + ".feather")
if __name__ == "__main__":
    DAYS_CHECK = 7
    today = datetime.today()
    for days_subtract in range(1, DAYS_CHECK):
        date = busday_offset(datetime.today().strftime("%Y-%m-%d"), (-1)*days_subtract)
        date = date.item()
        date_string = date.strftime("%Y%m%d")
        print(date_string)
        if exist_up2data_day(date_string):
            print("1")
            if not day_already_copied(date):
                print("2")
                Debenture_trade(date)
                Debenture_db(date)
class Df_operations():
    
    WB_NAME = "RUN Crédito Privado.xlsm"
    SHEET_NAME = "Add RUN"
    INFO_LAST_LINE = "B4"
    RANGE_DRAFT = "I5:V"
    RANGE_FORMATTED = "C6:G2000"
    CELL_PRINT = RANGE_FORMATTED[:2]
    COLUMNS_NAME = ["ticker", "vol bid", "bid", "ask", "vol ask"]
    
    def __init__(self):
        pass

    def obtain_df(self):
        self.wb = xw.Book(self.WB_NAME)
        self.sheet = self.wb.sheets[self.SHEET_NAME]
        last_line = self.sheet.range(self.INFO_LAST_LINE).value
        
        my_date_handler = lambda year, month, day, **kwargs: f"{month:02d}/{year-2000:02d}"
        run_values = self.sheet.range(self.RANGE_DRAFT + str(int(last_line))).options(dates=my_date_handler).value
        
        self.df = pl.DataFrame(run_values[1:], orient = "row")
        self.columns_rename = run_values[0]
        
    def rename_columns(self):
        dict_rename_columns = {}
        old_columns_names = self.df.columns
        new_columns = []
        
        for index in range(0, len(self.columns_rename)):
            if self.columns_rename[index] is not None:
                new_columns.append(self.columns_rename[index])
                dict_rename_columns[old_columns_names[index]] = self.columns_rename[index]
                
        if ("ticker" not in new_columns):
            raise Personal_exception("Não há coluna 'ticker'")
        
        if ("ask" not in new_columns) and ("bid" not in new_columns):
            raise Personal_exception("Não há coluna 'bid' nem 'ask'")
                
        self.df = self.df.rename(dict_rename_columns)
        
        for name in self.COLUMNS_NAME:
            if name not in new_columns:
                self.df = self.df.with_columns(pl.lit(None).alias(name))

        if "vol bid/ask" in new_columns:
            self.df = self.df.with_columns(
                pl.col("vol bid/ask").alias("vol bid"),
                pl.col("vol bid/ask").alias("vol ask")
            )        
           
        exist_vencimento = "venc" in self.columns_rename
        if exist_vencimento:
            self.df = self.df.select(self.COLUMNS_NAME + ["venc"])
            self.include_maturity_lf()
        else:
            self.df = self.df.select(self.COLUMNS_NAME)

        self.str_columns = self.df.select(pl.col(pl.Utf8)).columns
        
    def str_columns_adjust(self):
        self.df = self.df.with_columns(
            pl.col(self.str_columns)
            .str.strip()
            .str.to_uppercase()
            .str.replace(",", ".")
        ).with_columns(
            pl.when(pl.col("ticker") == "")
            .then(None)
            .otherwise(pl.col("ticker"))
            .keep_name()
        )
        
    def include_maturity_lf(self):
        '''As of may/23, there was no debenture starting with "LF"'''

        self.df = self.df.with_columns(
            pl.when(pl.col("ticker").str.contains("^LF"))
            .then(pl.col("ticker") + " - " + pl.col("venc"))
            .otherwise(pl.col("ticker"))
            .alias("ticker")
        ).select(pl.exclude("venc"))
    
    def rows_to_exclude(self):
        self.test = self.df
        self.df = (self.df
                   .filter(
                       pl.any(pl.col(["bid", "ask"]).is_null().is_not())
                       &
                       pl.col("ticker").is_null().is_not()
                   )
                   .with_columns(
                       pl.col(["vol bid", "bid", "ask", "vol ask"]).fill_null(0)
                   )
                  )
        self.df = self.df.filter(
                        (pl.col("ticker")
                         .str.contains("ATIVO|TICKER|DEB[ÊE]NTURE|---|INFRA|SPREAD OVER|COMPRO|CPN|CRA$|CRI$").is_not()
                        )
                        &
                        (pl.all(
                            ~pl.col(["bid", "ask"])
                            .str.contains("[bB][iI][dD]|[aA][sS][kK]|VALUE|VALOR|##|IPCA|CDI|COMPRA|VENDA|INDIC 1MM"))
                        )
        )
        exist_duplicates = not (self.df.filter(pl.col("ticker").is_duplicated()).is_empty())
        if exist_duplicates:
            tickers_duplicateds = self.df.select(pl.col("ticker")).filter(pl.col("ticker").is_duplicated()).unique()
            
            raise Personal_exception(f"Há tickers duplicados:\n{tickers_duplicateds}")
    
    def bid_ask_adjust(self):
        for column_name in ["bid", "ask"]:
            if column_name in self.str_columns:
                self.df = self.df.with_columns(
                    pl.col(column_name)
                    .str.replace("%$|v$", "")
                    .str.strip()                                       
                ).with_columns(
                    pl.when(pl.col(column_name).is_in(["-", ""]))
                    .then(None)
                    .otherwise(pl.col(column_name))
                    .cast(pl.Float64)
                    .keep_name()
                )
            else:
                self.df = self.df.with_columns(pl.col(column_name).cast(pl.Float64))
            
        self.df = self.df.filter(
            (pl.col("bid") > 0)
            | (pl.col("ask") > 0)
        )
        #Minimum value is considered at the moment 180% CDI. Lower values might confuse with cdi + 1.5%
        minimum_value_to_divide = 1.8
        divide_by_100 = not self.df.filter(pl.any(pl.col(["bid", "ask"]) > minimum_value_to_divide)).is_empty()
        
        if divide_by_100:
            #Maximum value is considered at the moment as IPCA + 10%, higher values might confuse with cdi + 0.5%
            maximum_value_to_not_divide = 0.1
            not_divide_by_100 = not self.df.filter(
                                    ((pl.col("bid") > 0) & (pl.col("bid") < maximum_value_to_not_divide))
                                    |
                                    ((pl.col("ask") > 0) & (pl.col("ask") < maximum_value_to_not_divide))
                                    ).is_empty()
            if not_divide_by_100:
                message = "Alguns valores em bid/ask estão em % e outros não"
                raise Personal_exception(message)
            else:
                self.df = self.df.with_columns(pl.col(["bid", "ask"])/100)
        
        ask_higher_bid_df = (self.df
                             .filter(
                                 (pl.col("ask") >= pl.col("bid"))
                                 &
                                 (pl.col("bid") != 0)
                             )
                            )
        ask_higher_bid = not ask_higher_bid_df.is_empty()
                                 
        if ask_higher_bid:
            raise Personal_exception(f"Existe ask maior ou igual a bid\n\n{ask_higher_bid_df}")
            
    def volume_adjust(self):
        self.df_old = self.df
        for column_name in ["vol bid", "vol ask"]:
            if column_name in self.str_columns:
                self.df = self.df.with_columns(
                            pl.when(pl.col(column_name) == "")
                            .then(None)
                            .otherwise(pl.col(column_name))
                            .alias(column_name)
                        )
                
                self.df = self.df.with_columns(
                                    pl.col(column_name)
                                    .str.replace("[mM][lL][nN]|[mM][mM]$|[mM]|[kK]$", "")
                                    .str.replace("^~|^>", "")
                                    .str.strip()
                                    .cast(pl.Float32)
                                    /
                                    pl.when(pl.col("vol ask").str.contains("[kK]$"))
                                    .then(1000)
                                    .otherwise(1)
                                )
            
            
        #Minimum value is considered at the moment 100mm. Lower values might confuse with high volume
        minimum_value_to_divide = 100
        divide_by_1000 = not self.df.filter(pl.any(pl.col(["vol bid", "vol ask"]) > minimum_value_to_divide)).is_empty()
        
        minimum_value_to_divide = 1e5
        divide_by_million = not self.df.filter(pl.any(pl.col(["vol bid", "vol ask"]) > minimum_value_to_divide)).is_empty()
        
        if divide_by_million:
            #Maximum value is considered at the moment as 0.1mm. Higher values might confuse with 100k
            maximum_value_to_not_divide = 1e2
            not_divide_by_million = not self.df.filter(
                                    ((pl.col("vol bid") > 0) & (pl.col("vol bid") < maximum_value_to_not_divide))
                                    |
                                    ((pl.col("vol ask") > 0) & (pl.col("vol ask") < maximum_value_to_not_divide))
                                    ).is_empty()
            if not_divide_by_million:
                message = "Alguns valores em vol bid/vol ask estão em K e outros em MM"
                raise Personal_exception(message)
            else:
                self.df = self.df.with_columns(pl.col(["vol bid", "vol ask"])/1e6)
                
        elif divide_by_1000:
            #Maximum value is considered at the moment as 0.1mm. Higher values might confuse with 100k
            maximum_value_to_not_divide = 0.1
            not_divide_by_1000 = not self.df.filter(
                                    ((pl.col("vol bid") > 0) & (pl.col("vol bid") < maximum_value_to_not_divide))
                                    |
                                    ((pl.col("vol ask") > 0) & (pl.col("vol ask") < maximum_value_to_not_divide))
                                    ).is_empty()
            if not_divide_by_1000:
                message = "Alguns valores em vol bid/vol ask estão em K e outros em MM"
                raise Personal_exception(message)
            else:
                self.df = self.df.with_columns(pl.col(["vol bid", "vol ask"])/1000)
    
    def print_to_excel(self):
        self.sheet.range(self.RANGE_FORMATTED).value = ""
        self.sheet.range(self.CELL_PRINT).options(index=False, header=False).value = self.df.to_pandas()
try:
    run = Df_operations()
    run.obtain_df()
    run.rename_columns()
    run.str_columns_adjust()
    run.rows_to_exclude()
    run.bid_ask_adjust()
    run.volume_adjust()
    run.print_to_excel()

except Personal_exception as error:
    error_global = error
    print(error)
class Database_fixed_income():
    
    DEB_PATH = r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\Database renda fixa\db_deb.parquet"
    CRA_PATH = r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\Database renda fixa\db_cra.parquet"
    COLUMNS = ["ticker", "vencimento", "taxa_emitido", "indexador", "empresa", "pu_emitido",
               "isin", "data_emitido", "reais_emitido", "tipo", "incentivada", "artigo"]
    
    def __init__(self):
        self.get_deb_database()
        self.get_cra_database()
        self.concat_databases()
    
    def get_deb_database(self):
        self.df_deb = pl.read_parquet(self.DEB_PATH).select(pl.col(self.COLUMNS))

    def get_cra_database(self):
        self.df_cra = pl.read_parquet(self.CRA_PATH)
        
        self.df_cra = self.df_cra.with_columns(
            pl.lit(True).alias("incentivada"),
            pl.lit(None).cast(pl.Int16).alias("artigo")
        )

        self.df_cra = self.df_cra.select(pl.col(self.COLUMNS))
        
    def concat_databases(self):

        self.df = pl.concat([self.df_deb, self.df_cra])
class Anbima():
    
    PATH_ANBIMA_DEB = r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\Anbima\Debêntures\anbima_deb_"
    PATH_ANBIMA_CRA = r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\Anbima\Cra\anbima_cra_"
    PATH_ANBIMA_TIT = r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\Anbima\Títulos públicos\anbima_tit_"
    COLUMNS_CRA = ["ticker", "anbima", "referencia_b", "duration_anbima"]
    
    def __init__(self, yesterday, df):
        self.yesterday = yesterday
        self.yesterday_string = yesterday.strftime("%Y-%m-%d")
        self.df = df
        self.get_anbima_deb()
        self.get_anbima_cra()
        self.get_anbima_tit()
        
    def get_anbima_deb(self):
        while True:
            try:
                deb = pl.read_ipc(self.PATH_ANBIMA_DEB + self.yesterday_string + ".feather")
                break
            except FileNotFoundError:
                self.check_last_anbima()
        self.deb = deb
        self.df = self.df.join(deb, how="left", on="ticker")
        
    def check_last_anbima(self):
        import requests
        URL = 'https://www.anbima.com.br/informacoes/merc-sec-debentures/arqs/db'
        r = requests.get(URL + self.yesterday.strftime("%y%m%d") + ".txt")
        file_found = (r.status_code == 200)
        if file_found:
            raise Personal_exception(f"Último arquivo da anbima {self.yesterday_string} não baixado.")
        else:
            self.yesterday = busday_offset(self.yesterday_string, -1)
            self.yesterday = self.yesterday.item()
            self.yesterday_string = self.yesterday.strftime("%Y-%m-%d")
    
    def get_anbima_cra(self):
        cra = pl.read_ipc(self.PATH_ANBIMA_CRA + self.yesterday_string + ".feather")
        cra = cra.select(pl.col(self.COLUMNS_CRA))
        self.cra = cra
        self.df = self.df.join(cra, how="left", on="ticker", suffix="_right")
        
        for column in ["anbima", "referencia_b", "duration_anbima"]:
            self.df = self.df.with_columns(
                pl.when((pl.col(column).is_null()) & (~pl.col(column + "_right").is_null()))
                .then(pl.col(column + "_right"))
                .otherwise(pl.col(column))
                .alias(column)
            ).drop(column + "_right")
        
    def get_anbima_tit(self):
        tit = pl.read_ipc(self.PATH_ANBIMA_TIT + self.yesterday_string + ".feather")
        tit = tit.with_columns(
            ("TIT: " + pl.col("ticker") + " " + pl.col("vencimento").dt.strftime("%y")).alias("ticker")
        )
        self.tit = tit
        
        columns = []
        for column in self.df.columns:
            if column not in self.tit.columns:
                columns.append(column)
                self.tit = self.tit.with_columns(pl.lit(None).alias(column))

        self.tit = self.tit.select(pl.col(self.df.columns))
        self.tit = self.tit.with_columns(
            pl.col(["pu_emitido", "taxa_emitido", "reais_emitido", "duration_anbima"])
            .cast(pl.Float32),
            pl.col("data_emitido").cast(pl.Date),
            pl.lit("Título público").alias("tipo"),
            pl.col(["indexador", "isin", "empresa", "referencia_b"]).cast(pl.Utf8),
            pl.col("incentivada").cast(pl.Boolean),
            pl.col("artigo").cast(pl.Int16)
        )
        self.df = pl.concat([self.tit, self.df])
class Workbook_info():
    
    WB_NAME = "RUN Crédito Privado.xlsm"
    SHEET_NEW_RUN = "Add RUN"
    SHEET_EXTRA = "RUN"
    RANGE_MAX_LINE = "B2:B3"
    RANGE_NEW_RUN = "C6:G"
    RANGE_EXTRA = "A18:F"
    LAST_LINE_DELETE = "2000"
    CLIENT_CELL = "C4"
    RANGE_NEW_RUN_DELETE = RANGE_NEW_RUN + LAST_LINE_DELETE
    RANGE_FORMATTED = "H4:L" + LAST_LINE_DELETE
    RANGE_DRAFT = "I5:V" + LAST_LINE_DELETE
    
    def __init__(self):
        self.obtain_sheets()
        self.obtain_new_run()
        self.obtain_extras()        
        
    def obtain_sheets(self):
        self.wb = xw.Book(self.WB_NAME)
        self.sheet_new_run = self.wb.sheets[self.SHEET_NEW_RUN]
        self.sheet_extra = self.wb.sheets[self.SHEET_EXTRA]
        self.lines = self.sheet_new_run.range(self.RANGE_MAX_LINE).value
        
    def obtain_new_run(self):
        max_line_new_run = str(int(self.lines[1]))
        self.exist_new_run = self.lines[1] > 5
        if self.exist_new_run:
            self.new_run = self.sheet_new_run.range(self.RANGE_NEW_RUN + max_line_new_run).value
            self.client = self.sheet_new_run.range(self.CLIENT_CELL).value
            if self.client is None:
                raise Personal_exception("Cliente está vazio")
            else:
                self.client = self.client.upper()
        
    def obtain_extras(self):
        line_extra = str(int(self.lines[0]))
        self.exist_extra = self.lines[0] > 17
        if self.exist_extra:
            self.extra_values = self.sheet_extra.range(self.RANGE_EXTRA + line_extra).value
        
    def clean_lines(self):
        cells_to_delete = [self.CLIENT_CELL, self.RANGE_NEW_RUN_DELETE, self.RANGE_DRAFT]
        cells_to_delete = ", ".join(cells_to_delete)
        self.sheet_new_run.range(cells_to_delete).value = ""
class Data_new_run():
    
    NEW_COLUMNS_NAMES = ["ticker", "vol bid", "bid", "ask", "vol ask", "cliente"]
    FLOAT_COLUMNS_DEFAULT = NEW_COLUMNS_NAMES[1:-1]
    STR_COLUMNS_DEFAULT = [NEW_COLUMNS_NAMES[0], NEW_COLUMNS_NAMES[-1]]
    
    def __init__(self, wb):
        self.wb = wb
        self.obtain_df()
        self.rename_columns()
        self.check_duplicates()
        self.check_columns_types()
        
    def obtain_df(self):
        empty_client = (self.wb.new_run[0][0] == None)
        df = pl.DataFrame(self.wb.new_run, orient = "row")
        self.df = df.with_columns(pl.lit(self.wb.client).alias("cliente"))
    
    def rename_columns(self):
        dict_rename_columns = {}
        old_columns_names = self.df.columns

        for index in range(0, 6):
            dict_rename_columns[old_columns_names[index]] = self.NEW_COLUMNS_NAMES[index]

        self.df = self.df.rename(dict_rename_columns).with_columns(pl.col(pl.Boolean).cast(pl.Float64))

    def check_duplicates(self):
        exist_duplicates = not (self.df.filter(pl.col("ticker").is_duplicated()).is_empty())
        if exist_duplicates:
            tickers_duplicateds = self.df.select(pl.col("ticker")).filter(pl.col("ticker").is_duplicated()).unique()
            raise Personal_exception(f"Há tickers duplicados:\n{tickers_duplicateds}")
        
    def check_columns_types(self):
        str_columns = self.df.select(pl.col(pl.Utf8)).columns
        wrong_columns = []
        for column in str_columns:
            if column not in self.STR_COLUMNS_DEFAULT:
                wrong_columns.append(column)
        exist_wrong_column = len(wrong_columns) > 0
        if exist_wrong_column:
            error_msg = "A(s) col(s): " + ", ".join(wrong_columns)\
                        + " está(ão) como número, talvez haja uma celula errada nela(s)"
            raise Personal_exception(error_msg)
class Runs_consolidated():
    
    TODAY_STRING = datetime.today().strftime("%Y-%m-%d")
    PATH_FEATHER = r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\RUNs\run_" + TODAY_STRING + ".feather"
    
    def __init__(self, df_run):
        self.df_run = df_run
        
        self.read_file()
        self.concatenate_files()
        if not self.df_runs.is_empty():
            self.duplicated_rows()
            self.write_concat_file()
            self.consolidate_files()
        
    def read_file(self):
        self.exist_previous_run = True
        try:
            self.df_runs = pl.read_ipc(self.PATH_FEATHER)
        except FileNotFoundError:
            self.exist_previous_run = False
            
    def concatenate_files(self):
        if self.df_run.is_empty():
            if not self.exist_previous_run:
                self.df_runs = pl.DataFrame()
        else:
            if self.exist_previous_run:
                self.df_runs = pl.concat([self.df_runs, self.df_run])
            else:
                self.df_runs = self.df_run
            
    def duplicated_rows(self):
        duplicated = self.df_runs.filter(pl.lit(self.df_runs.is_duplicated())).unique(subset="ticker")
        if not duplicated.is_empty():
            error_msg = (f"Linhas abaixo já existentes no consolidado atual:\n\n{duplicated}")
            raise Personal_exception(error_msg)
            
    def write_concat_file(self):
        self.df_runs = self.df_runs.sort(by=["ticker", "cliente"])
        self.df_runs.write_ipc(self.PATH_FEATHER)
        
    def consolidate_files(self):
        self.df_runs = (self.df_runs.with_columns(
            pl.col("bid").filter(pl.col("bid") > 0).min().over("ticker").alias("bid_min").fill_null(0),
            pl.col("ask").max().over("ticker").alias("ask_max")
            )
         .lazy()
         .groupby("ticker")
         .agg(
             pl.col("vol bid").filter((pl.col("bid_min") == pl.col("bid")) & (pl.col("bid") > 0)).sum().alias("vol_bid"),
             pl.col("bid_min").first(),
             pl.col("ask_max").first(),
             pl.col("vol ask").filter((pl.col("ask_max") == pl.col("ask")) & (pl.col("ask") > 0)).sum().alias("vol_ask"),
             pl.col("cliente").filter((pl.col("bid_min") == pl.col("bid")) & (pl.col("bid") > 0)).alias("cliente_bid"),
             pl.col("cliente").filter((pl.col("ask_max") == pl.col("ask")) & (pl.col("ask") > 0)).alias("cliente_ask")
         )
        ).collect().with_columns(
            pl.col("cliente_bid").arr.join(", "),
            pl.col("cliente_ask").arr.join(", "),
        ).sort("ticker")
        class Data_extra():
    
    def __init__(self, wb):
        self.wb = wb
        
        self.obtain_extras()
        pass
        
    def obtain_extras(self):
        self.extras = pl.DataFrame(self.wb.extra_values, orient = "row")
        
    def kill_orders(self):
        self.extras.filter(pl.col("bid").str.contains("[mM]"))
        pass
    
    def convert_interested_tickers(self):
        pass
class Joined_info():
    
    SHEET_CONSOLIDADO = "Consolidado"
    RANGE_PRINT_CONSOLIDADO = "A3"
    COLUMNS_ORDER = ["ticker", "vol_bid", "bid_min", "ask_max", "vol_ask", "anbima", "cliente_bid", "cliente_ask", "empresa",
                     "tipo", "indexador", "vencimento", "duration_anbima", "referencia_b", "incentivada"]
    
    def __init__(self, database, runs, workbook):
        self.df_db = database
        self.df_runs = runs
        self.wb = workbook
        
        self.join_info()
        self.write_sheet()
        self.wb.clean_lines()
        
    def join_info(self):
        self.df = self.df_db.join(self.df_runs, how='outer', on="ticker")
        self.df = self.df.select(pl.col(self.COLUMNS_ORDER))
        
    def write_sheet(self):
        self.wb.wb.sheets[self.SHEET_CONSOLIDADO].range(self.RANGE_PRINT_CONSOLIDADO)\
        .options(index=False, header=False).value = self.df.to_pandas()
class Run_final():
    
    def __init__(self, df_extra):
        self.extra = df_extra
        self.consolidate_dfs()
        
    def consolidate_dfs(self):
        pass
    
    def create_closest_anbima(self):
        pass
    
try:
    today = datetime.today()
    yesterday = busday_offset(today.strftime("%Y-%m-%d"), -1)
    yesterday = yesterday.item()
    
    database = Database_fixed_income()
    df_db = database.df
    
    anbima = Anbima(yesterday, df_db)
    df_db = anbima.df
    
    df_new_run = pl.DataFrame()
    wb = Workbook_info()
    if wb.exist_new_run:
        new_run = Data_new_run(wb)
        df_new_run = new_run.df
        
    wb.exist_extra = False #por hora, cagar para os extras
    if wb.exist_extra:
        extra = Data_extra(wb)
        
    runs = Runs_consolidated(df_run=df_new_run)

    final_info = Joined_info(database=df_db, runs=runs.df_runs, workbook=wb)
    
except Personal_exception as error:
    error_global = error
client = "ARX"
a = pl.read_ipc(r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\RUNs\run_2023-06-01.feather")
a = a.filter(pl.col("cliente") != client)
a.write_ipc(r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\RUNs\run_2023-06-01.feather")
import polars as pl
import pandas as pd
import requests
import polars as pl
from xbbg import blp
class Moodys_rating():
    
    LINKS = [
        "https://www.moodyslocal.com/api/countries/BR/ratings?sector=Corporates",
        "https://www.moodyslocal.com/api/countries/BR/ratings?sector=Financial+Institutions",
        "https://www.moodyslocal.com/api/countries/BR/ratings?sector=Fixed+Income+Funds",
        "https://www.moodyslocal.com/api/countries/BR/ratings?sector=Infrastructure+Projects",
        "https://www.moodyslocal.com/api/countries/BR/ratings?sector=Insurance",
        "https://www.moodyslocal.com/api/countries/BR/ratings?sector=Structured+Finance",
        "https://www.moodyslocal.com/api/countries/BR/ratings?sector=Sub+Sovereign"
    ]
    
    def __init__(self):
        self.create_dictionary()
        self.requests_links()
        
    def create_dictionary(self):
        self.dictionary_ratings = {}
        self.dictionary_ratings["company"] = []
        self.dictionary_ratings["date"] = []
        self.dictionary_ratings["rating"] = []

    def requests_links(self):
        for link in self.LINKS:
            self.r = requests.get(link)
            self.build_dictionary()
            
    def build_dictionary(self):
        for dictionary in r.json():
            for key in self.dictionary_ratings.keys():
                self.dictionary_ratings[key].append(None)
            self.dictionary_ratings["company"][-1] = dictionary["es"]["entity"]
            self.dictionary_ratings["date"][-1] = dictionary["es"]["date"]
            if len(dictionary["es"]["instruments"]) == 1:
                self.dictionary_ratings["rating"][-1] = dictionary["es"]["instruments"][0]["ratingValue"]
            else:
                for rating in dictionary["es"]["instruments"]:
                    rating_type = rating["ratingType"]
                    if rating_type in self.dictionary_ratings:
                        self.dictionary_ratings[rating_type][-1] = rating["ratingValue"]
                    else:
                        self.dictionary_ratings[rating_type] = [None]*len(self.dictionary_ratings["company"])
                        self.dictionary_ratings[rating_type][-1] = rating["ratingValue"]
dictionary_ratings = {}
dictionary_ratings["company"] = []
dictionary_ratings["date"] = []
for dictionary in r.json():
    for key in dictionary_ratings.keys():
        dictionary_ratings[key].append(None)
    dictionary_ratings["company"][-1] = dictionary["es"]["entity"]
    dictionary_ratings["date"][-1] = dictionary["es"]["date"]
    for rating in dictionary["es"]["instruments"]:
        rating_type = rating["ratingType"]
        if rating_type in dictionary_ratings:
            dictionary_ratings[rating_type][-1] = rating["ratingValue"]
        else:
            dictionary_ratings[rating_type] = [None]*len(dictionary_ratings["company"])
            dictionary_ratings[rating_type][-1] = rating["ratingValue"]
def str_to_list(texto):
    return texto[1:-1].replace('},{"es"','},**trocar**{"es"').split("**trocar**")

def procurar(palavra,texto):
    tam=len(palavra)
    ini=texto.find(palavra)
    fim=texto[ini+tam+1:].find('"')
    return texto[ini+tam+1:ini+tam+fim+1], texto[ini+tam+fim+1:]    
    
def str_to_dict(texto):
    dicio={}
    dicio['Empresa'],texto=procurar('"entity":',texto)
    dicio['Data'],texto=procurar(',"date":',texto)
    
    ##Instrumentos - pode ter mais de 1, então separar a lista e transformar em dict talvez?
    ini=texto.find('{"ratingValue":')
    while ini>-1:
        r_nota,texto=procurar('{"ratingValue":',texto)
        if r_nota!="WR":
            r_nome,texto=procurar('"ratingType":',texto)
            dicio[r_nome]=r_nota
        ini=texto.find('{"ratingValue":')
    return dicio

def obter_ratings_m(l):
    r=requests.get(l)
    lista=str_to_list(r.text)
    df=pd.Series(str_to_dict(lista[0]))
    for t in lista[1:]:
        df=pd.concat([df,pd.Series(str_to_dict(t))],axis=1)
    df=df.T
    return df

links=["https://www.moodyslocal.com/api/countries/BR/ratings?sector=Corporates","https://www.moodyslocal.com/api/countries/BR/ratings?sector=Financial+Institutions",
     "https://www.moodyslocal.com/api/countries/BR/ratings?sector=Fixed+Income+Funds","https://www.moodyslocal.com/api/countries/BR/ratings?sector=Infrastructure+Projects",
     "https://www.moodyslocal.com/api/countries/BR/ratings?sector=Insurance","https://www.moodyslocal.com/api/countries/BR/ratings?sector=Structured+Finance",
     "https://www.moodyslocal.com/api/countries/BR/ratings?sector=Sub+Sovereign"]
    
ratings_m=obter_ratings_m(links[0])
for link in links[1:]:
    ratings_m=pd.concat([ratings_m,obter_ratings_m(link)])
    
ratings_m=ratings_m.dropna(thresh=3) #Retirar os que não possuem rating algum (possivelmente era tudo WR e eu não coloquei)
import polars as pl
from datetime import datetime
from numpy import busday_offset
import os
class Cra_db():
    
    'As of 15/may/23, up2data stopped sending security list for CRA and CRI'
    
    CRA_FIRST_PATH = r"Y:\20230428\Fixed_Income\CRA\SecurityList\Fixed_Income_FixedIncomeCRAInstrumentFile_20230427_2.json"
    CRI_FIRST_PATH = r"Y:\20230428\Fixed_Income\CRI\SecurityList\Fixed_Income_FixedIncomeCRIInstrumentFile_20230427_2.json"
    DATABASE_PATH = r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\Database renda fixa"
    CRA_DATABASE_NAME = "db_cra.parquet"
    CRA_COLUMNS = {
        "TckrSymb": "ticker", 'XprtnDt': 'vencimento', 'CrpnNm': 'securitizadora', 'IsseUnitPric': 'pu_emitido',
        'IssdQty': 'quantidade_emitido', 'IsseTtlVal': 'total_mercado', "IntrstParamsPctg": "taxa_emitido",
        'InstrmRmnrtnTp': 'indexador', 'ISIN': 'isin', "OTCSgmtNm": "tipo", "InstrmEmssnDt": "data_emitido",
    }
    
    def __init__(self):
        pass
        #self.update_info()
        
    def get_first_info(self):
        files = os.listdir(self.DATABASE_PATH)
        if self.CRA_DATABASE_NAME in files:
            raise Exception("Já existe db de cra e cri. Deletar na mão em vez de reescrever.")
            
        cra_df = pl.read_json(self.CRA_FIRST_PATH)
        cri_df = pl.read_json(self.CRI_FIRST_PATH)
        self.df = pl.concat([cra_df, cri_df])
       
        self.format_df()
        
        self.df.write_parquet(self.DATABASE_PATH + "\\" + self.CRA_DATABASE_NAME)
        
    def format_df(self):
        self.df = self.df.rename(self.CRA_COLUMNS).select(pl.col(self.CRA_COLUMNS.values()))
        for column in ["taxa_emitido", "pu_emitido", "quantidade_emitido", "total_mercado"]:
            self.df = self.df.with_columns(
                pl.when(pl.col(column) == "")
                .then(None)
                .otherwise(pl.col(column))
                .cast(pl.Float32)
                .keep_name()
            )

        self.df = self.df.with_columns(
            pl.col("taxa_emitido")/100,
            pl.col(["vencimento", "data_emitido"]).str.strptime(pl.Date, "%Y-%m-%d"),
            (pl.col("quantidade_emitido")*pl.col("pu_emitido")).alias("reais_emitido"),
            pl.lit(None).alias("empresa")
        )
        
        self.df = self.df.with_columns(
            pl.when((pl.col("indexador") == "DI") & (pl.col("taxa_emitido") != 0))
            .then(
                pl.when(pl.col("taxa_emitido") < 0.2)
                .then("DI +")
                .otherwise(
                    pl.when(pl.col("taxa_emitido") > 0.9)
                    .then("% DI")
                    .otherwise(pl.col("indexador"))
                )
            )
            .otherwise(pl.col("indexador"))
            .keep_name(),
            
            pl.when(pl.col(pl.Date).dt.year() > 2150)
            .then(None)
            .otherwise(pl.col(pl.Date))
            .keep_name()
        )

    def write_cra(self):
        pass
        #Só escrever se eu conseguir criar algum update para os cris e cras
class Debenture_db():
    
    DEBENTURE_FIRST_PATH = (r"Y:\20230428\Debentures_MTM\SecurityList\Debentures"
                                + "_MTM_SecurityListDebentureFileV2_20230428_13.json")
    DATABASE_PATH = r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\Database renda fixa"
    DEB_DATABASE_NAME = "db_deb.parquet"
    
    DEBENTURE_COLUMNS = {
        "TckrSymb": "ticker", 'XprtnDt': 'vencimento', 'FxdIntrstRate': 'taxa_emitido', 'IndxShrtNm': 'indexador',
        'CrpnNm': 'empresa', "IsseUnitPric": 'pu_emitido', 'IssdQty': 'quantidade_emitido', 
        'MktQty': 'quantidade_mercado_emitido', 'Law12431SpprtInd': 'incentivada', "Clss": "conversivel",
        'ISIN': 'isin', "IntrstAcctgIntrvlUnit": "unidade", "InstrmDdlnClclsRef": "critério", 
        "IntrstSprdDesc":"metodo_taxa", "IntrstBizDaysClclsRef": "252/360", "IsseDt": "data_emitido",
        "Law12431Artl": "artigo"
    }
    
    def __init__(self, date):
        self.date = date
        self.largest_file()
        self.format_df()
        self.update_database()
        
    def get_first_info(self):
        self.df = pl.read_json(self.DEBENTURE_FIRST_PATH)
        files = os.listdir(self.DATABASE_PATH)
        if self.DEB_DATABASE_NAME in files:
            raise Exception("Já existe db de debentures. Deletar na mão em vez de reescrever.")
        
        self.format_df()
        
        self.df.write_parquet(self.DATABASE_PATH + "\\" + self.DEB_DATABASE_NAME)
        
    def largest_file(self):
        files =  os.scandir("Y:\\" + self.date.strftime("%Y%m%d") + r"\Debentures_MTM\SecurityList")
        paths = []
        sizes = []
        for file in files:
            paths.append(file.path)
            sizes.append(file.stat().st_size)
        df = pl.DataFrame({"paths": paths, "sizes": sizes})
        json_file = df.filter(pl.col("paths").str.contains(".json")).sort(by="sizes", descending = True)[0, 0]
        self.df = pl.read_json(json_file)
        
    def format_df(self):
        self.df = self.df.rename(self.DEBENTURE_COLUMNS).select(self.DEBENTURE_COLUMNS.values())
        for column in ["taxa_emitido", "pu_emitido", "quantidade_emitido", "quantidade_mercado_emitido"]:
            self.df = self.df.with_columns(
                pl.when(pl.col(column) == "")
                .then(None)
                .otherwise(pl.col(column))
                .cast(pl.Float32)
                .keep_name()
            )

        self.df = self.df.with_columns(
            pl.col("taxa_emitido")/100,
            pl.col(["vencimento", "data_emitido"]).str.strptime(pl.Date, "%Y-%m-%d"),
            pl.when(pl.col("artigo") == "")
            .then(None)
            .otherwise(pl.col("artigo"))
            .cast(pl.Int16)
            .keep_name(),
            
            pl.when(pl.col("incentivada") == "true")
            .then(True)
            .otherwise(False)
            .keep_name(),
            
            (pl.col("quantidade_emitido")*pl.col("pu_emitido")).alias("reais_emitido"),
            (pl.col("quantidade_mercado_emitido")*pl.col("pu_emitido")).alias("reais_mercado_emitido"),
            pl.lit("DEB").alias("tipo")
        )
        
        self.df = self.df.with_columns(
            pl.when((pl.col("indexador") == "DI") & (pl.col("taxa_emitido") != 0))
            .then(
                pl.when(pl.col("taxa_emitido") < 0.2)
                .then("DI +")
                .otherwise(
                    pl.when(pl.col("taxa_emitido") > 0.9)
                    .then("% DI")
                    .otherwise(pl.col("indexador"))
                )
            )
            .otherwise(pl.col("indexador"))
            .keep_name(),
            
            pl.when(pl.col(pl.Date).dt.year() > 2150)
            .then(None)
            .otherwise(pl.col(pl.Date))
            .keep_name()
        )
        
    def update_database(self):
        self.db = pl.read_parquet(self.DATABASE_PATH + "\\" + self.DEB_DATABASE_NAME)
        self.db = pl.concat([self.db, self.df]).unique()
        self.db.write_parquet(self.DATABASE_PATH + "\\" + self.DEB_DATABASE_NAME)
class Debenture_trade():

    TRADE_COLUMNS = {"TckrSymb": "ticker", "MinPric": "price_min", "MaxPric": "price_max", "TradAvrgPric": "price_avg",
                "TradQty": "trades_number", "FinInstrmQty": "trades_quantity", "NtlFinVol": "financial_volume",
                "OprnClssfctnTpNm": "passagem", "EvtAndSttlmGap": "liquidation"}
    
    WRITE_PATH = r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\Trades debentures"
    
    def __init__(self, date):
        self.date = date
        self.largest_file()
        self.format_df()
        self.write_df()
    
    def largest_file(self):
        files =  os.scandir("Y:\\" + self.date.strftime("%Y%m%d") + r"\Debentures_MTM\TradeInformation")
        paths = []
        sizes = []
        for file in files:
            paths.append(file.path)
            sizes.append(file.stat().st_size)
        df = pl.DataFrame({"paths": paths, "sizes": sizes})
        json_file = df.filter(pl.col("paths").str.contains(".json")).sort(by="sizes", descending = True)[0, 0]
        self.df = pl.read_json(json_file)
        
    def format_df(self):
        self.df = self.df.rename(self.TRADE_COLUMNS).select(self.TRADE_COLUMNS.values())
        for column in ["price_min", "price_max", "price_avg", "financial_volume", "trades_number", "trades_quantity"]:
            self.df = self.df.with_columns(
                pl.when(pl.col(column) == "")
                .then(None)
                .otherwise(pl.col(column))
                .keep_name()
            )
        self.df = self.df.with_columns(
            pl.col(["price_min", "price_max", "price_avg", "financial_volume"]).cast(pl.Float32),
            pl.col(["trades_number", "trades_quantity"]).cast(pl.Int32)
        )
        
    def write_df(self):
        self.df.write_ipc(self.WRITE_PATH + "\\" + "trades_deb_" + self.date.strftime("%Y-%m-%d") + ".feather")
if __name__ == "__main__":
    DAYS_CHECK = 7
    today = datetime.today()
    for days_subtract in range(1, DAYS_CHECK):
        date = busday_offset(datetime.today().strftime("%Y-%m-%d"), (-1)*days_subtract)
        date = date.item()
        date_string = date.strftime("%Y%m%d")
        print(date_string)
        if exist_up2data_day(date_string):
            print("1")
            if not day_already_copied(date):
                print("2")
                Debenture_trade(date)
                Debenture_db(date)
class Df_operations():
    
    WB_NAME = "RUN Crédito Privado.xlsm"
    SHEET_NAME = "Add RUN"
    INFO_LAST_LINE = "B4"
    RANGE_DRAFT = "I5:V"
    RANGE_FORMATTED = "C6:G2000"
    CELL_PRINT = RANGE_FORMATTED[:2]
    COLUMNS_NAME = ["ticker", "vol bid", "bid", "ask", "vol ask"]
    
    def __init__(self):
        pass

    def obtain_df(self):
        self.wb = xw.Book(self.WB_NAME)
        self.sheet = self.wb.sheets[self.SHEET_NAME]
        last_line = self.sheet.range(self.INFO_LAST_LINE).value
        
        my_date_handler = lambda year, month, day, **kwargs: f"{month:02d}/{year-2000:02d}"
        run_values = self.sheet.range(self.RANGE_DRAFT + str(int(last_line))).options(dates=my_date_handler).value
        
        self.df = pl.DataFrame(run_values[1:], orient = "row")
        self.columns_rename = run_values[0]
        
    def rename_columns(self):
        dict_rename_columns = {}
        old_columns_names = self.df.columns
        new_columns = []
        
        for index in range(0, len(self.columns_rename)):
            if self.columns_rename[index] is not None:
                new_columns.append(self.columns_rename[index])
                dict_rename_columns[old_columns_names[index]] = self.columns_rename[index]
                
        if ("ticker" not in new_columns):
            raise Personal_exception("Não há coluna 'ticker'")
        
        if ("ask" not in new_columns) and ("bid" not in new_columns):
            raise Personal_exception("Não há coluna 'bid' nem 'ask'")
                
        self.df = self.df.rename(dict_rename_columns)
        
        for name in self.COLUMNS_NAME:
            if name not in new_columns:
                self.df = self.df.with_columns(pl.lit(None).alias(name))

        if "vol bid/ask" in new_columns:
            self.df = self.df.with_columns(
                pl.col("vol bid/ask").alias("vol bid"),
                pl.col("vol bid/ask").alias("vol ask")
            )        
           
        exist_vencimento = "venc" in self.columns_rename
        if exist_vencimento:
            self.df = self.df.select(self.COLUMNS_NAME + ["venc"])
            self.include_maturity_lf()
        else:
            self.df = self.df.select(self.COLUMNS_NAME)

        self.str_columns = self.df.select(pl.col(pl.Utf8)).columns
        
    def str_columns_adjust(self):
        self.df = self.df.with_columns(
            pl.col(self.str_columns)
            .str.strip()
            .str.to_uppercase()
            .str.replace(",", ".")
        ).with_columns(
            pl.when(pl.col("ticker") == "")
            .then(None)
            .otherwise(pl.col("ticker"))
            .keep_name()
        )
        
    def include_maturity_lf(self):
        '''As of may/23, there was no debenture starting with "LF"'''

        self.df = self.df.with_columns(
            pl.when(pl.col("ticker").str.contains("^LF"))
            .then(pl.col("ticker") + " - " + pl.col("venc"))
            .otherwise(pl.col("ticker"))
            .alias("ticker")
        ).select(pl.exclude("venc"))
    
    def rows_to_exclude(self):
        self.test = self.df
        self.df = (self.df
                   .filter(
                       pl.any(pl.col(["bid", "ask"]).is_null().is_not())
                       &
                       pl.col("ticker").is_null().is_not()
                   )
                   .with_columns(
                       pl.col(["vol bid", "bid", "ask", "vol ask"]).fill_null(0)
                   )
                  )
        self.df = self.df.filter(
                        (pl.col("ticker")
                         .str.contains("ATIVO|TICKER|DEB[ÊE]NTURE|---|INFRA|SPREAD OVER|COMPRO|CPN|CRA$|CRI$").is_not()
                        )
                        &
                        (pl.all(
                            ~pl.col(["bid", "ask"])
                            .str.contains("[bB][iI][dD]|[aA][sS][kK]|VALUE|VALOR|##|IPCA|CDI|COMPRA|VENDA|INDIC 1MM"))
                        )
        )
        exist_duplicates = not (self.df.filter(pl.col("ticker").is_duplicated()).is_empty())
        if exist_duplicates:
            tickers_duplicateds = self.df.select(pl.col("ticker")).filter(pl.col("ticker").is_duplicated()).unique()
            
            raise Personal_exception(f"Há tickers duplicados:\n{tickers_duplicateds}")
    
    def bid_ask_adjust(self):
        for column_name in ["bid", "ask"]:
            if column_name in self.str_columns:
                self.df = self.df.with_columns(
                    pl.col(column_name)
                    .str.replace("%$|v$", "")
                    .str.strip()                                       
                ).with_columns(
                    pl.when(pl.col(column_name).is_in(["-", ""]))
                    .then(None)
                    .otherwise(pl.col(column_name))
                    .cast(pl.Float64)
                    .keep_name()
                )
            else:
                self.df = self.df.with_columns(pl.col(column_name).cast(pl.Float64))
            
        self.df = self.df.filter(
            (pl.col("bid") > 0)
            | (pl.col("ask") > 0)
        )
        #Minimum value is considered at the moment 180% CDI. Lower values might confuse with cdi + 1.5%
        minimum_value_to_divide = 1.8
        divide_by_100 = not self.df.filter(pl.any(pl.col(["bid", "ask"]) > minimum_value_to_divide)).is_empty()
        
        if divide_by_100:
            #Maximum value is considered at the moment as IPCA + 10%, higher values might confuse with cdi + 0.5%
            maximum_value_to_not_divide = 0.1
            not_divide_by_100 = not self.df.filter(
                                    ((pl.col("bid") > 0) & (pl.col("bid") < maximum_value_to_not_divide))
                                    |
                                    ((pl.col("ask") > 0) & (pl.col("ask") < maximum_value_to_not_divide))
                                    ).is_empty()
            if not_divide_by_100:
                message = "Alguns valores em bid/ask estão em % e outros não"
                raise Personal_exception(message)
            else:
                self.df = self.df.with_columns(pl.col(["bid", "ask"])/100)
        
        ask_higher_bid_df = (self.df
                             .filter(
                                 (pl.col("ask") >= pl.col("bid"))
                                 &
                                 (pl.col("bid") != 0)
                             )
                            )
        ask_higher_bid = not ask_higher_bid_df.is_empty()
                                 
        if ask_higher_bid:
            raise Personal_exception(f"Existe ask maior ou igual a bid\n\n{ask_higher_bid_df}")
            
    def volume_adjust(self):
        self.df_old = self.df
        for column_name in ["vol bid", "vol ask"]:
            if column_name in self.str_columns:
                self.df = self.df.with_columns(
                            pl.when(pl.col(column_name) == "")
                            .then(None)
                            .otherwise(pl.col(column_name))
                            .alias(column_name)
                        )
                
                self.df = self.df.with_columns(
                                    pl.col(column_name)
                                    .str.replace("[mM][lL][nN]|[mM][mM]$|[mM]|[kK]$", "")
                                    .str.replace("^~|^>", "")
                                    .str.strip()
                                    .cast(pl.Float32)
                                    /
                                    pl.when(pl.col("vol ask").str.contains("[kK]$"))
                                    .then(1000)
                                    .otherwise(1)
                                )
            
            
        #Minimum value is considered at the moment 100mm. Lower values might confuse with high volume
        minimum_value_to_divide = 100
        divide_by_1000 = not self.df.filter(pl.any(pl.col(["vol bid", "vol ask"]) > minimum_value_to_divide)).is_empty()
        
        minimum_value_to_divide = 1e5
        divide_by_million = not self.df.filter(pl.any(pl.col(["vol bid", "vol ask"]) > minimum_value_to_divide)).is_empty()
        
        if divide_by_million:
            #Maximum value is considered at the moment as 0.1mm. Higher values might confuse with 100k
            maximum_value_to_not_divide = 1e2
            not_divide_by_million = not self.df.filter(
                                    ((pl.col("vol bid") > 0) & (pl.col("vol bid") < maximum_value_to_not_divide))
                                    |
                                    ((pl.col("vol ask") > 0) & (pl.col("vol ask") < maximum_value_to_not_divide))
                                    ).is_empty()
            if not_divide_by_million:
                message = "Alguns valores em vol bid/vol ask estão em K e outros em MM"
                raise Personal_exception(message)
            else:
                self.df = self.df.with_columns(pl.col(["vol bid", "vol ask"])/1e6)
                
        elif divide_by_1000:
            #Maximum value is considered at the moment as 0.1mm. Higher values might confuse with 100k
            maximum_value_to_not_divide = 0.1
            not_divide_by_1000 = not self.df.filter(
                                    ((pl.col("vol bid") > 0) & (pl.col("vol bid") < maximum_value_to_not_divide))
                                    |
                                    ((pl.col("vol ask") > 0) & (pl.col("vol ask") < maximum_value_to_not_divide))
                                    ).is_empty()
            if not_divide_by_1000:
                message = "Alguns valores em vol bid/vol ask estão em K e outros em MM"
                raise Personal_exception(message)
            else:
                self.df = self.df.with_columns(pl.col(["vol bid", "vol ask"])/1000)
    
    def print_to_excel(self):
        self.sheet.range(self.RANGE_FORMATTED).value = ""
        self.sheet.range(self.CELL_PRINT).options(index=False, header=False).value = self.df.to_pandas()
try:
    run = Df_operations()
    run.obtain_df()
    run.rename_columns()
    run.str_columns_adjust()
    run.rows_to_exclude()
    run.bid_ask_adjust()
    run.volume_adjust()
    run.print_to_excel()

except Personal_exception as error:
    error_global = error
    print(error)
class Database_fixed_income():
    
    DEB_PATH = r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\Database renda fixa\db_deb.parquet"
    CRA_PATH = r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\Database renda fixa\db_cra.parquet"
    COLUMNS = ["ticker", "vencimento", "taxa_emitido", "indexador", "empresa", "pu_emitido",
               "isin", "data_emitido", "reais_emitido", "tipo", "incentivada", "artigo"]
    
    def __init__(self):
        self.get_deb_database()
        self.get_cra_database()
        self.concat_databases()
    
    def get_deb_database(self):
        self.df_deb = pl.read_parquet(self.DEB_PATH).select(pl.col(self.COLUMNS))

    def get_cra_database(self):
        self.df_cra = pl.read_parquet(self.CRA_PATH)
        
        self.df_cra = self.df_cra.with_columns(
            pl.lit(True).alias("incentivada"),
            pl.lit(None).cast(pl.Int16).alias("artigo")
        )

        self.df_cra = self.df_cra.select(pl.col(self.COLUMNS))
        
    def concat_databases(self):

        self.df = pl.concat([self.df_deb, self.df_cra])
class Anbima():
    
    PATH_ANBIMA_DEB = r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\Anbima\Debêntures\anbima_deb_"
    PATH_ANBIMA_CRA = r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\Anbima\Cra\anbima_cra_"
    PATH_ANBIMA_TIT = r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\Anbima\Títulos públicos\anbima_tit_"
    COLUMNS_CRA = ["ticker", "anbima", "referencia_b", "duration_anbima"]
    
    def __init__(self, yesterday, df):
        self.yesterday = yesterday
        self.yesterday_string = yesterday.strftime("%Y-%m-%d")
        self.df = df
        self.get_anbima_deb()
        self.get_anbima_cra()
        self.get_anbima_tit()
        
    def get_anbima_deb(self):
        while True:
            try:
                deb = pl.read_ipc(self.PATH_ANBIMA_DEB + self.yesterday_string + ".feather")
                break
            except FileNotFoundError:
                self.check_last_anbima()
        self.deb = deb
        self.df = self.df.join(deb, how="left", on="ticker")
        
    def check_last_anbima(self):
        import requests
        URL = 'https://www.anbima.com.br/informacoes/merc-sec-debentures/arqs/db'
        r = requests.get(URL + self.yesterday.strftime("%y%m%d") + ".txt")
        file_found = (r.status_code == 200)
        if file_found:
            raise Personal_exception(f"Último arquivo da anbima {self.yesterday_string} não baixado.")
        else:
            self.yesterday = busday_offset(self.yesterday_string, -1)
            self.yesterday = self.yesterday.item()
            self.yesterday_string = self.yesterday.strftime("%Y-%m-%d")
    
    def get_anbima_cra(self):
        cra = pl.read_ipc(self.PATH_ANBIMA_CRA + self.yesterday_string + ".feather")
        cra = cra.select(pl.col(self.COLUMNS_CRA))
        self.cra = cra
        self.df = self.df.join(cra, how="left", on="ticker", suffix="_right")
        
        for column in ["anbima", "referencia_b", "duration_anbima"]:
            self.df = self.df.with_columns(
                pl.when((pl.col(column).is_null()) & (~pl.col(column + "_right").is_null()))
                .then(pl.col(column + "_right"))
                .otherwise(pl.col(column))
                .alias(column)
            ).drop(column + "_right")
        
    def get_anbima_tit(self):
        tit = pl.read_ipc(self.PATH_ANBIMA_TIT + self.yesterday_string + ".feather")
        tit = tit.with_columns(
            ("TIT: " + pl.col("ticker") + " " + pl.col("vencimento").dt.strftime("%y")).alias("ticker")
        )
        self.tit = tit
        
        columns = []
        for column in self.df.columns:
            if column not in self.tit.columns:
                columns.append(column)
                self.tit = self.tit.with_columns(pl.lit(None).alias(column))

        self.tit = self.tit.select(pl.col(self.df.columns))
        self.tit = self.tit.with_columns(
            pl.col(["pu_emitido", "taxa_emitido", "reais_emitido", "duration_anbima"])
            .cast(pl.Float32),
            pl.col("data_emitido").cast(pl.Date),
            pl.lit("Título público").alias("tipo"),
            pl.col(["indexador", "isin", "empresa", "referencia_b"]).cast(pl.Utf8),
            pl.col("incentivada").cast(pl.Boolean),
            pl.col("artigo").cast(pl.Int16)
        )
        self.df = pl.concat([self.tit, self.df])
class Workbook_info():
    
    WB_NAME = "RUN Crédito Privado.xlsm"
    SHEET_NEW_RUN = "Add RUN"
    SHEET_EXTRA = "RUN"
    RANGE_MAX_LINE = "B2:B3"
    RANGE_NEW_RUN = "C6:G"
    RANGE_EXTRA = "A18:F"
    LAST_LINE_DELETE = "2000"
    CLIENT_CELL = "C4"
    RANGE_NEW_RUN_DELETE = RANGE_NEW_RUN + LAST_LINE_DELETE
    RANGE_FORMATTED = "H4:L" + LAST_LINE_DELETE
    RANGE_DRAFT = "I5:V" + LAST_LINE_DELETE
    
    def __init__(self):
        self.obtain_sheets()
        self.obtain_new_run()
        self.obtain_extras()        
        
    def obtain_sheets(self):
        self.wb = xw.Book(self.WB_NAME)
        self.sheet_new_run = self.wb.sheets[self.SHEET_NEW_RUN]
        self.sheet_extra = self.wb.sheets[self.SHEET_EXTRA]
        self.lines = self.sheet_new_run.range(self.RANGE_MAX_LINE).value
        
    def obtain_new_run(self):
        max_line_new_run = str(int(self.lines[1]))
        self.exist_new_run = self.lines[1] > 5
        if self.exist_new_run:
            self.new_run = self.sheet_new_run.range(self.RANGE_NEW_RUN + max_line_new_run).value
            self.client = self.sheet_new_run.range(self.CLIENT_CELL).value
            if self.client is None:
                raise Personal_exception("Cliente está vazio")
            else:
                self.client = self.client.upper()
        
    def obtain_extras(self):
        line_extra = str(int(self.lines[0]))
        self.exist_extra = self.lines[0] > 17
        if self.exist_extra:
            self.extra_values = self.sheet_extra.range(self.RANGE_EXTRA + line_extra).value
        
    def clean_lines(self):
        cells_to_delete = [self.CLIENT_CELL, self.RANGE_NEW_RUN_DELETE, self.RANGE_DRAFT]
        cells_to_delete = ", ".join(cells_to_delete)
        self.sheet_new_run.range(cells_to_delete).value = ""
class Data_new_run():
    
    NEW_COLUMNS_NAMES = ["ticker", "vol bid", "bid", "ask", "vol ask", "cliente"]
    FLOAT_COLUMNS_DEFAULT = NEW_COLUMNS_NAMES[1:-1]
    STR_COLUMNS_DEFAULT = [NEW_COLUMNS_NAMES[0], NEW_COLUMNS_NAMES[-1]]
    
    def __init__(self, wb):
        self.wb = wb
        self.obtain_df()
        self.rename_columns()
        self.check_duplicates()
        self.check_columns_types()
        
    def obtain_df(self):
        empty_client = (self.wb.new_run[0][0] == None)
        df = pl.DataFrame(self.wb.new_run, orient = "row")
        self.df = df.with_columns(pl.lit(self.wb.client).alias("cliente"))
    
    def rename_columns(self):
        dict_rename_columns = {}
        old_columns_names = self.df.columns

        for index in range(0, 6):
            dict_rename_columns[old_columns_names[index]] = self.NEW_COLUMNS_NAMES[index]

        self.df = self.df.rename(dict_rename_columns).with_columns(pl.col(pl.Boolean).cast(pl.Float64))

    def check_duplicates(self):
        exist_duplicates = not (self.df.filter(pl.col("ticker").is_duplicated()).is_empty())
        if exist_duplicates:
            tickers_duplicateds = self.df.select(pl.col("ticker")).filter(pl.col("ticker").is_duplicated()).unique()
            raise Personal_exception(f"Há tickers duplicados:\n{tickers_duplicateds}")
        
    def check_columns_types(self):
        str_columns = self.df.select(pl.col(pl.Utf8)).columns
        wrong_columns = []
        for column in str_columns:
            if column not in self.STR_COLUMNS_DEFAULT:
                wrong_columns.append(column)
        exist_wrong_column = len(wrong_columns) > 0
        if exist_wrong_column:
            error_msg = "A(s) col(s): " + ", ".join(wrong_columns)\
                        + " está(ão) como número, talvez haja uma celula errada nela(s)"
            raise Personal_exception(error_msg)
class Runs_consolidated():
    
    TODAY_STRING = datetime.today().strftime("%Y-%m-%d")
    PATH_FEATHER = r"T:\Mesa Operacoes\Credito\Narizinho\Rotinas - arquivos\RUNs\run_" + TODAY_STRING + ".feather"
    
    def __init__(self, df_run):
        self.df_run = df_run
        
        self.read_file()
        self.concatenate_files()
        if not self.df_runs.is_empty():
            self.duplicated_rows()
            self.write_concat_file()
            self.consolidate_files()
        
    def read_file(self):
        self.exist_previous_run = True
        try:
            self.df_runs = pl.read_ipc(self.PATH_FEATHER)
        except FileNotFoundError:
            self.exist_previous_run = False
            
    def concatenate_files(self):
        if self.df_run.is_empty():
            if not self.exist_previous_run:
                self.df_runs = pl.DataFrame()
        else:
            if self.exist_previous_run:
                self.df_runs = pl.concat([self.df_runs, self.df_run])
            else:
                self.df_runs = self.df_run
            
    def duplicated_rows(self):
        duplicated = self.df_runs.filter(pl.lit(self.df_runs.is_duplicated())).unique(subset="ticker")
        if not duplicated.is_empty():
            error_msg = (f"Linhas abaixo já existentes no consolidado atual:\n\n{duplicated}")
            raise Personal_exception(error_msg)
            
    def write_concat_file(self):
        self.df_runs = self.df_runs.sort(by=["ticker", "cliente"])
        self.df_runs.write_ipc(self.PATH_FEATHER)
        
    def consolidate_files(self):
        self.df_runs = (self.df_runs.with_columns(
            pl.col("bid").filter(pl.col("bid") > 0).min().over("ticker").alias("bid_min").fill_null(0),
            pl.col("ask").max().over("ticker").alias("ask_max")
            )
         .lazy()
         .groupby("ticker")
         .agg(
             pl.col("vol bid").filter((pl.col("bid_min") == pl.col("bid")) & (pl.col("bid") > 0)).sum().alias("vol_bid"),
             pl.col("bid_min").first(),
             pl.col("ask_max").first(),
             pl.col("vol ask").filter((pl.col("ask_max") == pl.col("ask")) & (pl.col("ask") > 0)).sum().alias("vol_ask"),
             pl.col("cliente").filter((pl.col("bid_min") == pl.col("bid")) & (pl.col("bid") > 0)).alias("cliente_bid"),
             pl.col("cliente").filter((pl.col("ask_max") == pl.col("ask")) & (pl.col("ask") > 0)).alias("cliente_ask")
         )
        ).collect().with_columns(
            pl.col("cliente_bid").arr.join(", "),
            pl.col("cliente_ask").arr.join(", "),
        ).sort("ticker")
        class Data_extra():
    
    def __init__(self, wb):
        self.wb = wb
        
        self.obtain_extras()
        pass
        
    def obtain_extras(self):
        self.extras = pl.DataFrame(self.wb.extra_values, orient = "row")
        
    def kill_orders(self):
        self.extras.filter(pl.col("bid").str.contains("[mM]"))
        pass
    
    def convert_interested_tickers(self):
        pass
class Joined_info():
    
    SHEET_CONSOLIDADO = "Consolidado"
    RANGE_PRINT_CONSOLIDADO = "A3"
    COLUMNS_ORDER = ["ticker", "vol_bid", "bid_min", "ask_max", "vol_ask", "anbima", "cliente_bid", "cliente_ask", "empresa",
                     "tipo", "indexador", "vencimento", "duration_anbima", "referencia_b", "incentivada"]
    
    def __init__(self, database, runs, workbook):
        self.df_db = database
        self.df_runs = runs
        self.wb = workbook
        
        self.join_info()
        self.write_sheet()
        self.wb.clean_lines()
        
    def join_info(self):
        self.df = self.df_db.join(self.df_runs, how='outer', on="ticker")
        self.df = self.df.select(pl.col(self.COLUMNS_ORDER))
        
    def write_sheet(self):
        self.wb.wb.sheets[self.SHEET_CONSOLIDADO].range(self.RANGE_PRINT_CONSOLIDADO)\
        .options(index=False, header=False).value = self.df.to_pandas()
class Run_final():
    
    def __init__(self, df_extra):
        self.extra = df_extra
        self.consolidate_dfs()
        
    def consolidate_dfs(self):
        pass
    
    def create_closest_anbima(self):
        pass
    
try:
    today = datetime.today()
    yesterday = busday_offset(today.strftime("%Y-%m-%d"), -1)
    yesterday = yesterday.item()
    
    database = Database_fixed_income()
    df_db = database.df
    
    anbima = Anbima(yesterday, df_db)
    df_db = anbima.df
    
    df_new_run = pl.DataFrame()
    wb = Workbook_info()
    if wb.exist_new_run:
        new_run = Data_new_run(wb)
        df_new_run = new_run.df
        
    wb.exist_extra = False #por hora, cagar para os extras
    if wb.exist_extra:
        extra = Data_extra(wb)
        
    runs = Runs_consolidated(df_run=df_new_run)

    final_info = Joined_info(database=df_db, runs=runs.df_runs, workbook=wb)
    
except Personal_exception as error:


